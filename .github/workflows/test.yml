name: Test Clarity Gauge System

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  wokwi-integration-tests:
    runs-on: ubuntu-latest
    name: Integration Tests with Wokwi
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache PlatformIO dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.platformio/.cache
            ~/.platformio/penv
          key: ${{ runner.os }}-pio-${{ hashFiles('**/platformio.ini') }}
          restore-keys: |
            ${{ runner.os }}-pio-

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install PlatformIO Core
        run: pip install --upgrade platformio

      - name: Build firmware for testing
        run: pio run -e debug-local

      - name: Test with Wokwi
        uses: wokwi/wokwi-ci-action@v1
        with:
          token: ${{ secrets.WOKWI_CLI_TOKEN }}
          path: /
          scenario: test_scenarios.yaml
          expect_text: 'SplashPanel'
          timeout: 120000

  unit-tests:
    runs-on: ubuntu-latest
    name: Unit Tests
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache PlatformIO dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.platformio/.cache
            ~/.platformio/penv
          key: ${{ runner.os }}-pio-test-${{ hashFiles('**/platformio.ini') }}
          restore-keys: |
            ${{ runner.os }}-pio-test-

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install PlatformIO Core
        run: pip install --upgrade platformio

      - name: Run unit tests
        run: pio test -e test --verbose

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            .pio/test/
            test_report.xml

  build-verification:
    runs-on: ubuntu-latest
    name: Build Verification
    strategy:
      matrix:
        env: [debug-local, debug-upload, release]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache PlatformIO dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.platformio/.cache
            ~/.platformio/penv
          key: ${{ runner.os }}-pio-${{ matrix.env }}-${{ hashFiles('**/platformio.ini') }}
          restore-keys: |
            ${{ runner.os }}-pio-${{ matrix.env }}-

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install PlatformIO Core
        run: pip install --upgrade platformio

      - name: Build ${{ matrix.env }}
        run: pio run -e ${{ matrix.env }}

      - name: Check program size
        run: pio run -e ${{ matrix.env }} --target size

      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware-${{ matrix.env }}
          path: |
            .pio/build/${{ matrix.env }}/*.bin
            .pio/build/${{ matrix.env }}/*.elf