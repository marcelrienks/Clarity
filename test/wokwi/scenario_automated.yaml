name: 'Clarity Automated Integration Test'
version: 1
steps:
  # Step 1: System Startup
  # - System initialization completes
  # - Splash panel loads with day theme  
  # - Oil panel loads automatically after splash
  - wait-serial: '[T] System ready'
  - wait-serial: '[T] Panel transition requested: OemOilPanel'
  - wait-serial: '[T] SplashPanel loaded successfully'
  - wait-serial: '[T] Pressure reading:'
  - wait-serial: '[T] Temperature reading:'
  - delay: 1000ms
  
  # Step 2: Real-time Sensor Interaction
  # Skipped - requires analog pot inputs not available in automation
  
  # Step 3: Theme Change (Non-Blocking Style Trigger)
  # - Night theme applied instantly to Oil Panel
  # - Oil panel continues displaying without reload
  # - STYLE trigger maintains and doesn't block restoration
  - set-control:
      part-id: trigger_btn4  # GPIO 33 - Lights
      control: pressed
      value: 1
  - wait-serial: '[T] LightsOnActivate() - Setting NIGHT theme'
  - wait-serial: '[T] SetTheme() called'
  # Note: Panel should NOT reload, only theme changes
  - delay: 1000ms
  
  # Step 4: Panel Loading Trigger (IMPORTANT Priority)
  # - Lock panel loads with IMPORTANT priority
  # - Lights trigger still active, night theme maintained
  # - Lock panel displays with night theme
  - set-control:
      part-id: trigger_btn3  # GPIO 27 - Lock
      control: pressed
      value: 1
  - wait-serial: '[T] LockEngagedActivate() - Loading LOCK panel'
  - wait-serial: '[T] Panel transition requested: LockPanel'
  - wait-serial: '[T] LockPanel loaded successfully'
  - delay: 1000ms
  
  # Step 5: Higher Priority Key Trigger Override
  # - Key panel loads with CRITICAL priority (overrides lock)
  # - Red key icon displayed with night theme
  - set-control:
      part-id: trigger_btn2  # GPIO 26 - Key Not Present
      control: pressed
      value: 1
  - wait-serial: '[T] KeyNotPresentActivate() - Loading KEY panel'
  - wait-serial: '[T] Panel transition requested: KeyPanel'
  - wait-serial: '[T] Key icon color set to RED'
  - wait-serial: '[T] KeyPanel loaded successfully'
  - delay: 1000ms
  
  # Step 6: Same Priority Key State Transition
  # - Key panel reloads with green icon
  # - Key Not Present automatically deactivates
  - set-control:
      part-id: trigger_btn1  # GPIO 25 - Key Present
      control: pressed
      value: 1
  - wait-serial: '[T] KeyPresentActivate() - Loading KEY panel'
  - wait-serial: '[T] Panel transition requested: KeyPanel'
  - wait-serial: '[T] Key icon color set to GREEN'
  - wait-serial: '[T] KeyPanel loaded successfully'
  - delay: 1000ms
  
  # Step 7: Key State Reversal and Panel Persistence
  # - Key Not Present already deactivated (automatically when Key Present activated)
  # - Key panel remains with green icon (no state change)
  # Note: This step demonstrates persistence - no action needed
  - delay: 1500ms  # Increased delay for GPIO stabilization
  
  # Step 8: Priority-Based Restoration Chain
  # - Key Present deactivates → KeyNotPresent automatically activates (same type)
  # - Key panel reloads with red icon
  # Note: Both key triggers are mutually exclusive by sensor design
  - set-control:
      part-id: trigger_btn1  # GPIO 25 - Key Present
      control: pressed
      value: 0  # Deactivate
  - wait-serial: '[T] KeyNotPresentActivate() - Loading KEY panel'
  - wait-serial: '[T] Panel transition requested: KeyPanel'
  - wait-serial: '[T] Key icon color set to RED'
  - wait-serial: '[T] KeyPanel loaded successfully'
  - delay: 1000ms
  
  # Step 9: Error System Integration
  # - Error panel loads with CRITICAL priority
  # - Overrides all other panels
  # - Displays with night theme
  - set-control:
      part-id: btn2  # Debug Error button
      control: pressed
      value: 1
  - delay: 500ms  # Increased button press duration for reliable error processing
  - set-control:
      part-id: btn2
      control: pressed
      value: 0
  - delay: 500ms  # Allow button processing time
  - wait-serial: '[T] Error reported: ERROR'
  - wait-serial: '[T] ErrorOccurredActivate() - Loading ERROR panel'
  - wait-serial: '[T] Panel transition requested: ErrorPanel'
  - wait-serial: '[T] ErrorPanel loaded successfully'
  - delay: 1000ms
  
  # Step 10: Error Navigation
  # - Short press cycles through errors (must be 500-1500ms for ActionHandler)
  - set-control:
      part-id: btn1  # Action button - short press
      control: pressed
      value: 1
  - delay: 800ms  # Hold for 800ms - within ActionHandler's SHORT_PRESS range (500-1500ms)
  - set-control:
      part-id: btn1
      control: pressed
      value: 0
  - wait-serial: '[T] Button action detected: SHORT_PRESS'
  - wait-serial: '[T] ErrorPanel: Calling HandleShortPress() on valid panel instance'
  - wait-serial: '[T] ErrorPanel::HandleShortPress() - Manual cycling to next error'
  - delay: 500ms
  
  # Step 11: Error Resolution and Priority Restoration
  # - Long press clears errors
  # - Error trigger deactivates
  # - Key panel loads (highest priority - KeyNotPresent still active)
  - set-control:
      part-id: btn1  # Action button - long press
      control: pressed
      value: 1
  - delay: 2000ms  # Hold for 2000ms - clearly in ActionHandler's LONG_PRESS range (>1500ms)
  - set-control:
      part-id: btn1
      control: pressed
      value: 0
  - wait-serial: '[T] Button action detected: LONG_PRESS'
  - wait-serial: '[T] ErrorPanel: Calling HandleLongPress() on valid panel instance'
  - wait-serial: '[T] ErrorPanel: Long press - clearing all errors and exiting panel'
  # Key panel should be restored since KeyNotPresent trigger is still active (CRITICAL priority)
  - wait-serial: '[T] Panel transition requested: KeyPanel'
  - wait-serial: '[T] KeyPanel loaded successfully'
  - delay: 1000ms
  
  # Step 12: Complete Trigger Chain Restoration
  # - First clear KeyNotPresent by activating KeyPresent
  # - Then deactivate Lock → Oil panel loads  
  # - All PANEL triggers inactive, restore to user panel
  # - Oil panel displays with night theme
  
  # Activate Key Present to clear Key Not Present
  - set-control:
      part-id: trigger_btn1  # GPIO 25 - Key Present
      control: pressed
      value: 1  # Activate
  - wait-serial: '[T] KeyPresentActivate() - Loading KEY panel'
  - delay: 500ms
  
  # Now deactivate both Key Present and Lock
  - set-control:
      part-id: trigger_btn1  # GPIO 25 - Key Present
      control: pressed
      value: 0  # Deactivate
  - delay: 500ms
  
  - set-control:
      part-id: trigger_btn3  # GPIO 27 - Lock
      control: pressed
      value: 0  # Deactivate
  # When lock disengages, KeyNotPresent (still active) immediately takes over
  - wait-serial: '[T] KeyNotPresentActivate() - Loading KEY panel'
  - wait-serial: '[T] Panel transition requested: KeyPanel'
  - wait-serial: '[T] KeyPanel loaded successfully'
  - delay: 500ms
  
  # Now we need to clear all triggers to get back to Oil panel
  # Deactivate KeyNotPresent sensor to allow restoration to Oil panel
  - set-control:
      part-id: trigger_btn2  # GPIO 26 - Key Not Present
      control: pressed
      value: 0  # Deactivate KeyNotPresent sensor
  - wait-serial: '[T] CheckRestoration() called'
  - wait-serial: '[T] No blocking interrupts - restoring to ''OemOilPanel'''
  - wait-serial: '[T] OemOilPanel loaded successfully'
  - delay: 1000ms
  
  # Step 13: Theme Restoration to Day Mode
  # - Day theme applied to Oil Panel
  # - Oil panel continues without reload
  # - Instant theme transition
  - set-control:
      part-id: trigger_btn4  # GPIO 33 - Lights
      control: pressed
      value: 0  # Deactivate (return to day)
  - wait-serial: '[T] LightsOffActivate() - Setting DAY theme'
  - wait-serial: '[T] SetTheme() called'
  # Note: Panel should NOT reload, only theme changes
  - delay: 1000ms
  
  # Step 14: Configuration Access via Button Action
  # - Long press loads Config panel with main preference settings
  - set-control:
      part-id: btn1  # Action button - long press
      control: pressed
      value: 1
  - delay: 2000ms  # Hold for 2000ms - clearly in ActionHandler's LONG_PRESS range (>1500ms)
  - set-control:
      part-id: btn1
      control: pressed
      value: 0
  - wait-serial: '[T] Button action detected: LONG_PRESS'
  - wait-serial: '[T] Panel transition requested: ConfigPanel'
  - wait-serial: '[T] ConfigPanel loaded successfully'
  - delay: 1000ms
  
  # Step 15: Configuration Navigation to Theme Settings
  # - Short press repeatedly → Navigate through options until theme settings reached
  - set-control:
      part-id: btn1  # Action button - short press
      control: pressed
      value: 1
  - delay: 800ms  # Hold for 800ms - within ActionHandler's SHORT_PRESS range (500-1500ms)
  - set-control:
      part-id: btn1
      control: pressed
      value: 0
  - delay: 300ms  # Allow button processing time
  - wait-serial: '[T] Button action detected: SHORT_PRESS'
  # Skip individual navigation - ConfigPanel navigates directly to theme settings
  - delay: 500ms
  
  # Theme Settings is already highlighted from the first navigation
  - delay: 500ms
  
  # Step 16: Theme Submenu Access
  # - Long press → Theme option settings displayed
  - set-control:
      part-id: btn1  # Action button - long press
      control: pressed
      value: 1
  - delay: 2000ms  # Hold for 2000ms - clearly in ActionHandler's LONG_PRESS range (>1500ms)
  - set-control:
      part-id: btn1
      control: pressed
      value: 0
  - wait-serial: '[T] Button action detected: LONG_PRESS'
  - wait-serial: '[T] ConfigPanel: Entering theme submenu'
  - wait-serial: '[T] ConfigPanel: Theme submenu loaded'
  - delay: 500ms
  
  # Step 17: Theme Selection Navigation
  # - Short press navigation → Cycle through theme options until Night selected
  - set-control:
      part-id: btn1  # Action button - short press
      control: pressed
      value: 1
  - delay: 800ms  # Hold for 800ms - within ActionHandler's SHORT_PRESS range (500-1500ms)
  - set-control:
      part-id: btn1
      control: pressed
      value: 0
  - wait-serial: '[T] Button action detected: SHORT_PRESS'
  - wait-serial: '[T] ConfigPanel: Night theme option highlighted'
  - delay: 500ms
  
  # Step 18: Theme Setting Application
  # - Long press → Apply night theme and return to main preference settings
  - set-control:
      part-id: btn1  # Action button - long press
      control: pressed
      value: 1
  - delay: 2000ms  # Hold for 2000ms - clearly in ActionHandler's LONG_PRESS range (>1500ms)
  - set-control:
      part-id: btn1
      control: pressed
      value: 0
  - wait-serial: '[T] Button action detected: LONG_PRESS'
  - wait-serial: '[T] ConfigPanel: Applying night theme setting'
  - wait-serial: '[T] ConfigPanel: Returned to main config menu'
  - delay: 500ms
  
  # Step 19: Configuration Exit Navigation
  # - Short press repeatedly → Navigate through options until Exit reached
  - set-control:
      part-id: btn1  # Action button - short press
      control: pressed
      value: 1
  - delay: 800ms  # Hold for 800ms - within ActionHandler's SHORT_PRESS range (500-1500ms)
  - set-control:
      part-id: btn1
      control: pressed
      value: 0
  - wait-serial: '[T] Button action detected: SHORT_PRESS'
  - wait-serial: '[T] ConfigPanel: Exit option highlighted'
  - delay: 500ms
  
  # Step 20: Return to Oil Panel with Applied Settings
  # - Long press → Oil panel loads with night theme
  - set-control:
      part-id: btn1  # Action button - long press
      control: pressed
      value: 1
  - delay: 2000ms  # Hold for 2000ms - clearly in ActionHandler's LONG_PRESS range (>1500ms)
  - set-control:
      part-id: btn1
      control: pressed
      value: 0
  - wait-serial: '[T] Button action detected: LONG_PRESS'
  - wait-serial: '[T] ConfigPanel: Executing exit function'
  - wait-serial: '[T] Panel transition requested: OemOilPanel'
  - wait-serial: '[T] OemOilPanel loaded successfully'
  - delay: 1000ms
  
  # Final cleanup - ensure all triggers are released
  - set-control:
      part-id: trigger_btn1
      control: pressed
      value: 0
  - set-control:
      part-id: trigger_btn2
      control: pressed
      value: 0
  - set-control:
      part-id: trigger_btn3
      control: pressed
      value: 0
  - set-control:
      part-id: trigger_btn4
      control: pressed
      value: 0
  - delay: 1000ms