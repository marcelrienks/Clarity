ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:1156
load:0x40078000,len:11456
ho 0 tail 12 room 4
load:0x40080400,len:2972
entry 0x400805dc
[  1972][D][esp32-hal-cpu.c:244] setCpuFrequencyMhz(): PLL: 480 / 2 = 240 Mhz, APB: 80000000 Hz
[  2009][V][main.cpp:143] setup(): setup() called
[  2014][I][main.cpp:144] setup(): Starting Clarity application...
[  2021][V][main.cpp:35] initializeServices(): initializeServices() called
[  2028][I][main.cpp:36] initializeServices(): Starting Clarity service initialization with dual factory pattern...
[  2039][V][provider_factory.cpp:78] CreateDeviceProvider(): CreateDeviceProvider() called
[  2049][V][device_provider.cpp:10] DeviceProvider(): DeviceProvider() constructor called
[  2057][V][device_provider.cpp:76] prepare(): prepare() called
[  2064][I][device_provider.cpp:77] prepare(): init...
[  7911][I][device_provider.cpp:95] prepare(): Display configuration...
[  7937][I][device_provider.cpp:106] prepare(): DeviceProvider hardware initialization completed successfully
[  7948][V][provider_factory.cpp:13] CreateGpioProvider(): CreateGpioProvider() called
[  7956][V][provider_factory.cpp:37] CreateDisplayProvider(): CreateDisplayProvider() called
[  7965][V][lvgl_display_provider.cpp:7] LvglDisplayProvider(): LvglDisplayProvider() constructor called
[  7975][V][manager_factory.cpp:21] ManagerFactory(): ManagerFactory(IProviderFactory*) constructor called
[  7986][V][manager_factory.cpp:146] CreatePreferenceManagerImpl(): CreatePreferenceManager() called
[  7995][V][preference_manager.cpp:11] Init(): Init() called
[  8003][I][preference_manager.cpp:30] Init(): PreferenceManager service started successfully - configuration loaded and ready
[  8015][V][preference_manager.cpp:52] LoadConfig(): LoadConfig() called
[  8022][V][preference_manager.cpp:53] LoadConfig(): LoadConfig() called
[  8030][E][Preferences.cpp:483] getString(): nvs_get_str len fail: config NOT_FOUND
[  8038][W][preference_manager.cpp:58] LoadConfig(): No config found, creating default
[  8047][V][preference_manager.cpp:39] CreateDefaultConfig(): CreateDefaultConfig() called
[  8056][V][preference_manager.cpp:40] CreateDefaultConfig(): CreateDefaultConfig() called
[  8064][V][preference_manager.cpp:132] SaveConfig(): SaveConfig() called
[  8072][V][preference_manager.cpp:133] SaveConfig(): SaveConfig() called
[  8079][E][Preferences.cpp:96] remove(): nvs_erase_key fail: config NOT_FOUND
[  8097][I][preference_manager.cpp:162] SaveConfig(): Configuration saved successfully (210 bytes written)
[  8107][I][preference_manager.cpp:167] SaveConfig(): System configuration updated and persisted to NVS storage
[  8118][V][preference_manager.cpp:52] LoadConfig(): LoadConfig() called
[  8125][V][preference_manager.cpp:53] LoadConfig(): LoadConfig() called
[  8143][V][manager_factory.cpp:129] CreateStyleManagerImpl(): CreateStyleManager() called
[  8152][V][style_manager.cpp:12] StyleManager(): StyleManager() constructor called
[  8160][V][style_manager.cpp:210] SetPreferenceService(): SetPreferenceService() called
[  8169][V][manager_factory.cpp:239] CreateInterruptManager(): CreateInterruptManager() called
[  8178][V][manager_factory.cpp:163] CreateInterruptManagerImpl(): CreateInterruptManager() called
[  8187][V][interrupt_manager.cpp:27] Init(): Init() called
[  8193][V][trigger_handler.cpp:22] TriggerHandler(): TriggerHandler() constructor called
[  8202][V][lock_sensor.cpp:11] LockSensor(): LockSensor() constructor called
[  8210][V][lights_sensor.cpp:11] LightsSensor(): LightsSensor() constructor called
[  8218][V][debug_error_sensor.cpp:13] DebugErrorSensor(): DebugErrorSensor() constructor called
[  8227][V][gpio_provider.cpp:18] PinMode(): PinMode() called
[  8234][I][key_present_sensor.cpp:34] Init(): KeyPresentSensor initialization completed on GPIO 25, initial state: NOT_PRESENT
[  8246][V][gpio_provider.cpp:18] PinMode(): PinMode() called
[  8252][I][key_not_present_sensor.cpp:34] Init(): KeyNotPresentSensor initialization completed on GPIO 26, initial state: PRESENT
[  8265][V][lock_sensor.cpp:19] Init(): Init() called
[  8270][V][gpio_provider.cpp:18] PinMode(): PinMode() called
[  8276][I][lock_sensor.cpp:32] Init(): LockSensor initialization completed on GPIO 27 with coordinated interrupts
[  8287][V][lights_sensor.cpp:19] Init(): Init() called
[  8293][V][gpio_provider.cpp:18] PinMode(): PinMode() called
[  8299][I][lights_sensor.cpp:29] Init(): LightsSensor initialization completed on GPIO 33 with coordinated interrupts
[  8311][V][debug_error_sensor.cpp:19] Init(): Init() called
[  8317][V][gpio_provider.cpp:18] PinMode(): PinMode() called
[  8332][I][trigger_handler.cpp:53] TriggerHandler(): TriggerHandler created and initialized 5 GPIO sensors: KeyPresent, KeyNotPresent, Lock, Lights, DebugError (debug build)
[  8348][V][action_handler.cpp:21] ActionHandler(): ActionHandler() constructor called
[  8357][V][button_sensor.cpp:11] ButtonSensor(): ButtonSensor() constructor called
[  8365][V][button_sensor.cpp:18] Init(): Init() called
[  8371][V][gpio_provider.cpp:18] PinMode(): PinMode() called
[  8377][I][button_sensor.cpp:23] Init(): GPIO 32 initial state: LOW (released)
[  8385][I][button_sensor.cpp:25] Init(): ButtonSensor initialization completed on GPIO 32
[  8394][I][action_handler.cpp:29] ActionHandler(): ActionHandler created and initialized ButtonSensor
[  8404][I][trigger_handler.cpp:91] RegisterTrigger(): Registered trigger 'key_present' (type: 0, priority: 2)
[  8415][I][trigger_handler.cpp:91] RegisterTrigger(): Registered trigger 'key_not_present' (type: 0, priority: 2)
[  8426][I][trigger_handler.cpp:91] RegisterTrigger(): Registered trigger 'lock' (type: 0, priority: 1)
[  8436][I][trigger_handler.cpp:91] RegisterTrigger(): Registered trigger 'lights' (type: 1, priority: 0)
[  8446][I][trigger_handler.cpp:91] RegisterTrigger(): Registered trigger 'error' (type: 0, priority: 2)
[  8457][I][action_handler.cpp:78] RegisterAction(): Registered action 'short_press' (press type: 0) - total actions now: 1
[  8469][I][action_handler.cpp:78] RegisterAction(): Registered action 'long_press' (press type: 1) - total actions now: 2
[  8480][I][interrupt_manager.cpp:102] RegisterSystemInterrupts(): Registered 5 system triggers and 2 system actions
[  8492][I][interrupt_manager.cpp:67] Init(): InterruptManager initialized with new Trigger/Action architecture
[  8502][V][manager_factory.cpp:208] CreatePanelManager(): CreatePanelManager() called
[  8511][V][manager_factory.cpp:80] CreatePanelManagerImpl(): CreatePanelManagerImpl() called
[  8520][V][panel_factory.cpp:16] Instance(): Instance() called
[  8526][V][component_factory.cpp:15] Instance(): Instance() called
[  8533][V][panel_manager.cpp:45] PanelManager(): PanelManager() constructor called
[  8541][V][panel_manager.cpp:29] Init(): Init() called
[  8587][I][panel_manager.cpp:32] Init(): PanelManager initialization completed
[  8595][V][manager_factory.cpp:189] CreateErrorManagerImpl(): CreateErrorManager() called
[  8604][V][error_manager.cpp:8] Instance(): Instance() called
[  8610][I][main.cpp:136] initializeServices(): All services initialized successfully
[T] System ready
[  8619][V][style_manager.cpp:33] InitializeStyles(): InitializeStyles() called
[T] SetTheme() called
[  8628][V][style_manager.cpp:179] GetColours(): GetColours() called
[  8636][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[  8644][W][style_manager.cpp:80] ApplyThemeToScreen(): StyleManager not initialized, skipping theme application
[T] Panel transition requested: OemOilPanel
[  8696][I][panel_manager.cpp:143] CreateAndLoadPanel(): Loading panel with splash transition: OemOilPanel
[  8709][V][panel_manager.cpp:264] CreateAndLoadPanelWithSplash(): CreateAndLoadPanelWithSplash() called for: OemOilPanel
[  8721][V][panel_manager.cpp:156] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() called for: SplashPanel
[  8732][V][panel_manager.cpp:87] CreatePanel(): CreatePanel() called for: SplashPanel
[  8740][V][panel_factory.cpp:23] CreateSplashPanel(): CreateSplashPanel() called
[  8748][V][component_factory.cpp:15] Instance(): Instance() called
[  8755][V][splash_panel.cpp:21] SplashPanel(): SplashPanel constructor called
[  8763][V][splash_panel.cpp:172] SetManagers(): SetManagers() called
[  8770][V][splash_panel.cpp:184] SetPreferenceService(): SetPreferenceService() called
[  8778][V][splash_panel.cpp:50] Init(): Init() called
[  8784][V][lvgl_display_provider.cpp:27] CreateScreen(): CreateScreen() called
[  8792][V][lvgl_display_provider.cpp:27] CreateScreen(): CreateScreen() called
[  8801][I][panel_manager.cpp:239] CreateAndLoadPanelDirect(): PanelManager: About to call ApplyCurrentTheme for panel: SplashPanel
[  8814][I][style_manager.cpp:217] ApplyCurrentTheme(): StyleManager::ApplyCurrentTheme() called
[  8823][V][style_manager.cpp:227] ApplyCurrentTheme(): Read theme from preferences: Day (cached: Day)
[  8833][V][style_manager.cpp:234] ApplyCurrentTheme(): Theme unchanged (Day) - no update needed
[  8842][I][panel_manager.cpp:241] CreateAndLoadPanelDirect(): PanelManager: ApplyCurrentTheme completed for panel: SplashPanel
[  8854][V][panel_manager.cpp:358] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions() called
[  8864][I][panel_manager.cpp:383] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Extracted functions - short=0x400fdc90, long=0x400fe394, context=0x3ffb3784
[  8880][V][interrupt_manager.cpp:167] UpdatePanelFunctions(): UpdatePanelFunctions() called
[  8889][I][interrupt_manager.cpp:176] UpdatePanelFunctions(): Updated panel functions in ActionHandler
[  8899][I][panel_manager.cpp:395] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Successfully updated universal button interrupts with panel functions
[  8914][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[  8922][V][splash_panel.cpp:67] Load(): Load() called
[  8928][V][component_factory.cpp:22] CreateClarityComponent(): CreateClarityComponent() called
[  8937][V][clarity_component.cpp:8] ClarityComponent(): ClarityComponent constructor called
[  8946][V][clarity_component.cpp:18] Render(): Render() called
[  8953][V][lvgl_display_provider.cpp:43] CreateLabel(): CreateLabel() called
[  8968][V][splash_panel.cpp:190] GetAnimationTime(): GetAnimationTime() called
[  8978][V][splash_panel.cpp:190] GetAnimationTime(): GetAnimationTime() called
[T] SplashPanel loaded successfully
[  9027][V][panel_manager.cpp:257] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() completed
[  9161][I][interrupt_manager.cpp:265] PrintSystemStatus(): === InterruptManager Status ===
[  9169][I][interrupt_manager.cpp:266] PrintSystemStatus(): Initialized: true
[  9177][I][interrupt_manager.cpp:267] PrintSystemStatus(): Total Evaluations: 0
[  9185][I][interrupt_manager.cpp:268] PrintSystemStatus(): Total Executions: 0
[  9193][I][interrupt_manager.cpp:269] PrintSystemStatus(): Registered Handlers: 2
[  9201][I][interrupt_manager.cpp:272] PrintSystemStatus(): TriggerHandler registered triggers: 5
[  9210][I][interrupt_manager.cpp:276] PrintSystemStatus(): ActionHandler registered actions: 2
[  9220][I][main.cpp:170] setup(): Clarity application started successfully
[  9227][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 1, UI state: BUSY, panel: SplashPanel
[  9237][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[  9245][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[  9255][V][action_handler.cpp:46] Process(): Process() called
[  9262][V][button_sensor.cpp:32] GetReading(): GetReading() called
[  9268][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = LOW
[  9278][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[  9287][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[  9297][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[  9306][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[  9314][V][button_sensor.cpp:32] GetReading(): GetReading() called
[  9321][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[  9331][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[  9340][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[  9349][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[  9358][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=RELEASED, raw_gpio=LOW, sensor_valid=YES
[  9371][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[  9384][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[  9395][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[  9403][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[  9416][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[  9423][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [9423 ms]: GPIO=LOW, current=LOW, previous=LOW, initialized=false
[  9437][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[  9449][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[  9456][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[  9469][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[  9478][V][main.cpp:219] loop(): interruptManager->Process() completed
[  9485][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[  9491][V][splash_panel.cpp:112] fade_in_timer_callback(): fade_in_timer_callback() called
[  9500][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[  9626][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[  9648][V][main.cpp:260] loop(): Main loop iteration completed
[  9655][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[  9663][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[  9673][V][button_sensor.cpp:32] GetReading(): GetReading() called
[  9680][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[  9689][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[  9699][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[  9708][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[  9717][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[  9729][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[  9740][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[  9748][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[  9761][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[  9769][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[  9781][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[  9788][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[  9801][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[  9810][V][main.cpp:219] loop(): interruptManager->Process() completed
[  9817][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[  9826][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[  9833][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[  9840][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[  9849][V][splash_panel.cpp:101] Update(): Update() called
[  9855][V][panel_manager.cpp:515] OnPanelUpdateComplete(): Panel update completed for panel: 0x3ffb3784
[  9916][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[  9923][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[  9945][V][main.cpp:260] loop(): Main loop iteration completed
[  9952][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[  9960][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[  9970][V][button_sensor.cpp:32] GetReading(): GetReading() called
[  9977][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[  9986][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[  9996][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 10005][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 10014][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 10027][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 10037][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 10046][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 10059][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 10066][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 10078][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 10086][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 10099][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 10108][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 10115][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 10121][V][splash_panel.cpp:133] display_timer_callback(): display_timer_callback() called
[ 10130][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 10139][V][splash_panel.cpp:190] GetAnimationTime(): GetAnimationTime() called
[ 10148][V][splash_panel.cpp:190] GetAnimationTime(): GetAnimationTime() called
[ 10207][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 10229][V][main.cpp:260] loop(): Main loop iteration completed
[ 10236][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[ 10244][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 10254][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 10261][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 10271][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 10280][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 10289][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 10298][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 10311][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 10321][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 10330][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 10343][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 10350][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 10362][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 10370][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 10383][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 10392][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 10399][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 10406][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 10428][V][main.cpp:260] loop(): Main loop iteration completed
[ 10435][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[ 10443][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 10453][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 10460][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 10470][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 10479][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 10488][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 10497][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 10504][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 10513][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 10523][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 10532][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 10541][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=RELEASED, raw_gpio=LOW, sensor_valid=YES
[ 10554][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 10567][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 10578][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 10586][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 10599][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 10606][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 10619][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 10626][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 10639][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 10648][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 10655][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 10779][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 10801][V][main.cpp:260] loop(): Main loop iteration completed
[ 10808][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[ 10816][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 10826][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 10833][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 10843][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 10852][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 10861][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 10870][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 10883][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 10893][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 10902][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 10915][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 10922][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 10934][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 10942][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 10955][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 10964][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 10971][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 10977][V][splash_panel.cpp:158] fade_out_timer_callback(): fade_out_timer_callback() called
[ 10986][I][panel_manager.cpp:497] OnPanelLoadComplete(): Panel load completed for panel: 0x3ffb3784
[ 10996][I][panel_manager.cpp:501] OnPanelLoadComplete(): Splash panel completed - transitioning to target panel: OemOilPanel
[ 11008][V][panel_manager.cpp:282] SplashCompletionCallback(): SplashCompletionCallback() called for panel: OemOilPanel
[ 11020][V][splash_panel.cpp:26] ~SplashPanel(): ~SplashPanel() destructor called
[ 11029][V][panel_manager.cpp:156] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() called for: OemOilPanel
[ 11040][V][panel_manager.cpp:87] CreatePanel(): CreatePanel() called for: OemOilPanel
[ 11048][V][panel_factory.cpp:29] CreateOemOilPanel(): CreateOemOilPanel() called
[ 11056][V][component_factory.cpp:15] Instance(): Instance() called
[ 11063][V][oil_pressure_sensor.cpp:13] OilPressureSensor(): OilPressureSensor() constructor called
[ 11073][V][oil_temperature_sensor.cpp:13] OilTemperatureSensor(): OilTemperatureSensor() constructor called
[ 11083][V][oem_oil_panel.cpp:20] OemOilPanel(): OemOilPanel constructor called
[ 11091][V][oem_oil_panel.cpp:513] SetManagers(): SetManagers() called
[ 11098][V][oem_oil_panel.cpp:527] SetPreferenceService(): SetPreferenceService() called
[ 11107][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 11117][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 11125][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 11132][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 11141][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 11149][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 11157][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 11166][V][oem_oil_panel.cpp:79] Init(): Init() called
[ 11172][V][lvgl_display_provider.cpp:27] CreateScreen(): CreateScreen() called
[ 11180][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[ 11189][V][oil_pressure_sensor.cpp:34] Init(): Init() called
[ 11195][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[T] Pressure reading: 3 Bar
[ 11203][V][oil_pressure_sensor.cpp:99] GetReading(): Pressure reading changed (raw: 1321)
[ 11214][V][oil_temperature_sensor.cpp:34] Init(): Init() called
[ 11220][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[T] Temperature reading: 77 C
[ 11228][V][oil_temperature_sensor.cpp:99] GetReading(): Temperature reading changed (raw: 2642)
[ 11239][I][oem_oil_panel.cpp:109] Init(): OemOilPanel initialization completed
[ 11247][I][panel_manager.cpp:239] CreateAndLoadPanelDirect(): PanelManager: About to call ApplyCurrentTheme for panel: OemOilPanel
[ 11260][I][style_manager.cpp:217] ApplyCurrentTheme(): StyleManager::ApplyCurrentTheme() called
[ 11269][V][style_manager.cpp:227] ApplyCurrentTheme(): Read theme from preferences: Day (cached: Day)
[ 11279][V][style_manager.cpp:234] ApplyCurrentTheme(): Theme unchanged (Day) - no update needed
[ 11288][I][panel_manager.cpp:241] CreateAndLoadPanelDirect(): PanelManager: ApplyCurrentTheme completed for panel: OemOilPanel
[ 11301][V][panel_manager.cpp:358] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions() called
[ 11310][I][panel_manager.cpp:383] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Extracted functions - short=0x400fbad4, long=0x400fc4d0, context=0x3ffb3b20
[ 11326][V][interrupt_manager.cpp:167] UpdatePanelFunctions(): UpdatePanelFunctions() called
[ 11335][I][interrupt_manager.cpp:176] UpdatePanelFunctions(): Updated panel functions in ActionHandler
[ 11345][I][panel_manager.cpp:395] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Successfully updated universal button interrupts with panel functions
[ 11361][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 11369][V][oem_oil_panel.cpp:116] Load(): Load() called
[ 11375][V][component_factory.cpp:28] CreateOilPressureComponent(): CreateOilPressureComponent() called
[ 11385][V][oem_oil_component.cpp:16] OemOilComponent(): OemOilComponent() constructor called
[ 11394][V][oem_oil_pressure_component.cpp:8] OemOilPressureComponent(): OemOilPressureComponent() constructor called
[ 11405][V][component_factory.cpp:34] CreateOilTemperatureComponent(): CreateOilTemperatureComponent() called
[ 11415][V][oem_oil_component.cpp:16] OemOilComponent(): OemOilComponent() constructor called
[ 11424][V][oem_oil_temperature_component.cpp:8] OemOilTemperatureComponent(): OemOilTemperatureComponent() constructor called
[ 11436][V][oem_oil_component.cpp:65] Render(): Render() called
[ 11443][V][lvgl_display_provider.cpp:61] CreateScale(): CreateScale() called
[ 11454][V][oem_oil_pressure_component.cpp:47] get_scale_mode(): get_scale_mode() called
[ 11462][V][oem_oil_pressure_component.cpp:55] get_angle_range(): get_angle_range() called
[ 11472][V][oem_oil_pressure_component.cpp:71] setup_danger_zone(): setup_danger_zone() called
[ 11482][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 11490][V][oem_oil_pressure_component.cpp:18] get_icon(): get_icon() called
[ 11504][V][oem_oil_pressure_component.cpp:80] get_icon_y_offset(): get_icon_y_offset() called
[ 11515][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 11532][V][oem_oil_pressure_component.cpp:89] get_label_angles(): get_label_angles() called
[ 11541][V][oem_oil_pressure_component.cpp:55] get_angle_range(): get_angle_range() called
[ 11555][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 11580][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 11590][V][oem_oil_component.cpp:65] Render(): Render() called
[ 11597][V][lvgl_display_provider.cpp:61] CreateScale(): CreateScale() called
[ 11608][V][oem_oil_temperature_component.cpp:47] get_scale_mode(): get_scale_mode() called
[ 11617][V][oem_oil_temperature_component.cpp:55] get_angle_range(): get_angle_range() called
[ 11627][V][oem_oil_temperature_component.cpp:89] setup_danger_zone(): setup_danger_zone() called
[ 11636][V][oem_oil_temperature_component.cpp:77] map_value_for_display(): map_value_for_display: max_val=120
[ 11647][V][oem_oil_temperature_component.cpp:80] map_value_for_display(): map_value_for_display: returning mapped value=0
[ 11659][V][oem_oil_temperature_component.cpp:77] map_value_for_display(): map_value_for_display: max_val=120
[ 11669][V][oem_oil_temperature_component.cpp:80] map_value_for_display(): map_value_for_display: returning mapped value=20
[ 11681][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 11689][V][oem_oil_temperature_component.cpp:18] get_icon(): get_icon() called
[ 11734][V][oem_oil_temperature_component.cpp:111] get_icon_y_offset(): get_icon_y_offset() called
[ 11745][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 11761][V][oem_oil_temperature_component.cpp:120] get_label_angles(): get_label_angles() called
[ 11770][V][oem_oil_temperature_component.cpp:55] get_angle_range(): get_angle_range() called
[ 11785][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 11810][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 11828][V][oem_oil_temperature_component.cpp:77] map_value_for_display(): map_value_for_display: max_val=120
[ 11838][V][oem_oil_temperature_component.cpp:80] map_value_for_display(): map_value_for_display: returning mapped value=120
[ 11857][V][oem_oil_component.cpp:98] Refresh(): Refresh() called
[ 11864][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 11871][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 11881][V][oem_oil_component.cpp:98] Refresh(): Refresh() called
[ 11888][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 11896][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 11906][V][oem_oil_panel.cpp:573] ShowPanelCompletionCallback(): ShowPanelCompletionCallback() called
[ 11916][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 11925][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[T] OemOilPanel loaded successfully
[ 11955][V][panel_manager.cpp:257] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() completed
[ 12577][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 12599][V][main.cpp:260] loop(): Main loop iteration completed
[ 12606][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 7, UI state: IDLE, panel: OemOilPanel
[ 12615][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 12624][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 12634][V][action_handler.cpp:46] Process(): Process() called
[ 12640][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 12647][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = LOW
[ 12656][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 12666][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 12676][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 12685][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 12693][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 12700][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 12710][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 12719][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 12728][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 12737][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=RELEASED, raw_gpio=LOW, sensor_valid=YES
[ 12750][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 12763][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 12774][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 12782][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 12795][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 12803][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [12803 ms]: GPIO=LOW, current=LOW, previous=LOW, initialized=true
[ 12816][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 12828][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 12836][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 12848][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 12857][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 12864][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 12873][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 12881][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 12888][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 12896][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 12906][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 12914][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 12922][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 12930][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 12938][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 12947][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 12955][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[ 12963][V][oem_oil_panel.cpp:694] MapPressureValue(): MapPressureValue() returning: 13
[ 12972][I][oem_oil_panel.cpp:304] UpdateOilPressure(): Updating pressure from -1 to 13
[ 12980][V][oem_oil_component.cpp:98] Refresh(): Refresh() called
[ 12987][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 12996][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 13009][I][oem_oil_panel.cpp:331] UpdateOilPressure(): Initial pressure animation: starting from 0 to 13
[ 13020][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 13028][V][oem_oil_panel.cpp:637] ExecutePressureAnimationCallback(): ExecutePressureAnimationCallback() called with value: 0
[ 13045][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[ 13052][V][oem_oil_panel.cpp:787] MapTemperatureValue(): MapTemperatureValue() returning: 77
[ 13061][I][oem_oil_panel.cpp:412] UpdateOilTemperature(): Updating temperature from -1 to 77
[ 13071][V][oem_oil_component.cpp:98] Refresh(): Refresh() called
[ 13077][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 13087][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 13100][I][oem_oil_panel.cpp:439] UpdateOilTemperature(): Initial temperature animation: starting from 0 to 77
[ 13111][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 13119][V][oem_oil_panel.cpp:659] ExecuteTemperatureAnimationCallback(): ExecuteTemperatureAnimationCallback() called with value: 0
[ 13132][V][oem_oil_temperature_component.cpp:77] map_value_for_display(): map_value_for_display: max_val=120
[ 13143][V][oem_oil_temperature_component.cpp:80] map_value_for_display(): map_value_for_display: returning mapped value=120
[ 13697][V][oem_oil_panel.cpp:659] ExecuteTemperatureAnimationCallback(): ExecuteTemperatureAnimationCallback() called with value: 77
[ 13710][V][oem_oil_temperature_component.cpp:77] map_value_for_display(): map_value_for_display: max_val=120
[ 13721][V][oem_oil_temperature_component.cpp:80] map_value_for_display(): map_value_for_display: returning mapped value=43
[ 13737][V][oem_oil_panel.cpp:637] ExecutePressureAnimationCallback(): ExecutePressureAnimationCallback() called with value: 13
[ 13754][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 13762][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 14204][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 14226][V][main.cpp:260] loop(): Main loop iteration completed
[ 14233][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 14241][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 14251][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 14258][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 14268][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 14277][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 14286][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 14295][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 14302][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 14311][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 14321][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 14330][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 14339][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=RELEASED, raw_gpio=LOW, sensor_valid=YES
[ 14352][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 14365][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 14376][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 14384][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 14397][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 14404][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 14417][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 14424][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 14437][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 14446][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 14453][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 14462][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 14470][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 14477][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 14485][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 14495][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 14503][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 14511][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 14519][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 14527][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 14536][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 14544][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[ 14552][V][oem_oil_panel.cpp:694] MapPressureValue(): MapPressureValue() returning: 13
[ 14561][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[ 14568][V][oem_oil_panel.cpp:787] MapTemperatureValue(): MapTemperatureValue() returning: 77
[ 14577][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 14586][V][oem_oil_panel.cpp:253] Update(): OemOilPanel update completed immediately (no animations)
[ 14596][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 14602][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 14625][V][main.cpp:260] loop(): Main loop iteration completed
[ 14632][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 9, UI state: IDLE, panel: OemOilPanel
[ 14641][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 14650][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 14660][V][action_handler.cpp:46] Process(): Process() called
[ 14666][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 14673][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = LOW
[ 14682][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 14692][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 14702][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 14711][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 14719][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 14732][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 14743][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 14751][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 14764][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 14772][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 14784][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 14792][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 14804][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 14813][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 14820][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 14829][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 14837][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 14844][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 14852][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 14862][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 14870][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 14878][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 14886][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 14894][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 14903][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 14911][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[ 14919][V][oem_oil_panel.cpp:694] MapPressureValue(): MapPressureValue() returning: 13
[ 14927][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[ 14935][V][oem_oil_panel.cpp:787] MapTemperatureValue(): MapTemperatureValue() returning: 77
[ 14944][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 14953][V][oem_oil_panel.cpp:253] Update(): OemOilPanel update completed immediately (no animations)
[ 14962][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 14969][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 14991][V][main.cpp:260] loop(): Main loop iteration completed
[ 14998][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 15006][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 15016][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 15023][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 15033][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 15042][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 15051][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 15060][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 15073][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 15083][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 15092][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 15105][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 15112][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [15112 ms]: GPIO=LOW, current=LOW, previous=LOW, initialized=true
[ 15125][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 15138][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[T] Lights sensor state changed: OFF -> ON
[ 15146][V][lights_sensor.cpp:36] GetReading(): GetReading() called
[ 15155][V][lights_sensor.cpp:45] GetLightsState(): GetLightsState() called
[ 15163][V][lights_sensor.cpp:55] GetLightsState(): Lights sensor GPIO 33 state: HIGH
[ 15171][V][error_manager.cpp:8] Instance(): Instance() called
[T] LightsOnActivate() - Setting NIGHT theme
[T] SetTheme() called
[ 15178][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 15190][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[ 15232][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 15244][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 15253][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 15260][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 15269][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 15277][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 15284][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 15292][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 15302][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 15310][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 15318][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 15326][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 15334][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 15343][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 15351][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[ 15359][V][oem_oil_panel.cpp:694] MapPressureValue(): MapPressureValue() returning: 13
[ 15368][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[ 15375][V][oem_oil_panel.cpp:787] MapTemperatureValue(): MapTemperatureValue() returning: 77
[ 15384][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 15393][V][oem_oil_panel.cpp:253] Update(): OemOilPanel update completed immediately (no animations)
[ 15968][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 15974][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 15997][V][main.cpp:260] loop(): Main loop iteration completed
[ 16004][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 16012][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 16022][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 16029][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 16039][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 16048][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 16057][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 16066][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 16073][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 16082][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 16092][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 16101][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 16110][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=RELEASED, raw_gpio=LOW, sensor_valid=YES
[ 16123][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 16136][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 16147][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 16155][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 16168][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 16175][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 16188][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 16195][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 16208][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 16217][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 16224][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 16233][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 16241][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 16248][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 16256][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 16266][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 16274][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 16282][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 16290][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 16298][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 16307][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 16315][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[ 16323][V][oem_oil_panel.cpp:694] MapPressureValue(): MapPressureValue() returning: 13
[ 16332][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[ 16339][V][oem_oil_panel.cpp:787] MapTemperatureValue(): MapTemperatureValue() returning: 77
[ 16348][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 16357][V][oem_oil_panel.cpp:253] Update(): OemOilPanel update completed immediately (no animations)
[ 16367][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 16373][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 16396][V][main.cpp:260] loop(): Main loop iteration completed
[ 16403][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 16411][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 16421][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 16428][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 16438][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 16447][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 16456][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 16465][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 16478][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 16488][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 16497][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 16510][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 16517][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 16529][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 16537][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 16550][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 16559][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 16566][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 16575][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 16583][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 16590][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 16598][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 16608][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 16616][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 16624][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 16632][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 16640][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 16649][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 16657][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[ 16665][V][oem_oil_panel.cpp:694] MapPressureValue(): MapPressureValue() returning: 13
[ 16673][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[ 16681][V][oem_oil_panel.cpp:787] MapTemperatureValue(): MapTemperatureValue() returning: 77
[ 16690][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 16699][V][oem_oil_panel.cpp:253] Update(): OemOilPanel update completed immediately (no animations)
[ 16708][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 16715][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 16737][V][main.cpp:260] loop(): Main loop iteration completed
[ 16744][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 13, UI state: IDLE, panel: OemOilPanel
[ 16754][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 16762][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 16772][V][action_handler.cpp:46] Process(): Process() called
[ 16778][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 16785][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = LOW
[ 16794][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 16804][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 16814][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 16823][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 16831][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 16844][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 16855][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 16863][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 16876][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 16884][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [16884 ms]: GPIO=HIGH, current=HIGH, previous=LOW, initialized=true
[T] LOCK SENSOR STATE CHANGE [16884 ms]: LOW/disengaged -> HIGH/engaged
[ 16898][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned true, previousLockState_ now=HIGH
[ 16915][V][lock_sensor.cpp:39] GetReading(): GetReading() called
[ 16921][V][lock_sensor.cpp:49] GetReading(): Lock sensor GPIO 27 state: HIGH
[ 16929][V][error_manager.cpp:8] Instance(): Instance() called
[T] LockEngagedActivate() - Loading LOCK panel
[T] LoadPanel() called for: LockPanel
[T] Panel transition requested: LockPanel
[ 16937][V][panel_manager.cpp:148] CreateAndLoadPanel(): Loading panel directly: LockPanel
[ 16955][V][panel_manager.cpp:156] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() called for: LockPanel
[ 16966][I][panel_manager.cpp:169] CreateAndLoadPanelDirect(): Saving current panel 'OemOilPanel' for restoration when triggers deactivate
[ 16979][V][oem_oil_panel.cpp:28] ~OemOilPanel(): ~OemOilPanel() destructor called
[ 16996][V][panel_manager.cpp:87] CreatePanel(): CreatePanel() called for: LockPanel
[ 17004][V][panel_factory.cpp:53] CreateLockPanel(): CreateLockPanel() called
[ 17012][V][component_factory.cpp:15] Instance(): Instance() called
[ 17018][V][lock_panel.cpp:17] LockPanel(): LockPanel constructor called
[ 17026][V][lock_panel.cpp:140] SetManagers(): SetManagers() called
[ 17032][V][lock_panel.cpp:41] Init(): Init() called
[ 17038][V][lvgl_display_provider.cpp:27] CreateScreen(): CreateScreen() called
[ 17046][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[ 17055][I][lock_panel.cpp:64] Init(): LockPanel initialization completed
[ 17062][I][panel_manager.cpp:239] CreateAndLoadPanelDirect(): PanelManager: About to call ApplyCurrentTheme for panel: LockPanel
[ 17075][I][style_manager.cpp:217] ApplyCurrentTheme(): StyleManager::ApplyCurrentTheme() called
[ 17084][V][style_manager.cpp:227] ApplyCurrentTheme(): Read theme from preferences: Day (cached: Day)
[ 17094][V][style_manager.cpp:234] ApplyCurrentTheme(): Theme unchanged (Day) - no update needed
[ 17103][I][panel_manager.cpp:241] CreateAndLoadPanelDirect(): PanelManager: ApplyCurrentTheme completed for panel: LockPanel
[ 17115][V][panel_manager.cpp:358] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions() called
[ 17125][I][panel_manager.cpp:383] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Extracted functions - short=0x400faed0, long=0x400fb468, context=0x3ffb3784
[ 17141][V][interrupt_manager.cpp:167] UpdatePanelFunctions(): UpdatePanelFunctions() called
[ 17150][I][interrupt_manager.cpp:176] UpdatePanelFunctions(): Updated panel functions in ActionHandler
[ 17160][I][panel_manager.cpp:395] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Successfully updated universal button interrupts with panel functions
[ 17175][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 17183][V][lock_panel.cpp:70] Load(): Load() called
[ 17189][V][component_factory.cpp:52] CreateLockComponent(): CreateLockComponent() called
[ 17198][V][lock_component.cpp:9] LockComponent(): LockComponent constructor called
[ 17206][V][lock_component.cpp:29] Render(): Render() called
[ 17212][V][lvgl_display_provider.cpp:71] CreateImage(): CreateImage() called
[ 17222][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 17230][V][lock_panel.cpp:121] ShowPanelCompletionCallback(): ShowPanelCompletionCallback() called
[ 17240][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 17248][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[T] LockPanel loaded successfully
[ 17366][V][panel_manager.cpp:257] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() completed
[ 17376][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 17384][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 17396][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 17405][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 17412][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 17421][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 17429][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 17436][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 17444][V][lock_panel.cpp:107] Update(): Update() called
[ 17450][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 17459][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 17465][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 17488][V][main.cpp:260] loop(): Main loop iteration completed
[ 17495][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 17503][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 17513][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 17520][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 17530][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 17539][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 17548][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 17557][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 17564][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 17573][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 17583][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 17592][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 17601][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=RELEASED, raw_gpio=LOW, sensor_valid=YES
[ 17614][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 17627][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 17638][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 17646][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 17659][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 17666][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 17679][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 17686][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 17699][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 17708][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 17715][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 17724][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 17732][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 17739][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 17747][V][lock_panel.cpp:107] Update(): Update() called
[ 17753][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 17762][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 17768][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 17790][V][main.cpp:260] loop(): Main loop iteration completed
[ 17797][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 17805][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 17815][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 17822][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 17832][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 17841][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 17850][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 17859][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 17872][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 17882][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 17891][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 17904][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 17911][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 17924][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 17931][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 17944][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 17953][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 17960][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 17969][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 17977][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 17984][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 17992][V][lock_panel.cpp:107] Update(): Update() called
[ 17998][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 18007][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 18013][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 18035][V][main.cpp:260] loop(): Main loop iteration completed
[ 18042][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 18050][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 18060][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 18067][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 18077][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 18086][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 18095][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 18104][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 18117][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 18127][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 18136][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 18149][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 18156][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 18169][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 18176][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 18189][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 18198][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 18205][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 18214][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 18222][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 18229][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 18237][V][lock_panel.cpp:107] Update(): Update() called
[ 18243][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 18252][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 18258][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 18280][V][main.cpp:260] loop(): Main loop iteration completed
[ 18287][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 18295][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 18305][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 18312][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 18322][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 18331][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 18340][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 18349][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 18362][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 18372][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 18381][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyNotPresentSensor state changed: PRESENT -> NOT_PRESENT
[ 18394][V][key_not_present_sensor.cpp:40] GetReading(): KeyNotPresentSensor reading: NOT_PRESENT
[ 18408][V][error_manager.cpp:8] Instance(): Instance() called
[T] KeyNotPresentActivate() - Loading KEY panel
[T] LoadPanel() called for: KeyPanel
[T] Panel transition requested: KeyPanel
[ 18416][V][panel_manager.cpp:148] CreateAndLoadPanel(): Loading panel directly: KeyPanel
[ 18434][V][panel_manager.cpp:156] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() called for: KeyPanel
[ 18444][V][lock_panel.cpp:23] ~LockPanel(): ~LockPanel() destructor called
[ 18453][V][lock_component.cpp:14] ~LockComponent(): ~LockComponent() destructor called
[ 18461][V][panel_manager.cpp:87] CreatePanel(): CreatePanel() called for: KeyPanel
[ 18470][V][panel_factory.cpp:47] CreateKeyPanel(): CreateKeyPanel() called
[ 18477][V][component_factory.cpp:15] Instance(): Instance() called
[ 18484][V][key_panel.cpp:21] KeyPanel(): KeyPanel constructor called
[ 18491][V][key_panel.cpp:156] SetManagers(): SetManagers() called
[ 18497][V][key_panel.cpp:44] Init(): Init() called
[ 18503][V][lvgl_display_provider.cpp:27] CreateScreen(): CreateScreen() called
[ 18511][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[ 18520][V][key_panel.cpp:217] DetermineCurrentKeyState(): DetermineCurrentKeyState() called
[ 18529][I][key_panel.cpp:67] Init(): KeyPanel initialization completed
[ 18536][I][panel_manager.cpp:239] CreateAndLoadPanelDirect(): PanelManager: About to call ApplyCurrentTheme for panel: KeyPanel
[ 18548][I][style_manager.cpp:217] ApplyCurrentTheme(): StyleManager::ApplyCurrentTheme() called
[ 18558][V][style_manager.cpp:227] ApplyCurrentTheme(): Read theme from preferences: Day (cached: Day)
[ 18568][V][style_manager.cpp:234] ApplyCurrentTheme(): Theme unchanged (Day) - no update needed
[ 18577][I][panel_manager.cpp:241] CreateAndLoadPanelDirect(): PanelManager: ApplyCurrentTheme completed for panel: KeyPanel
[ 18589][V][panel_manager.cpp:358] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions() called
[ 18599][I][panel_manager.cpp:383] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Extracted functions - short=0x400fa1fc, long=0x400fa794, context=0x3ffb3784
[ 18615][V][interrupt_manager.cpp:167] UpdatePanelFunctions(): UpdatePanelFunctions() called
[ 18624][I][interrupt_manager.cpp:176] UpdatePanelFunctions(): Updated panel functions in ActionHandler
[ 18634][I][panel_manager.cpp:395] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Successfully updated universal button interrupts with panel functions
[ 18649][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 18657][V][key_panel.cpp:73] Load(): Load() called
[ 18663][V][component_factory.cpp:46] CreateKeyComponent(): CreateKeyComponent() called
[ 18671][V][key_component.cpp:10] KeyComponent(): KeyComponent constructor called
[ 18679][V][key_component.cpp:30] Render(): Render() called
[ 18685][V][lvgl_display_provider.cpp:71] CreateImage(): CreateImage() called
[ 18696][V][key_component.cpp:52] SetColor(): SetColor() called with state: 2
[ 18703][V][style_manager.cpp:179] GetColours(): GetColours() called
[T] Key icon color set to RED
[ 18712][V][key_panel.cpp:137] ShowPanelCompletionCallback(): ShowPanelCompletionCallback() called
[ 18722][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 18730][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[T] KeyPanel loaded successfully
[ 18857][V][panel_manager.cpp:257] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() completed
[ 18867][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 18874][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 18887][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 18894][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 18907][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 18916][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 18923][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 18932][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 18940][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 18947][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 18955][V][key_panel.cpp:124] Update(): Update() called
[ 18961][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 18970][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 18976][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 18998][V][main.cpp:260] loop(): Main loop iteration completed
[ 19005][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 18, UI state: IDLE, panel: KeyPanel
[ 19014][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 19023][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 19033][V][action_handler.cpp:46] Process(): Process() called
[ 19039][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 19046][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = LOW
[ 19055][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 19065][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 19075][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 19083][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 19092][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 19099][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 19108][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 19118][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 19127][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 19136][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=RELEASED, raw_gpio=LOW, sensor_valid=YES
[ 19149][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 19162][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 19173][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 19181][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 19194][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 19201][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [19201 ms]: GPIO=HIGH, current=HIGH, previous=HIGH, initialized=true
[ 19215][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 19227][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 19235][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 19248][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 19257][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 19264][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 19273][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 19281][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 19288][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 19296][V][key_panel.cpp:124] Update(): Update() called
[ 19302][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 19310][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 19317][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 19339][V][main.cpp:260] loop(): Main loop iteration completed
[ 19346][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 19354][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 19364][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 19371][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 19381][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 19390][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 19399][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 19408][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 19421][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 19431][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 19440][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 19453][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 19460][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 19473][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 19480][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 19493][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 19502][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 19509][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 19518][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 19526][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 19533][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 19541][V][key_panel.cpp:124] Update(): Update() called
[ 19547][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 19555][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 19562][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 19584][V][main.cpp:260] loop(): Main loop iteration completed
[ 19591][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 19599][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 19609][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 19616][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 19626][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 19635][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 19644][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 19653][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 19666][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 19676][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 19685][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 19698][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 19705][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 19718][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 19725][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 19738][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 19747][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 19754][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 19763][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 19771][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 19778][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 19786][V][key_panel.cpp:124] Update(): Update() called
[ 19792][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 19800][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 19807][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 19829][V][main.cpp:260] loop(): Main loop iteration completed
[ 19836][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 19844][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 19854][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 19861][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 19871][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 19880][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 19889][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 19898][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 19911][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 19921][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=HIGH, previous=LOW
[T] KeyPresentSensor state changed: NOT_PRESENT -> PRESENT
[ 19931][V][key_present_sensor.cpp:40] GetReading(): KeyPresentSensor reading: PRESENT
[T] KeyPresent trigger evaluation: hasChanged=true, wasActive=false, sensorActive=true
[ 19949][V][error_manager.cpp:8] Instance(): Instance() called
[T] KeyPresentActivate() - Loading KEY panel
[T] LoadPanel() called for: KeyPanel
[T] Panel transition requested: KeyPanel
[ 19963][V][panel_manager.cpp:148] CreateAndLoadPanel(): Loading panel directly: KeyPanel
[ 19981][V][panel_manager.cpp:156] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() called for: KeyPanel
[ 19991][V][key_panel.cpp:27] ~KeyPanel(): ~KeyPanel() destructor called
[ 19999][V][key_component.cpp:15] ~KeyComponent(): ~KeyComponent() destructor called
[ 20008][V][panel_manager.cpp:87] CreatePanel(): CreatePanel() called for: KeyPanel
[ 20016][V][panel_factory.cpp:47] CreateKeyPanel(): CreateKeyPanel() called
[ 20023][V][component_factory.cpp:15] Instance(): Instance() called
[ 20030][V][key_panel.cpp:21] KeyPanel(): KeyPanel constructor called
[ 20037][V][key_panel.cpp:156] SetManagers(): SetManagers() called
[ 20044][V][key_panel.cpp:44] Init(): Init() called
[ 20049][V][lvgl_display_provider.cpp:27] CreateScreen(): CreateScreen() called
[ 20057][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[ 20066][V][key_panel.cpp:217] DetermineCurrentKeyState(): DetermineCurrentKeyState() called
[ 20075][I][key_panel.cpp:67] Init(): KeyPanel initialization completed
[ 20082][I][panel_manager.cpp:239] CreateAndLoadPanelDirect(): PanelManager: About to call ApplyCurrentTheme for panel: KeyPanel
[ 20094][I][style_manager.cpp:217] ApplyCurrentTheme(): StyleManager::ApplyCurrentTheme() called
[ 20104][V][style_manager.cpp:227] ApplyCurrentTheme(): Read theme from preferences: Day (cached: Day)
[ 20114][V][style_manager.cpp:234] ApplyCurrentTheme(): Theme unchanged (Day) - no update needed
[ 20123][I][panel_manager.cpp:241] CreateAndLoadPanelDirect(): PanelManager: ApplyCurrentTheme completed for panel: KeyPanel
[ 20135][V][panel_manager.cpp:358] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions() called
[ 20145][I][panel_manager.cpp:383] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Extracted functions - short=0x400fa1fc, long=0x400fa794, context=0x3ffb3784
[ 20161][V][interrupt_manager.cpp:167] UpdatePanelFunctions(): UpdatePanelFunctions() called
[ 20170][I][interrupt_manager.cpp:176] UpdatePanelFunctions(): Updated panel functions in ActionHandler
[ 20180][I][panel_manager.cpp:395] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Successfully updated universal button interrupts with panel functions
[ 20195][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 20203][V][key_panel.cpp:73] Load(): Load() called
[ 20209][V][component_factory.cpp:46] CreateKeyComponent(): CreateKeyComponent() called
[ 20217][V][key_component.cpp:10] KeyComponent(): KeyComponent constructor called
[ 20225][V][key_component.cpp:30] Render(): Render() called
[ 20231][V][lvgl_display_provider.cpp:71] CreateImage(): CreateImage() called
[ 20242][V][key_component.cpp:52] SetColor(): SetColor() called with state: 1
[ 20249][V][style_manager.cpp:179] GetColours(): GetColours() called
[T] Key icon color set to GREEN
[ 20258][V][key_panel.cpp:137] ShowPanelCompletionCallback(): ShowPanelCompletionCallback() called
[ 20268][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 20276][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[T] KeyPanel loaded successfully
[ 20404][V][panel_manager.cpp:257] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() completed
[ 20413][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 20422][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 20429][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 20442][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 20449][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 20462][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 20471][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 20478][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 20487][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 20495][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 20502][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 20510][V][key_panel.cpp:124] Update(): Update() called
[ 20516][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 20525][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 20531][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 20553][V][main.cpp:260] loop(): Main loop iteration completed
[ 20560][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 20568][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 20578][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 20585][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 20595][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 20604][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 20613][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 20622][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 20629][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 20638][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 20648][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 20657][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 20666][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=RELEASED, raw_gpio=LOW, sensor_valid=YES
[ 20679][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 20692][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 20703][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=HIGH, previous=HIGH
[ 20711][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 20724][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 20732][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 20744][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 20752][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 20764][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 20773][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 20780][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 20789][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 20797][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 20804][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 20812][V][key_panel.cpp:124] Update(): Update() called
[ 20818][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 20826][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 20833][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 20855][V][main.cpp:260] loop(): Main loop iteration completed
[ 20862][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 20870][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 20880][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 20887][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 20897][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 20906][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 20915][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 20924][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 20937][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 20947][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=HIGH, previous=HIGH
[ 20956][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 20969][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 20976][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 20989][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 20996][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 21009][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 21018][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 21025][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 21034][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 21042][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 21049][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 21057][V][key_panel.cpp:124] Update(): Update() called
[ 21063][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 21071][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 21078][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 21100][V][main.cpp:260] loop(): Main loop iteration completed
[ 21107][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 24, UI state: IDLE, panel: KeyPanel
[ 21116][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 21125][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 21135][V][action_handler.cpp:46] Process(): Process() called
[ 21141][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 21148][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = LOW
[ 21157][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 21167][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 21177][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 21185][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 21194][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 21207][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 21217][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=HIGH, previous=HIGH
[ 21226][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 21239][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 21246][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [21246 ms]: GPIO=HIGH, current=HIGH, previous=HIGH, initialized=true
[ 21260][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 21272][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 21280][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 21293][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 21302][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 21309][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 21318][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 21326][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 21333][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 21341][V][key_panel.cpp:124] Update(): Update() called
[ 21347][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 21355][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 21362][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 21384][V][main.cpp:260] loop(): Main loop iteration completed
[ 21391][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 21399][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 21409][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 21416][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 21426][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 21435][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 21444][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 21453][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 21466][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 21476][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=HIGH, previous=HIGH
[ 21485][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 21498][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 21505][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 21518][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 21525][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 21538][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 21547][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 21554][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 21563][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 21571][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 21578][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 21586][V][key_panel.cpp:124] Update(): Update() called
[ 21592][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 21600][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 21607][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 21629][V][main.cpp:260] loop(): Main loop iteration completed
[ 21636][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 21644][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 21654][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 21661][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 21671][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 21680][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 21689][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 21698][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 21705][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 21714][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 21724][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 21733][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 21742][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=RELEASED, raw_gpio=LOW, sensor_valid=YES
[ 21755][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 21768][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 21779][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=HIGH, previous=HIGH
[ 21787][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyNotPresentSensor state changed: NOT_PRESENT -> PRESENT
[ 21801][V][key_not_present_sensor.cpp:40] GetReading(): KeyNotPresentSensor reading: PRESENT
[T] KeyPresentActivate() - Loading KEY panel
[T] LoadPanel() called for: KeyPanel
[T] Panel transition requested: KeyPanel
[ 21815][V][panel_manager.cpp:148] CreateAndLoadPanel(): Loading panel directly: KeyPanel
[ 21833][V][panel_manager.cpp:156] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() called for: KeyPanel
[ 21844][V][key_panel.cpp:27] ~KeyPanel(): ~KeyPanel() destructor called
[ 21852][V][key_component.cpp:15] ~KeyComponent(): ~KeyComponent() destructor called
[ 21860][V][panel_manager.cpp:87] CreatePanel(): CreatePanel() called for: KeyPanel
[ 21868][V][panel_factory.cpp:47] CreateKeyPanel(): CreateKeyPanel() called
[ 21876][V][component_factory.cpp:15] Instance(): Instance() called
[ 21883][V][key_panel.cpp:21] KeyPanel(): KeyPanel constructor called
[ 21889][V][key_panel.cpp:156] SetManagers(): SetManagers() called
[ 21896][V][key_panel.cpp:44] Init(): Init() called
[ 21901][V][lvgl_display_provider.cpp:27] CreateScreen(): CreateScreen() called
[ 21910][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[ 21919][V][key_panel.cpp:217] DetermineCurrentKeyState(): DetermineCurrentKeyState() called
[ 21928][I][key_panel.cpp:67] Init(): KeyPanel initialization completed
[ 21935][I][panel_manager.cpp:239] CreateAndLoadPanelDirect(): PanelManager: About to call ApplyCurrentTheme for panel: KeyPanel
[ 21947][I][style_manager.cpp:217] ApplyCurrentTheme(): StyleManager::ApplyCurrentTheme() called
[ 21956][V][style_manager.cpp:227] ApplyCurrentTheme(): Read theme from preferences: Day (cached: Day)
[ 21966][V][style_manager.cpp:234] ApplyCurrentTheme(): Theme unchanged (Day) - no update needed
[ 21976][I][panel_manager.cpp:241] CreateAndLoadPanelDirect(): PanelManager: ApplyCurrentTheme completed for panel: KeyPanel
[ 21988][V][panel_manager.cpp:358] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions() called
[ 21997][I][panel_manager.cpp:383] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Extracted functions - short=0x400fa1fc, long=0x400fa794, context=0x3ffb3784
[ 22014][V][interrupt_manager.cpp:167] UpdatePanelFunctions(): UpdatePanelFunctions() called
[ 22023][I][interrupt_manager.cpp:176] UpdatePanelFunctions(): Updated panel functions in ActionHandler
[ 22032][I][panel_manager.cpp:395] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Successfully updated universal button interrupts with panel functions
[ 22048][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 22056][V][key_panel.cpp:73] Load(): Load() called
[ 22062][V][component_factory.cpp:46] CreateKeyComponent(): CreateKeyComponent() called
[ 22070][V][key_component.cpp:10] KeyComponent(): KeyComponent constructor called
[ 22078][V][key_component.cpp:30] Render(): Render() called
[ 22084][V][lvgl_display_provider.cpp:71] CreateImage(): CreateImage() called
[ 22094][V][key_component.cpp:52] SetColor(): SetColor() called with state: 1
[ 22102][V][style_manager.cpp:179] GetColours(): GetColours() called
[T] Key icon color set to GREEN
[ 22111][V][key_panel.cpp:137] ShowPanelCompletionCallback(): ShowPanelCompletionCallback() called
[ 22121][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 22129][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[T] KeyPanel loaded successfully
[ 22257][V][panel_manager.cpp:257] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() completed
[ 22266][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 22274][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 22286][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 22294][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 22306][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 22315][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 22322][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 22331][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 22339][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 22346][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 22354][V][key_panel.cpp:124] Update(): Update() called
[ 22360][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 22369][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 22375][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 22397][V][main.cpp:260] loop(): Main loop iteration completed
[ 22404][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 22412][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 22422][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 22429][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 22439][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 22448][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 22457][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 22466][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 22479][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 22489][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=HIGH, previous=HIGH
[ 22498][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 22511][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 22518][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 22531][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 22538][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 22551][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 22560][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 22567][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 22576][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 22584][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 22591][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 22599][V][key_panel.cpp:124] Update(): Update() called
[ 22605][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 22613][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 22620][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 22642][V][main.cpp:260] loop(): Main loop iteration completed
[ 22649][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 22657][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 22667][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 22674][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 22684][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 22693][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 22702][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 22711][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 22718][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 22727][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 22737][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 22746][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 22755][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=RELEASED, raw_gpio=LOW, sensor_valid=YES
[ 22768][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 22781][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 22792][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=HIGH, previous=HIGH
[ 22800][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 22813][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 22821][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 22833][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 22841][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 22853][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 22862][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 22869][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 22878][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 22886][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 22893][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 22901][V][key_panel.cpp:124] Update(): Update() called
[ 22907][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 22915][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 22922][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 22944][V][main.cpp:260] loop(): Main loop iteration completed
[ 22951][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 22959][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 22969][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 22976][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 22986][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 22995][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 23004][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 23013][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 23026][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 23036][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=HIGH, previous=HIGH
[ 23045][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 23058][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 23065][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 23078][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 23085][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 23098][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 23107][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 23114][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 23123][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 23131][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 23138][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 23146][V][key_panel.cpp:124] Update(): Update() called
[ 23152][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 23160][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 23167][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 23189][V][main.cpp:260] loop(): Main loop iteration completed
[ 23196][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 30, UI state: IDLE, panel: KeyPanel
[ 23205][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 23214][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 23224][V][action_handler.cpp:46] Process(): Process() called
[ 23230][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 23237][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = LOW
[ 23246][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 23256][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 23266][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 23274][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 23283][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 23296][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 23306][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=HIGH
[T] KeyPresentSensor state changed: PRESENT -> NOT_PRESENT
[ 23316][V][key_present_sensor.cpp:40] GetReading(): KeyPresentSensor reading: NOT_PRESENT
[T] KeyPresent trigger evaluation: hasChanged=true, wasActive=true, sensorActive=false
[T] LockEngagedActivate() - Loading LOCK panel
[T] LoadPanel() called for: LockPanel
[T] Panel transition requested: LockPanel
[ 23342][V][panel_manager.cpp:148] CreateAndLoadPanel(): Loading panel directly: LockPanel
[ 23361][V][panel_manager.cpp:156] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() called for: LockPanel
[ 23372][V][key_panel.cpp:27] ~KeyPanel(): ~KeyPanel() destructor called
[ 23379][V][key_component.cpp:15] ~KeyComponent(): ~KeyComponent() destructor called
[ 23388][V][panel_manager.cpp:87] CreatePanel(): CreatePanel() called for: LockPanel
[ 23396][V][panel_factory.cpp:53] CreateLockPanel(): CreateLockPanel() called
[ 23404][V][component_factory.cpp:15] Instance(): Instance() called
[ 23411][V][lock_panel.cpp:17] LockPanel(): LockPanel constructor called
[ 23418][V][lock_panel.cpp:140] SetManagers(): SetManagers() called
[ 23425][V][lock_panel.cpp:41] Init(): Init() called
[ 23430][V][lvgl_display_provider.cpp:27] CreateScreen(): CreateScreen() called
[ 23438][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[ 23447][I][lock_panel.cpp:64] Init(): LockPanel initialization completed
[ 23454][I][panel_manager.cpp:239] CreateAndLoadPanelDirect(): PanelManager: About to call ApplyCurrentTheme for panel: LockPanel
[ 23467][I][style_manager.cpp:217] ApplyCurrentTheme(): StyleManager::ApplyCurrentTheme() called
[ 23476][V][style_manager.cpp:227] ApplyCurrentTheme(): Read theme from preferences: Day (cached: Day)
[ 23486][V][style_manager.cpp:234] ApplyCurrentTheme(): Theme unchanged (Day) - no update needed
[ 23495][I][panel_manager.cpp:241] CreateAndLoadPanelDirect(): PanelManager: ApplyCurrentTheme completed for panel: LockPanel
[ 23507][V][panel_manager.cpp:358] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions() called
[ 23517][I][panel_manager.cpp:383] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Extracted functions - short=0x400faed0, long=0x400fb468, context=0x3ffb3784
[ 23533][V][interrupt_manager.cpp:167] UpdatePanelFunctions(): UpdatePanelFunctions() called
[ 23542][I][interrupt_manager.cpp:176] UpdatePanelFunctions(): Updated panel functions in ActionHandler
[ 23552][I][panel_manager.cpp:395] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Successfully updated universal button interrupts with panel functions
[ 23567][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 23575][V][lock_panel.cpp:70] Load(): Load() called
[ 23581][V][component_factory.cpp:52] CreateLockComponent(): CreateLockComponent() called
[ 23590][V][lock_component.cpp:9] LockComponent(): LockComponent constructor called
[ 23598][V][lock_component.cpp:29] Render(): Render() called
[ 23604][V][lvgl_display_provider.cpp:71] CreateImage(): CreateImage() called
[ 23614][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 23622][V][lock_panel.cpp:121] ShowPanelCompletionCallback(): ShowPanelCompletionCallback() called
[ 23632][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 23640][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[T] LockPanel loaded successfully
[ 23758][V][panel_manager.cpp:257] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() completed
[ 23768][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 23776][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 23784][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [23784 ms]: GPIO=HIGH, current=HIGH, previous=HIGH, initialized=true
[ 23797][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 23809][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 23817][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 23830][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 23839][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 23846][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 23855][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 23863][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 23870][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 23878][V][lock_panel.cpp:107] Update(): Update() called
[ 23884][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 23893][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 23899][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 23922][V][main.cpp:260] loop(): Main loop iteration completed
[ 23929][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 23937][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 23947][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 23954][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 23964][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 23973][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 23982][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 23991][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 23998][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 24007][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 24017][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 24026][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 24035][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=RELEASED, raw_gpio=LOW, sensor_valid=YES
[ 24048][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 24061][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 24072][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 24080][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 24093][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 24100][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 24113][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 24120][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 24133][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 24142][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 24149][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 24158][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 24166][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 24173][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 24181][V][lock_panel.cpp:107] Update(): Update() called
[ 24187][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 24196][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 24202][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 24224][V][main.cpp:260] loop(): Main loop iteration completed
[ 24231][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 24239][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 24249][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 24256][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 24266][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 24275][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 24284][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 24293][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 24306][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 24316][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 24325][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 24338][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 24345][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 24358][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 24365][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 24378][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 24387][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 24394][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 24403][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 24411][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 24418][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 24426][V][lock_panel.cpp:107] Update(): Update() called
[ 24432][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 24441][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 24447][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 24469][V][main.cpp:260] loop(): Main loop iteration completed
[ 24476][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 24484][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 24494][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 24501][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 24511][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 24520][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 24529][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 24538][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 24551][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 24561][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 24570][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 24583][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 24590][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 24603][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 24610][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 24623][V][debug_error_sensor.cpp:48] GetReading(): GetReading() called
[ 24635][I][debug_error_sensor.cpp:81] GetReading(): Debug error button pressed - GPIO 34 is HIGH
[ 24645][V][error_manager.cpp:8] Instance(): Instance() called
[ 24651][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 24659][I][debug_error_sensor.cpp:86] GetReading(): Error queue is empty - generating test errors
[ 24668][V][error_manager.cpp:8] Instance(): Instance() called
[ 24675][V][error_manager.cpp:43] ReportWarning(): ReportWarning() called
[ 24682][V][error_manager.cpp:15] ReportError(): ReportError() called
[ 24689][V][error_manager.cpp:124] TrimErrorQueue(): TrimErrorQueue() called
[ 24696][E][error_manager.cpp:37] ReportError(): [WARNING] DebugTest: Test warning for debugging error panel functionality
[T] Error reported: WARNING
[ 24709][V][error_manager.cpp:8] Instance(): Instance() called
[ 24717][V][error_manager.cpp:15] ReportError(): ReportError() called
[ 24724][V][error_manager.cpp:124] TrimErrorQueue(): TrimErrorQueue() called
[ 24731][E][error_manager.cpp:37] ReportError(): [ERROR] DebugTest: Test error for debugging error panel navigation
[T] Error reported: ERROR
[ 24743][V][error_manager.cpp:8] Instance(): Instance() called
[ 24750][V][error_manager.cpp:49] ReportCriticalError(): ReportCriticalError() called
[ 24759][V][error_manager.cpp:15] ReportError(): ReportError() called
[ 24766][V][error_manager.cpp:124] TrimErrorQueue(): TrimErrorQueue() called
[ 24773][E][error_manager.cpp:37] ReportError(): [CRITICAL] DebugTest: Test critical error for debugging error display
[T] Error reported: CRITICAL
[ 24785][I][debug_error_sensor.cpp:96] GetReading(): Debug errors generated: 1 WARNING, 1 ERROR, 1 CRITICAL
[ 24797][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 24805][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 24812][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 24822][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[T] ErrorOccurredActivate() - Loading ERROR panel
[T] Panel transition requested: ErrorPanel
[ 24830][V][panel_manager.cpp:148] CreateAndLoadPanel(): Loading panel directly: ErrorPanel
[ 24846][V][panel_manager.cpp:156] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() called for: ErrorPanel
[ 24857][V][lock_panel.cpp:23] ~LockPanel(): ~LockPanel() destructor called
[ 24865][V][lock_component.cpp:14] ~LockComponent(): ~LockComponent() destructor called
[ 24874][V][panel_manager.cpp:87] CreatePanel(): CreatePanel() called for: ErrorPanel
[ 24882][V][panel_factory.cpp:35] CreateErrorPanel(): CreateErrorPanel() called
[ 24890][V][component_factory.cpp:15] Instance(): Instance() called
[ 24897][V][error_panel.cpp:18] ErrorPanel(): ErrorPanel constructor called
[ 24904][V][error_panel.cpp:297] SetManagers(): SetManagers() called
[ 24911][V][error_panel.cpp:46] Init(): Init() called
[ 24916][V][lvgl_display_provider.cpp:27] CreateScreen(): CreateScreen() called
[ 24925][V][error_manager.cpp:8] Instance(): Instance() called
[ 24931][V][error_manager.cpp:113] SetErrorPanelActive(): SetErrorPanelActive() called
[ 24940][I][error_panel.cpp:68] Init(): Error panel activated - switching to error display mode
[ 24949][I][error_panel.cpp:70] Init(): ErrorPanel initialization completed
[ 24956][I][panel_manager.cpp:239] CreateAndLoadPanelDirect(): PanelManager: About to call ApplyCurrentTheme for panel: ErrorPanel
[ 24969][I][style_manager.cpp:217] ApplyCurrentTheme(): StyleManager::ApplyCurrentTheme() called
[ 24978][V][style_manager.cpp:227] ApplyCurrentTheme(): Read theme from preferences: Day (cached: Day)
[ 24988][V][style_manager.cpp:234] ApplyCurrentTheme(): Theme unchanged (Day) - no update needed
[ 24998][I][panel_manager.cpp:241] CreateAndLoadPanelDirect(): PanelManager: ApplyCurrentTheme completed for panel: ErrorPanel
[ 25010][V][panel_manager.cpp:358] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions() called
[ 25020][I][panel_manager.cpp:383] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Extracted functions - short=0x400f950c, long=0x400f9158, context=0x3ffb3b20
[ 25036][V][interrupt_manager.cpp:167] UpdatePanelFunctions(): UpdatePanelFunctions() called
[ 25045][I][interrupt_manager.cpp:176] UpdatePanelFunctions(): Updated panel functions in ActionHandler
[ 25055][I][panel_manager.cpp:395] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Successfully updated universal button interrupts with panel functions
[ 25070][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 25078][V][error_panel.cpp:76] Load(): Load() called
[ 25084][V][component_factory.cpp:40] CreateErrorComponent(): CreateErrorComponent() called
[ 25093][V][error_component.cpp:12] ErrorComponent(): ErrorComponent() constructor called
[ 25102][V][error_component.cpp:24] Render(): Render() called
[ 25111][V][error_component.cpp:145] CreateSingleErrorUI(): CreateSingleErrorUI() called
[ 25163][V][error_component.cpp:75] UpdateErrorDisplay(): UpdateErrorDisplay() called
[ 25171][V][error_manager.cpp:8] Instance(): Instance() called
[ 25177][V][error_manager.cpp:68] GetErrorQueue(): GetErrorQueue() called
[ 25185][V][error_component.cpp:90] UpdateErrorDisplay(): UpdateErrorDisplay() called with 3 errors
[ 25195][V][error_component.cpp:196] DisplayCurrentError(): DisplayCurrentError() called
[ 25204][V][error_component.cpp:251] GetErrorLevelText(): GetErrorLevelText() called
[ 25218][V][error_manager.cpp:8] Instance(): Instance() called
[ 25224][V][error_manager.cpp:68] GetErrorQueue(): GetErrorQueue() called
[ 25232][V][error_component.cpp:64] Refresh(): Refresh() called
[ 25239][I][error_panel.cpp:215] ShowPanelCompletionCallback(): ErrorPanel::ShowPanelCompletionCallback() called - CRITICAL for UI state
[ 25252][I][error_panel.cpp:229] ShowPanelCompletionCallback(): ErrorPanel: Setting UI state to IDLE - this unblocks main loop processing
[ 25265][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 25273][I][error_panel.cpp:231] ShowPanelCompletionCallback(): ErrorPanel: UI state set to IDLE successfully
[T] SetTheme() called
[ 25284][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 25292][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[ 25316][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[T] ErrorPanel loaded successfully
[ 25595][V][panel_manager.cpp:257] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() completed
[ 25605][V][error_manager.cpp:113] SetErrorPanelActive(): SetErrorPanelActive() called
[ 25613][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 25620][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 25629][V][error_panel.cpp:138] Update(): Update() called
[ 25635][V][error_manager.cpp:8] Instance(): Instance() called
[ 25641][V][error_manager.cpp:68] GetErrorQueue(): GetErrorQueue() called
[ 25649][V][error_panel.cpp:396] SortErrorsBySeverity(): SortErrorsBySeverity() called
[ 25657][V][error_component.cpp:115] UpdateErrorDisplay(): UpdateErrorDisplay() called with 3 errors, current index 0
[ 25668][V][error_component.cpp:196] DisplayCurrentError(): DisplayCurrentError() called
[ 25678][V][error_component.cpp:251] GetErrorLevelText(): GetErrorLevelText() called
[ 25895][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 25902][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 25924][V][main.cpp:260] loop(): Main loop iteration completed
[ 25931][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 34, UI state: BUSY, panel: ErrorPanel
[ 25940][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[ 25949][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 25959][V][action_handler.cpp:46] Process(): Process() called
[ 25965][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 25972][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = LOW
[ 25981][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 25991][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 26001][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 26010][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 26018][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 26025][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 26035][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 26044][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 26053][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 26062][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=RELEASED, raw_gpio=LOW, sensor_valid=YES
[ 26075][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 26088][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 26099][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 26107][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 26120][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 26128][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [26128 ms]: GPIO=HIGH, current=HIGH, previous=HIGH, initialized=true
[ 26141][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 26153][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 26161][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 26174][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 26183][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 26190][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 26196][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 26219][V][main.cpp:260] loop(): Main loop iteration completed
[ 26226][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[ 26234][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 26244][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 26251][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 26261][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 26270][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 26279][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 26288][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 26301][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 26311][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 26320][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 26333][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 26340][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 26353][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 26360][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 26373][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 26382][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 26389][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 26395][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 26418][V][main.cpp:260] loop(): Main loop iteration completed
[ 26425][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[ 26433][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 26443][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 26450][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 26460][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 26469][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 26478][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 26487][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 26500][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 26510][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 26519][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 26532][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 26539][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 26552][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 26559][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 26572][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 26581][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 26588][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 26594][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 26617][V][main.cpp:260] loop(): Main loop iteration completed
[ 26624][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[ 26632][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 26642][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 26649][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[T] ButtonSensor: PRESS STARTED at 26659 ms (GPIO HIGH detected)
[ 26659][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 26674][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 26682][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 26691][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 26698][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 26708][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 26717][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 26726][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 26735][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=RELEASED, raw_gpio=HIGH, sensor_valid=YES
[T] Button press started
[ 26748][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=true, endTime=0
[ 26762][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 26773][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 26781][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 26794][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 26801][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 26814][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 26821][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 26834][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 26843][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 26850][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 26856][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 26879][V][main.cpp:260] loop(): Main loop iteration completed
[ 26886][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[ 26894][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 26904][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 26911][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 26921][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 26931][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 26939][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 26948][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 26961][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 26971][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 26980][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 26993][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 27000][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 27013][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 27020][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 27033][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 27042][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 27049][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 27055][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 27078][V][main.cpp:260] loop(): Main loop iteration completed
[ 27085][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[ 27093][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 27103][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 27110][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 27120][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 27130][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 27138][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 27147][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 27160][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 27170][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 27179][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 27192][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 27199][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 27212][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 27219][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 27232][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 27241][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 27248][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 27254][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 27277][V][main.cpp:260] loop(): Main loop iteration completed
[ 27284][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[ 27292][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 27302][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 27309][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[T] ButtonSensor: PRESS ENDED after 660 ms (GPIO LOW detected)
[T] ButtonSensor: ACTION DETECTED: SHORT_PRESS (actionReady=true)
[T] ButtonSensor: Should trigger 'short_press' action
[ 27324][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 27344][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 27353][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 27361][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 27368][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 27378][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 27388][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 27396][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 27405][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=PRESSED, raw_gpio=LOW, sensor_valid=YES
[T] Button press ended
[ 27418][I][action_handler.cpp:286] DetectButtonAction(): DetectButtonAction: Duration=670 ms, Action=SHORT_PRESS
[T] Button action detected: SHORT_PRESS
[ 27431][V][action_handler.cpp:162] ShouldTriggerActionWithDetectedAction(): SHORT press match for 'short_press' - shouldTrigger=YES
[ 27446][I][action_handler.cpp:181] ExecutePendingActions(): ExecutePendingActions: Executing triggered action 'short_press' (type: SHORT)
[ 27459][I][action_handler.cpp:185] ExecutePendingActions(): Executing injected SHORT press function for action 'short_press'
[ 27471][I][error_panel.cpp:311] ErrorPanelShortPress(): ErrorPanelShortPress() called with context=0x3ffb3b20
[T] ErrorPanel: Calling HandleShortPress() on valid panel instance
[T] ErrorPanel::HandleShortPress() - Manual cycling to next error
[T] ErrorPanel::HandleShortPress() - Current error index: 0/3
[T] ErrorPanel::HandleShortPress() - Advancing to next error
[ 27493][I][error_panel.cpp:421] AdvanceToNextError(): AdvanceToNextError: Moving from error 0 to 1 (total: 3)
[ 27514][I][error_panel.cpp:427] AdvanceToNextError(): AdvanceToNextError: Updating error component display
[ 27525][V][error_component.cpp:115] UpdateErrorDisplay(): UpdateErrorDisplay() called with 3 errors, current index 1
[ 27536][V][error_component.cpp:196] DisplayCurrentError(): DisplayCurrentError() called
[ 27545][V][error_component.cpp:251] GetErrorLevelText(): GetErrorLevelText() called
[ 27562][I][error_panel.cpp:429] AdvanceToNextError(): AdvanceToNextError: Error component updated successfully
[ 27573][I][error_panel.cpp:436] AdvanceToNextError(): AdvanceToNextError: Successfully advanced to error 2/3
[ 27584][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 27594][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 27603][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 27616][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 27623][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 27636][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 27643][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 27656][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 27665][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 27672][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 27889][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 27912][V][main.cpp:260] loop(): Main loop iteration completed
[ 27919][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[ 27927][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 27937][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 27944][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 27954][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 27963][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 27972][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 27981][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 27994][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 28004][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 28013][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 28026][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 28033][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 28046][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 28053][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 28066][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 28075][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 28082][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 28088][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 28111][V][main.cpp:260] loop(): Main loop iteration completed
[ 28118][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 42, UI state: BUSY, panel: ErrorPanel
[ 28127][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[ 28136][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 28146][V][action_handler.cpp:46] Process(): Process() called
[ 28152][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 28159][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = LOW
[ 28168][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 28178][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 28188][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 28197][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 28205][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 28218][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 28229][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 28237][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 28250][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 28258][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [28258 ms]: GPIO=HIGH, current=HIGH, previous=HIGH, initialized=true
[ 28271][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 28283][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 28291][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 28304][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 28313][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 28320][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 28326][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 28349][V][main.cpp:260] loop(): Main loop iteration completed
[ 28356][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[ 28364][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 28374][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 28381][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 28391][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 28400][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 28409][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 28418][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 28425][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 28434][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 28444][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 28453][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 28462][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=RELEASED, raw_gpio=LOW, sensor_valid=YES
[ 28475][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 28488][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 28499][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 28507][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 28520][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 28527][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 28540][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 28547][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 28560][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 28569][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 28576][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 28582][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 28605][V][main.cpp:260] loop(): Main loop iteration completed
[ 28612][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[ 28620][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 28630][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 28637][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[T] ButtonSensor: PRESS STARTED at 28647 ms (GPIO HIGH detected)
[ 28647][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 28662][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 28670][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 28679][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 28686][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 28696][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 28705][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 28714][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 28723][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=RELEASED, raw_gpio=HIGH, sensor_valid=YES
[T] Button press started
[ 28736][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=true, endTime=0
[ 28750][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 28761][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 28769][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 28782][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 28789][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 28802][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 28809][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 28822][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 28831][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 28838][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 28844][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 28867][V][main.cpp:260] loop(): Main loop iteration completed
[ 28874][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[ 28882][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 28892][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 28899][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 28909][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 28919][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 28927][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 28936][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 28949][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 28959][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 28968][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 28981][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 28988][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 29001][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 29008][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 29021][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 29030][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 29037][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 29043][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 29066][V][main.cpp:260] loop(): Main loop iteration completed
[ 29073][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[ 29081][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 29091][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 29098][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 29108][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 29118][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 29126][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 29135][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 29148][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 29158][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 29167][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 29180][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 29187][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 29200][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 29207][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 29220][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 29229][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 29236][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 29242][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 29265][V][main.cpp:260] loop(): Main loop iteration completed
[ 29272][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[ 29280][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 29290][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 29297][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 29307][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 29317][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 29325][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 29334][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 29347][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 29357][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 29366][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 29379][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 29386][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 29399][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 29406][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 29419][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 29428][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 29435][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 29441][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 29464][V][main.cpp:260] loop(): Main loop iteration completed
[ 29471][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[ 29479][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 29489][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 29496][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 29506][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 29516][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 29524][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 29533][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 29546][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 29556][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 29565][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 29578][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 29585][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 29598][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 29605][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 29618][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 29627][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 29634][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 29640][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 29663][V][main.cpp:260] loop(): Main loop iteration completed
[ 29670][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[ 29678][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 29688][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 29695][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 29705][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 29715][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 29723][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 29732][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 29739][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 29749][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 29758][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 29767][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 29776][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=PRESSED, raw_gpio=HIGH, sensor_valid=YES
[ 29789][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 29802][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 29812][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 29821][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 29834][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 29841][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 29854][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 29861][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 29874][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 29883][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 29890][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 29896][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 29919][V][main.cpp:260] loop(): Main loop iteration completed
[ 29926][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[ 29934][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 29944][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 29951][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 29961][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 29971][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 29979][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 29988][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 30001][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 30011][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 30020][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 30033][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 30040][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 30053][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 30060][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 30073][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 30082][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 30089][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 30095][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 30118][V][main.cpp:260] loop(): Main loop iteration completed
[ 30125][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 51, UI state: BUSY, panel: ErrorPanel
[ 30134][I][main.cpp:203] loop(): === Periodic System Diagnostics ===
[ 30141][I][main.cpp:208] loop(): Interrupts: 7 registered, 50 evaluations, 0 executions
[ 30150][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: BUSY
[ 30159][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 30169][V][action_handler.cpp:46] Process(): Process() called
[ 30175][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 30182][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = HIGH
[ 30191][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 30201][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 30211][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 30220][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 30228][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 30241][I][action_handler.cpp:305] DetectLongPressDuringHold(): DetectLongPressDuringHold: Long press detected during hold at 1505 ms
[T] Button action detected: LONG_PRESS
[ 30254][V][action_handler.cpp:168] ShouldTriggerActionWithDetectedAction(): LONG press match for 'long_press' - shouldTrigger=YES
[ 30269][I][action_handler.cpp:181] ExecutePendingActions(): ExecutePendingActions: Executing triggered action 'long_press' (type: LONG)
[ 30282][I][action_handler.cpp:190] ExecutePendingActions(): Executing injected LONG press function for action 'long_press'
[ 30294][I][error_panel.cpp:327] ErrorPanelLongPress(): ErrorPanelLongPress() called with context=0x3ffb3b20
[T] ErrorPanel: Calling HandleLongPress() on valid panel instance
[T] ErrorPanel: Long press - clearing all errors and exiting panel
[ 30305][V][error_manager.cpp:8] Instance(): Instance() called
[ 30322][V][error_manager.cpp:95] ClearAllErrors(): ClearAllErrors() called
[ 30329][V][error_manager.cpp:8] Instance(): Instance() called
[ 30336][V][error_manager.cpp:113] SetErrorPanelActive(): SetErrorPanelActive() called
[T] CheckRestoration() called
[ 30344][V][interrupt_manager.cpp:223] CheckAndExecuteHighestPriorityTrigger(): CheckAndExecuteHighestPriorityTrigger() called
[ 30358][I][interrupt_manager.cpp:235] CheckAndExecuteHighestPriorityTrigger(): Found active trigger 'lock' (priority 1) - executing
[T] LockEngagedActivate() - Loading LOCK panel
[T] LoadPanel() called for: LockPanel
[T] Panel transition requested: LockPanel
[ 30372][V][panel_manager.cpp:148] CreateAndLoadPanel(): Loading panel directly: LockPanel
[ 30390][V][panel_manager.cpp:156] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() called for: LockPanel
[ 30401][V][error_panel.cpp:23] ~ErrorPanel(): ~ErrorPanel() destructor called
[ 30411][V][error_component.cpp:17] ~ErrorComponent(): ~ErrorComponent() destructor called
[ 30420][V][error_manager.cpp:8] Instance(): Instance() called
[ 30426][V][error_manager.cpp:113] SetErrorPanelActive(): SetErrorPanelActive() called
[ 30435][V][panel_manager.cpp:87] CreatePanel(): CreatePanel() called for: LockPanel
[ 30443][V][panel_factory.cpp:53] CreateLockPanel(): CreateLockPanel() called
[ 30451][V][component_factory.cpp:15] Instance(): Instance() called
[ 30457][V][lock_panel.cpp:17] LockPanel(): LockPanel constructor called
[ 30465][V][lock_panel.cpp:140] SetManagers(): SetManagers() called
[ 30471][V][lock_panel.cpp:41] Init(): Init() called
[ 30477][V][lvgl_display_provider.cpp:27] CreateScreen(): CreateScreen() called
[ 30485][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[ 30494][I][lock_panel.cpp:64] Init(): LockPanel initialization completed
[ 30501][I][panel_manager.cpp:239] CreateAndLoadPanelDirect(): PanelManager: About to call ApplyCurrentTheme for panel: LockPanel
[ 30514][I][style_manager.cpp:217] ApplyCurrentTheme(): StyleManager::ApplyCurrentTheme() called
[ 30523][V][style_manager.cpp:227] ApplyCurrentTheme(): Read theme from preferences: Day (cached: Day)
[ 30533][V][style_manager.cpp:234] ApplyCurrentTheme(): Theme unchanged (Day) - no update needed
[ 30542][I][panel_manager.cpp:241] CreateAndLoadPanelDirect(): PanelManager: ApplyCurrentTheme completed for panel: LockPanel
[ 30554][V][panel_manager.cpp:358] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions() called
[ 30564][I][panel_manager.cpp:383] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Extracted functions - short=0x400faed0, long=0x400fb468, context=0x3ffb3784
[ 30580][V][interrupt_manager.cpp:167] UpdatePanelFunctions(): UpdatePanelFunctions() called
[ 30589][I][interrupt_manager.cpp:176] UpdatePanelFunctions(): Updated panel functions in ActionHandler
[ 30599][I][panel_manager.cpp:395] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Successfully updated universal button interrupts with panel functions
[ 30614][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 30622][V][lock_panel.cpp:70] Load(): Load() called
[ 30628][V][component_factory.cpp:52] CreateLockComponent(): CreateLockComponent() called
[ 30637][V][lock_component.cpp:9] LockComponent(): LockComponent constructor called
[ 30645][V][lock_component.cpp:29] Render(): Render() called
[ 30651][V][lvgl_display_provider.cpp:71] CreateImage(): CreateImage() called
[ 30661][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 30669][V][lock_panel.cpp:121] ShowPanelCompletionCallback(): ShowPanelCompletionCallback() called
[ 30679][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 30687][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[T] LockPanel loaded successfully
[ 30805][V][panel_manager.cpp:257] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() completed
[T] Active trigger found and executed - skipping restoration
[ 30815][I][error_panel.cpp:390] HandleLongPress(): ErrorPanel: Triggered restoration check after clearing errors
[ 30831][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 30841][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 30850][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 30863][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 30870][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [30870 ms]: GPIO=HIGH, current=HIGH, previous=HIGH, initialized=true
[ 30883][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 30896][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 30903][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 30916][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 30925][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 30932][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 30941][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 30949][V][error_manager.cpp:113] SetErrorPanelActive(): SetErrorPanelActive() called
[ 30957][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 30964][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 30972][V][lock_panel.cpp:107] Update(): Update() called
[ 30978][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 30987][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 30993][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 31016][V][main.cpp:260] loop(): Main loop iteration completed
[ 31023][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 31031][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 31041][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 31048][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 31058][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 31068][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 31076][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 31085][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 31092][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[T] ButtonSensor: PRESS ENDED after 2454 ms (GPIO LOW detected)
[T] ButtonSensor: ACTION DETECTED: LONG_PRESS (actionReady=true)
[T] ButtonSensor: Should trigger 'long_press' action
[ 31107][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 31126][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 31135][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 31144][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=PRESSED, raw_gpio=LOW, sensor_valid=YES
[ 31157][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 31170][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 31180][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 31189][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 31202][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 31209][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 31222][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 31229][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 31242][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 31251][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 31258][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 31267][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 31275][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 31282][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 31290][V][lock_panel.cpp:107] Update(): Update() called
[ 31296][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 31305][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 31311][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 31333][V][main.cpp:260] loop(): Main loop iteration completed
[ 31340][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 31348][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 31358][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 31365][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 31375][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 31384][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 31393][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 31402][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 31409][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 31418][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 31428][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 31437][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 31446][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=PRESSED, raw_gpio=LOW, sensor_valid=YES
[T] Button press ended
[ 31459][I][action_handler.cpp:276] DetectButtonAction(): DetectButtonAction: Ignoring release after long press was triggered during hold
[ 31473][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 31484][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 31492][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 31505][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 31513][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 31525][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 31533][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 31545][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 31554][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 31561][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 31570][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 31578][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 31585][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 31593][V][lock_panel.cpp:107] Update(): Update() called
[ 31599][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 31608][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 31614][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 31636][V][main.cpp:260] loop(): Main loop iteration completed
[ 31643][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 31651][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 31661][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 31668][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 31678][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 31687][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 31696][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 31705][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=31459
[ 31718][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 31729][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 31737][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 31750][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 31758][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 31770][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 31778][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 31790][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 31799][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 31806][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 31815][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 31823][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 31830][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 31838][V][lock_panel.cpp:107] Update(): Update() called
[ 31844][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 31853][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 31859][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 31881][V][main.cpp:260] loop(): Main loop iteration completed
[ 31888][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 31896][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 31906][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 31913][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 31923][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 31932][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 31941][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 31950][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=31459
[ 31963][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 31974][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 31982][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 31995][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 32003][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 32015][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 32023][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 32035][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 32044][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 32051][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 32060][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 32068][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 32075][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 32083][V][lock_panel.cpp:107] Update(): Update() called
[ 32089][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 32098][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 32104][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 32126][V][main.cpp:260] loop(): Main loop iteration completed
[ 32133][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 56, UI state: IDLE, panel: LockPanel
[ 32142][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 32151][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 32161][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 32168][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 32177][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 32187][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 32196][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 32205][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=31459
[ 32218][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 32229][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 32237][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 32250][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 32257][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=HIGH
[ 32270][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 32277][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 32290][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 32299][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 32306][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 32315][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 32323][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 32330][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 32338][V][lock_panel.cpp:107] Update(): Update() called
[ 32344][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 32353][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 32359][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 32381][V][main.cpp:260] loop(): Main loop iteration completed
[ 32388][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 32396][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 32406][V][action_handler.cpp:46] Process(): Process() called
[ 32413][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 32419][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = LOW
[ 32429][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 32438][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 32448][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 32457][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 32466][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 32473][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 32482][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 32492][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 32501][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 32510][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=RELEASED, raw_gpio=LOW, sensor_valid=YES
[ 32523][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=31459
[ 32536][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 32547][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 32555][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 32568][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 32576][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [32576 ms]: GPIO=LOW, current=LOW, previous=HIGH, initialized=true
[T] LOCK SENSOR STATE CHANGE [32576 ms]: HIGH/engaged -> LOW/disengaged
[ 32590][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned true, previousLockState_ now=LOW
[ 32607][V][lock_sensor.cpp:39] GetReading(): GetReading() called
[ 32613][V][lock_sensor.cpp:49] GetReading(): Lock sensor GPIO 27 state: LOW
[T] LockDisengagedActivate() - Checking for restoration
[T] CheckRestoration() called
[ 32622][V][interrupt_manager.cpp:223] CheckAndExecuteHighestPriorityTrigger(): CheckAndExecuteHighestPriorityTrigger() called
[ 32640][V][interrupt_manager.cpp:245] CheckAndExecuteActiveStyleTriggers(): CheckAndExecuteActiveStyleTriggers() called
[ 32651][I][interrupt_manager.cpp:257] CheckAndExecuteActiveStyleTriggers(): Found active STYLE trigger 'lights' (priority 0) - executing
[T] LightsOnActivate() - Setting NIGHT theme
[T] SetTheme() called
[ 32665][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 32677][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[T] No blocking interrupts - restoring to 'OemOilPanel'
[ 32689][V][panel_manager.cpp:156] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() called for: OemOilPanel
[ 32703][V][lock_panel.cpp:23] ~LockPanel(): ~LockPanel() destructor called
[ 32712][V][lock_component.cpp:14] ~LockComponent(): ~LockComponent() destructor called
[ 32720][V][panel_manager.cpp:87] CreatePanel(): CreatePanel() called for: OemOilPanel
[ 32729][V][panel_factory.cpp:29] CreateOemOilPanel(): CreateOemOilPanel() called
[ 32737][V][component_factory.cpp:15] Instance(): Instance() called
[ 32743][V][oil_pressure_sensor.cpp:13] OilPressureSensor(): OilPressureSensor() constructor called
[ 32753][V][oil_temperature_sensor.cpp:13] OilTemperatureSensor(): OilTemperatureSensor() constructor called
[ 32763][V][oem_oil_panel.cpp:20] OemOilPanel(): OemOilPanel constructor called
[ 32771][V][oem_oil_panel.cpp:513] SetManagers(): SetManagers() called
[ 32778][V][oem_oil_panel.cpp:527] SetPreferenceService(): SetPreferenceService() called
[ 32787][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 32797][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 32805][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 32812][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 32821][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 32829][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 32837][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 32846][V][oem_oil_panel.cpp:79] Init(): Init() called
[ 32852][V][lvgl_display_provider.cpp:27] CreateScreen(): CreateScreen() called
[ 32860][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[ 32869][V][oil_pressure_sensor.cpp:34] Init(): Init() called
[ 32875][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[T] Pressure reading: 3 Bar
[ 32883][V][oil_pressure_sensor.cpp:99] GetReading(): Pressure reading changed (raw: 1321)
[ 32894][V][oil_temperature_sensor.cpp:34] Init(): Init() called
[ 32900][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[T] Temperature reading: 77 C
[ 32908][V][oil_temperature_sensor.cpp:99] GetReading(): Temperature reading changed (raw: 2642)
[ 32919][I][oem_oil_panel.cpp:109] Init(): OemOilPanel initialization completed
[ 32927][I][panel_manager.cpp:239] CreateAndLoadPanelDirect(): PanelManager: About to call ApplyCurrentTheme for panel: OemOilPanel
[ 32940][I][style_manager.cpp:217] ApplyCurrentTheme(): StyleManager::ApplyCurrentTheme() called
[ 32949][V][style_manager.cpp:227] ApplyCurrentTheme(): Read theme from preferences: Day (cached: Day)
[ 32959][V][style_manager.cpp:234] ApplyCurrentTheme(): Theme unchanged (Day) - no update needed
[ 32968][I][panel_manager.cpp:241] CreateAndLoadPanelDirect(): PanelManager: ApplyCurrentTheme completed for panel: OemOilPanel
[ 32981][V][panel_manager.cpp:358] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions() called
[ 32990][I][panel_manager.cpp:383] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Extracted functions - short=0x400fbad4, long=0x400fc4d0, context=0x3ffb3b20
[ 33006][V][interrupt_manager.cpp:167] UpdatePanelFunctions(): UpdatePanelFunctions() called
[ 33015][I][interrupt_manager.cpp:176] UpdatePanelFunctions(): Updated panel functions in ActionHandler
[ 33025][I][panel_manager.cpp:395] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Successfully updated universal button interrupts with panel functions
[ 33041][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 33049][V][oem_oil_panel.cpp:116] Load(): Load() called
[ 33055][V][component_factory.cpp:28] CreateOilPressureComponent(): CreateOilPressureComponent() called
[ 33065][V][oem_oil_component.cpp:16] OemOilComponent(): OemOilComponent() constructor called
[ 33074][V][oem_oil_pressure_component.cpp:8] OemOilPressureComponent(): OemOilPressureComponent() constructor called
[ 33085][V][component_factory.cpp:34] CreateOilTemperatureComponent(): CreateOilTemperatureComponent() called
[ 33095][V][oem_oil_component.cpp:16] OemOilComponent(): OemOilComponent() constructor called
[ 33104][V][oem_oil_temperature_component.cpp:8] OemOilTemperatureComponent(): OemOilTemperatureComponent() constructor called
[ 33116][V][oem_oil_component.cpp:65] Render(): Render() called
[ 33123][V][lvgl_display_provider.cpp:61] CreateScale(): CreateScale() called
[ 33134][V][oem_oil_pressure_component.cpp:47] get_scale_mode(): get_scale_mode() called
[ 33142][V][oem_oil_pressure_component.cpp:55] get_angle_range(): get_angle_range() called
[ 33153][V][oem_oil_pressure_component.cpp:71] setup_danger_zone(): setup_danger_zone() called
[ 33162][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 33170][V][oem_oil_pressure_component.cpp:18] get_icon(): get_icon() called
[ 33184][V][oem_oil_pressure_component.cpp:80] get_icon_y_offset(): get_icon_y_offset() called
[ 33195][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 33212][V][oem_oil_pressure_component.cpp:89] get_label_angles(): get_label_angles() called
[ 33221][V][oem_oil_pressure_component.cpp:55] get_angle_range(): get_angle_range() called
[ 33235][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 33260][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 33270][V][oem_oil_component.cpp:65] Render(): Render() called
[ 33277][V][lvgl_display_provider.cpp:61] CreateScale(): CreateScale() called
[ 33288][V][oem_oil_temperature_component.cpp:47] get_scale_mode(): get_scale_mode() called
[ 33297][V][oem_oil_temperature_component.cpp:55] get_angle_range(): get_angle_range() called
[ 33307][V][oem_oil_temperature_component.cpp:89] setup_danger_zone(): setup_danger_zone() called
[ 33316][V][oem_oil_temperature_component.cpp:77] map_value_for_display(): map_value_for_display: max_val=120
[ 33327][V][oem_oil_temperature_component.cpp:80] map_value_for_display(): map_value_for_display: returning mapped value=0
[ 33339][V][oem_oil_temperature_component.cpp:77] map_value_for_display(): map_value_for_display: max_val=120
[ 33349][V][oem_oil_temperature_component.cpp:80] map_value_for_display(): map_value_for_display: returning mapped value=20
[ 33361][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 33369][V][oem_oil_temperature_component.cpp:18] get_icon(): get_icon() called
[ 33414][V][oem_oil_temperature_component.cpp:111] get_icon_y_offset(): get_icon_y_offset() called
[ 33425][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 33441][V][oem_oil_temperature_component.cpp:120] get_label_angles(): get_label_angles() called
[ 33450][V][oem_oil_temperature_component.cpp:55] get_angle_range(): get_angle_range() called
[ 33465][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 33490][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 33508][V][oem_oil_temperature_component.cpp:77] map_value_for_display(): map_value_for_display: max_val=120
[ 33518][V][oem_oil_temperature_component.cpp:80] map_value_for_display(): map_value_for_display: returning mapped value=120
[ 33537][V][oem_oil_component.cpp:98] Refresh(): Refresh() called
[ 33544][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 33551][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 33561][V][oem_oil_component.cpp:98] Refresh(): Refresh() called
[ 33568][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 33576][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 33586][V][oem_oil_panel.cpp:573] ShowPanelCompletionCallback(): ShowPanelCompletionCallback() called
[ 33596][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 33605][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[T] OemOilPanel loaded successfully
[ 34243][V][panel_manager.cpp:257] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() completed
[ 34252][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 34260][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 34273][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 34282][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 34289][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 34298][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 34306][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 34313][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 34321][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 34331][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 34339][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 34347][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 34355][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 34363][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 34372][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 34380][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[ 34388][V][oem_oil_panel.cpp:694] MapPressureValue(): MapPressureValue() returning: 13
[ 34397][I][oem_oil_panel.cpp:304] UpdateOilPressure(): Updating pressure from -1 to 13
[ 34405][V][oem_oil_component.cpp:98] Refresh(): Refresh() called
[ 34412][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 34421][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 34434][I][oem_oil_panel.cpp:331] UpdateOilPressure(): Initial pressure animation: starting from 0 to 13
[ 34445][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 34453][V][oem_oil_panel.cpp:637] ExecutePressureAnimationCallback(): ExecutePressureAnimationCallback() called with value: 0
[ 34470][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[ 34477][V][oem_oil_panel.cpp:787] MapTemperatureValue(): MapTemperatureValue() returning: 77
[ 34486][I][oem_oil_panel.cpp:412] UpdateOilTemperature(): Updating temperature from -1 to 77
[ 34496][V][oem_oil_component.cpp:98] Refresh(): Refresh() called
[ 34502][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 34512][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 34525][I][oem_oil_panel.cpp:439] UpdateOilTemperature(): Initial temperature animation: starting from 0 to 77
[ 34536][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 34544][V][oem_oil_panel.cpp:659] ExecuteTemperatureAnimationCallback(): ExecuteTemperatureAnimationCallback() called with value: 0
[ 34557][V][oem_oil_temperature_component.cpp:77] map_value_for_display(): map_value_for_display: max_val=120
[ 34568][V][oem_oil_temperature_component.cpp:80] map_value_for_display(): map_value_for_display: returning mapped value=120
[ 35120][V][oem_oil_panel.cpp:659] ExecuteTemperatureAnimationCallback(): ExecuteTemperatureAnimationCallback() called with value: 77
[ 35133][V][oem_oil_temperature_component.cpp:77] map_value_for_display(): map_value_for_display: max_val=120
[ 35144][V][oem_oil_temperature_component.cpp:80] map_value_for_display(): map_value_for_display: returning mapped value=43
[ 35160][V][oem_oil_panel.cpp:637] ExecutePressureAnimationCallback(): ExecutePressureAnimationCallback() called with value: 13
[ 35177][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 35185][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 35624][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 35647][V][main.cpp:260] loop(): Main loop iteration completed
[ 35654][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 58, UI state: IDLE, panel: OemOilPanel
[ 35664][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 35672][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 35682][V][action_handler.cpp:46] Process(): Process() called
[ 35688][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 35695][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = LOW
[ 35704][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 35714][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 35724][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 35733][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 35741][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 35748][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 35758][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 35768][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 35776][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 35785][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=RELEASED, raw_gpio=LOW, sensor_valid=YES
[ 35798][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=31459
[ 35812][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 35822][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 35831][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 35844][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 35851][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [35851 ms]: GPIO=LOW, current=LOW, previous=LOW, initialized=true
[ 35864][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 35877][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 35884][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 35897][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 35906][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 35913][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 35922][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 35930][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 35937][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 35945][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 35955][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 35963][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 35971][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 35979][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 35987][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 35996][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 36004][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[ 36012][V][oem_oil_panel.cpp:694] MapPressureValue(): MapPressureValue() returning: 13
[ 36021][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[ 36028][V][oem_oil_panel.cpp:787] MapTemperatureValue(): MapTemperatureValue() returning: 77
[ 36037][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 36046][V][oem_oil_panel.cpp:253] Update(): OemOilPanel update completed immediately (no animations)
[ 36056][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 36062][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 36085][V][main.cpp:260] loop(): Main loop iteration completed
[ 36092][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 36100][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 36110][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 36117][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 36127][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 36136][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 36145][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 36154][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=31459
[ 36167][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 36178][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 36186][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 36199][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 36207][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 36219][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[T] Lights sensor state changed: ON -> OFF
[ 36227][V][lights_sensor.cpp:36] GetReading(): GetReading() called
[ 36237][V][lights_sensor.cpp:45] GetLightsState(): GetLightsState() called
[ 36244][V][lights_sensor.cpp:55] GetLightsState(): Lights sensor GPIO 33 state: LOW
[T] LightsOffActivate() - Setting DAY theme
[T] SetTheme() called
[ 36253][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 36265][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[ 36307][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 36319][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 36328][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 36335][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 36344][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 36352][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 36359][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 36367][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 36377][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 36385][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 36393][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 36401][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 36409][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 36418][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 36426][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[ 36434][V][oem_oil_panel.cpp:694] MapPressureValue(): MapPressureValue() returning: 13
[ 36442][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[ 36450][V][oem_oil_panel.cpp:787] MapTemperatureValue(): MapTemperatureValue() returning: 77
[ 36459][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 36468][V][oem_oil_panel.cpp:253] Update(): OemOilPanel update completed immediately (no animations)
[ 37045][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 37052][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 37074][V][main.cpp:260] loop(): Main loop iteration completed
[ 37081][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 37089][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 37099][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 37106][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 37116][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 37125][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 37134][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 37143][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 37150][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 37159][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 37169][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 37178][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 37187][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=RELEASED, raw_gpio=LOW, sensor_valid=YES
[ 37200][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=31459
[ 37213][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 37224][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 37233][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 37245][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 37253][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 37265][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 37273][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 37285][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 37294][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 37301][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 37310][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 37318][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 37325][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 37333][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 37343][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 37351][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 37359][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 37367][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 37375][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 37384][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 37392][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[ 37400][V][oem_oil_panel.cpp:694] MapPressureValue(): MapPressureValue() returning: 13
[ 37409][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[ 37416][V][oem_oil_panel.cpp:787] MapTemperatureValue(): MapTemperatureValue() returning: 77
[ 37425][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 37434][V][oem_oil_panel.cpp:253] Update(): OemOilPanel update completed immediately (no animations)
[ 37444][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 37450][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 37473][V][main.cpp:260] loop(): Main loop iteration completed
[ 37480][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 37488][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 37498][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 37505][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 37515][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 37524][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 37533][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 37542][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=31459
[ 37555][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 37566][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 37574][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 37587][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 37595][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 37607][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 37615][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 37627][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 37636][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 37643][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 37652][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 37660][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 37667][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 37675][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 37685][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 37693][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 37701][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 37709][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 37717][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 37726][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 37734][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[ 37742][V][oem_oil_panel.cpp:694] MapPressureValue(): MapPressureValue() returning: 13
[ 37750][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[ 37758][V][oem_oil_panel.cpp:787] MapTemperatureValue(): MapTemperatureValue() returning: 77
[ 37767][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 37776][V][oem_oil_panel.cpp:253] Update(): OemOilPanel update completed immediately (no animations)
[ 37785][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 37792][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 37814][V][main.cpp:260] loop(): Main loop iteration completed
[ 37821][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 62, UI state: IDLE, panel: OemOilPanel
[ 37831][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 37839][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 37849][V][action_handler.cpp:46] Process(): Process() called
[ 37855][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 37862][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = LOW
[ 37871][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 37881][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 37891][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 37900][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 37908][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=31459
[ 37922][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 37933][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 37941][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 37954][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 37961][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [37961 ms]: GPIO=LOW, current=LOW, previous=LOW, initialized=true
[ 37975][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 37987][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 37994][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 38007][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 38016][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 38023][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 38032][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 38040][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 38047][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 38055][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 38065][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 38073][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 38081][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 38089][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 38097][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 38106][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 38114][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[ 38122][V][oem_oil_panel.cpp:694] MapPressureValue(): MapPressureValue() returning: 13
[ 38131][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[ 38138][V][oem_oil_panel.cpp:787] MapTemperatureValue(): MapTemperatureValue() returning: 77
[ 38147][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 38156][V][oem_oil_panel.cpp:253] Update(): OemOilPanel update completed immediately (no animations)
[ 38166][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 38172][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 38195][V][main.cpp:260] loop(): Main loop iteration completed
[ 38202][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 38210][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 38220][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 38227][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[T] ButtonSensor: PRESS STARTED at 38237 ms (GPIO HIGH detected)
[ 38237][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 38252][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 38260][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 38269][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 38276][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 38286][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 38295][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 38304][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 38313][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=RELEASED, raw_gpio=HIGH, sensor_valid=YES
[T] Button press started
[ 38326][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=true, endTime=0
[ 38340][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 38351][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 38359][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 38372][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 38379][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 38392][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 38399][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 38412][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 38421][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 38428][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 38437][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 38445][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 38452][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 38460][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 38470][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 38478][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 38486][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 38494][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 38502][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 38511][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 38519][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[ 38527][V][oem_oil_panel.cpp:694] MapPressureValue(): MapPressureValue() returning: 13
[ 38535][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[ 38543][V][oem_oil_panel.cpp:787] MapTemperatureValue(): MapTemperatureValue() returning: 77
[ 38552][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 38561][V][oem_oil_panel.cpp:253] Update(): OemOilPanel update completed immediately (no animations)
[ 38570][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 38577][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 38599][V][main.cpp:260] loop(): Main loop iteration completed
[ 38606][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 38614][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 38624][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 38631][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 38641][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 38651][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 38659][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 38668][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 38681][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 38691][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 38700][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 38713][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 38720][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 38732][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 38740][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 38753][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 38762][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 38769][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 38778][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 38786][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 38793][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 38801][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 38811][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 38819][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 38827][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 38835][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 38843][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 38852][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 38860][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[ 38868][V][oem_oil_panel.cpp:694] MapPressureValue(): MapPressureValue() returning: 13
[ 38877][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[ 38884][V][oem_oil_panel.cpp:787] MapTemperatureValue(): MapTemperatureValue() returning: 77
[ 38893][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 38902][V][oem_oil_panel.cpp:253] Update(): OemOilPanel update completed immediately (no animations)
[ 38912][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 38918][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 38941][V][main.cpp:260] loop(): Main loop iteration completed
[ 38948][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 38956][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 38966][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 38973][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 38983][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 38993][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 39001][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 39010][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 39023][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 39033][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 39042][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 39055][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 39062][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 39074][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 39082][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 39095][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 39104][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 39111][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 39120][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 39128][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 39135][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 39143][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 39153][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 39161][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 39169][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 39177][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 39185][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 39194][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 39202][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[ 39210][V][oem_oil_panel.cpp:694] MapPressureValue(): MapPressureValue() returning: 13
[ 39218][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[ 39226][V][oem_oil_panel.cpp:787] MapTemperatureValue(): MapTemperatureValue() returning: 77
[ 39235][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 39244][V][oem_oil_panel.cpp:253] Update(): OemOilPanel update completed immediately (no animations)
[ 39253][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 39260][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 39282][V][main.cpp:260] loop(): Main loop iteration completed
[ 39289][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 39297][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 39307][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 39314][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 39324][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 39334][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 39342][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 39351][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 39358][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 39368][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 39377][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 39386][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 39395][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=PRESSED, raw_gpio=HIGH, sensor_valid=YES
[ 39408][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 39421][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 39431][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 39440][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 39453][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 39460][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 39472][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 39480][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 39493][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 39502][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 39509][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 39518][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 39526][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 39533][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 39541][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 39551][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 39559][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 39567][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 39575][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 39583][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 39592][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 39600][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[ 39608][V][oem_oil_panel.cpp:694] MapPressureValue(): MapPressureValue() returning: 13
[ 39617][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[ 39624][V][oem_oil_panel.cpp:787] MapTemperatureValue(): MapTemperatureValue() returning: 77
[ 39633][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 39642][V][oem_oil_panel.cpp:253] Update(): OemOilPanel update completed immediately (no animations)
[ 39652][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 39658][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 39681][V][main.cpp:260] loop(): Main loop iteration completed
[ 39688][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 39696][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 39706][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 39713][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 39723][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 39733][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 39741][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 39750][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 39763][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 39773][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 39782][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 39795][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 39802][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 39814][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 39822][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 39835][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 39844][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 39851][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 39860][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 39868][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 39875][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 39883][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 39893][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 39901][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 39909][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 39917][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 39925][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 39934][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 39942][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[ 39950][V][oem_oil_panel.cpp:694] MapPressureValue(): MapPressureValue() returning: 13
[ 39958][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[ 39966][V][oem_oil_panel.cpp:787] MapTemperatureValue(): MapTemperatureValue() returning: 77
[ 39975][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 39984][V][oem_oil_panel.cpp:253] Update(): OemOilPanel update completed immediately (no animations)
[ 39993][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 40000][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 40022][V][main.cpp:260] loop(): Main loop iteration completed
[ 40029][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 68, UI state: IDLE, panel: OemOilPanel
[ 40039][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 40047][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 40057][V][action_handler.cpp:46] Process(): Process() called
[ 40063][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 40070][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = HIGH
[ 40080][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 40089][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 40099][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 40108][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 40116][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 40129][I][action_handler.cpp:305] DetectLongPressDuringHold(): DetectLongPressDuringHold: Long press detected during hold at 1803 ms
[T] Button action detected: LONG_PRESS
[ 40142][V][action_handler.cpp:168] ShouldTriggerActionWithDetectedAction(): LONG press match for 'long_press' - shouldTrigger=YES
[ 40157][I][action_handler.cpp:181] ExecutePendingActions(): ExecutePendingActions: Executing triggered action 'long_press' (type: LONG)
[ 40170][I][action_handler.cpp:190] ExecutePendingActions(): Executing injected LONG press function for action 'long_press'
[ 40182][V][oem_oil_panel.cpp:801] OemOilPanelLongPress(): OemOilPanelLongPress() called
[ 40190][I][oem_oil_panel.cpp:830] HandleLongPress(): OemOilPanel long press - loading config panel
[T] Panel transition requested: ConfigPanel
[ 40200][V][panel_manager.cpp:148] CreateAndLoadPanel(): Loading panel directly: ConfigPanel
[ 40212][V][panel_manager.cpp:156] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() called for: ConfigPanel
[ 40223][I][panel_manager.cpp:169] CreateAndLoadPanelDirect(): Saving current panel 'OemOilPanel' for restoration when triggers deactivate
[ 40236][V][oem_oil_panel.cpp:28] ~OemOilPanel(): ~OemOilPanel() destructor called
[ 40253][V][panel_manager.cpp:87] CreatePanel(): CreatePanel() called for: ConfigPanel
[ 40262][V][panel_factory.cpp:41] CreateConfigPanel(): CreateConfigPanel() called
[ 40270][V][config_component.cpp:10] ConfigComponent(): ConfigComponent constructor called
[ 40279][V][config_panel.cpp:15] ConfigPanel(): ConfigPanel constructor called
[ 40286][V][config_panel.cpp:351] SetManagers(): SetManagers() called
[ 40293][V][config_panel.cpp:363] SetPreferenceService(): SetPreferenceService() called
[ 40302][V][config_panel.cpp:371] InitializeMenuItems(): InitializeMenuItems() called
[ 40310][V][config_panel.cpp:386] UpdateMenuItemsWithCurrentValues(): UpdateMenuItemsWithCurrentValues() called
[ 40322][V][config_component.cpp:91] SetTitle(): SetTitle() called
[ 40329][V][config_component.cpp:101] SetMenuItems(): SetMenuItems() called
[ 40336][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 40345][W][config_component.cpp:300] UpdateMenuDisplay(): Cannot update menu display - empty menu items or labels
[ 40356][V][config_component.cpp:108] SetCurrentIndex(): SetCurrentIndex() called
[ 40364][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 40372][W][config_component.cpp:300] UpdateMenuDisplay(): Cannot update menu display - empty menu items or labels
[ 40383][V][config_panel.cpp:35] Init(): Init() called
[ 40389][V][lvgl_display_provider.cpp:27] CreateScreen(): CreateScreen() called
[ 40397][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[ 40406][I][config_panel.cpp:51] Init(): ConfigPanel initialization completed
[ 40414][I][panel_manager.cpp:239] CreateAndLoadPanelDirect(): PanelManager: About to call ApplyCurrentTheme for panel: ConfigPanel
[ 40426][I][style_manager.cpp:217] ApplyCurrentTheme(): StyleManager::ApplyCurrentTheme() called
[ 40436][V][style_manager.cpp:227] ApplyCurrentTheme(): Read theme from preferences: Day (cached: Day)
[ 40446][V][style_manager.cpp:234] ApplyCurrentTheme(): Theme unchanged (Day) - no update needed
[ 40455][I][panel_manager.cpp:241] CreateAndLoadPanelDirect(): PanelManager: ApplyCurrentTheme completed for panel: ConfigPanel
[ 40467][V][panel_manager.cpp:358] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions() called
[ 40477][I][panel_manager.cpp:383] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Extracted functions - short=0x400f2ca8, long=0x400f764c, context=0x3ffb3784
[ 40493][V][interrupt_manager.cpp:167] UpdatePanelFunctions(): UpdatePanelFunctions() called
[ 40502][I][interrupt_manager.cpp:176] UpdatePanelFunctions(): Updated panel functions in ActionHandler
[ 40512][I][panel_manager.cpp:395] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Successfully updated universal button interrupts with panel functions
[ 40527][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 40535][V][config_panel.cpp:56] Load(): Load() called
[ 40541][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[ 40550][V][config_component.cpp:62] Init(): Init() called
[ 40559][V][config_component.cpp:245] CreateUI(): CreateUI() called
[ 40632][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 40698][V][config_component.cpp:127] SetStyleService(): SetStyleService() called
[ 40706][V][config_component.cpp:134] UpdateThemeColors(): UpdateThemeColors() called
[ 40715][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 40724][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 40741][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 40757][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 40775][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 40793][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 40809][V][config_panel.cpp:386] UpdateMenuItemsWithCurrentValues(): UpdateMenuItemsWithCurrentValues() called
[ 40820][V][config_component.cpp:91] SetTitle(): SetTitle() called
[ 40828][V][config_component.cpp:101] SetMenuItems(): SetMenuItems() called
[ 40836][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 40845][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 40862][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 40878][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 40896][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 40914][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 40930][V][config_component.cpp:108] SetCurrentIndex(): SetCurrentIndex() called
[ 40938][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 40947][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 40965][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 40980][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 40999][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 41016][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 41033][V][config_component.cpp:101] SetMenuItems(): SetMenuItems() called
[ 41040][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 41050][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 41067][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 41082][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 41101][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 41118][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 41135][V][config_component.cpp:108] SetCurrentIndex(): SetCurrentIndex() called
[ 41143][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 41152][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 41169][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 41185][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 41203][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 41221][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 41238][V][config_panel.cpp:294] ShowPanelCompletionCallback(): ShowPanelCompletionCallback() called
[ 41248][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[T] ConfigPanel loaded successfully
[ 41575][V][panel_manager.cpp:257] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() completed
[ 41585][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 41595][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 41604][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 41617][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 41624][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [41624 ms]: GPIO=LOW, current=LOW, previous=LOW, initialized=true
[ 41637][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 41650][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 41657][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 41670][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 41679][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 41686][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 41695][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 41703][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 41710][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 41718][V][config_panel.cpp:98] Update(): Update() called
[ 41724][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 41733][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 41739][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 41762][V][main.cpp:260] loop(): Main loop iteration completed
[ 41769][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 41777][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 41787][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 41794][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[T] ButtonSensor: PRESS ENDED after 3567 ms (GPIO LOW detected)
[T] ButtonSensor: ACTION DETECTED: LONG_PRESS (actionReady=true)
[T] ButtonSensor: Should trigger 'long_press' action
[ 41809][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 41829][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 41838][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 41846][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 41853][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 41863][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 41872][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 41881][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 41890][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=PRESSED, raw_gpio=LOW, sensor_valid=YES
[T] Button press ended
[ 41903][I][action_handler.cpp:276] DetectButtonAction(): DetectButtonAction: Ignoring release after long press was triggered during hold
[ 41917][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 41928][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 41937][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 41949][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 41957][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 41969][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 41977][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 41989][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 41998][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 42005][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 42014][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 42022][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 42029][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 42037][V][config_panel.cpp:98] Update(): Update() called
[ 42043][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 42052][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 42058][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 42081][V][main.cpp:260] loop(): Main loop iteration completed
[ 42088][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 70, UI state: IDLE, panel: ConfigPanel
[ 42098][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 42106][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 42116][V][action_handler.cpp:46] Process(): Process() called
[ 42122][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 42129][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = LOW
[ 42138][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 42148][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 42158][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 42167][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 42175][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=41903
[ 42189][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 42200][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 42208][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 42221][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 42228][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 42240][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 42248][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 42261][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 42270][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 42277][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 42286][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 42294][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 42301][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 42309][V][config_panel.cpp:98] Update(): Update() called
[ 42315][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 42324][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 42330][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 42353][V][main.cpp:260] loop(): Main loop iteration completed
[ 42360][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 42368][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 42378][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 42385][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 42395][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 42404][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 42413][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 42422][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=41903
[ 42435][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 42446][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 42454][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 42467][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 42475][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 42487][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 42495][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 42507][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 42516][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 42523][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 42532][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 42540][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 42547][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 42555][V][config_panel.cpp:98] Update(): Update() called
[ 42561][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 42570][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 42576][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 42599][V][main.cpp:260] loop(): Main loop iteration completed
[ 42606][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 42614][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 42624][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 42631][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[T] ButtonSensor: PRESS STARTED at 42641 ms (GPIO HIGH detected)
[ 42641][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 42656][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 42664][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 42673][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 42680][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 42690][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 42699][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 42708][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 42717][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=RELEASED, raw_gpio=HIGH, sensor_valid=YES
[T] Button press started
[ 42730][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=true, endTime=0
[ 42744][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 42755][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 42763][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 42776][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 42783][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 42796][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 42803][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 42816][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 42825][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 42832][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 42841][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 42849][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 42856][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 42864][V][config_panel.cpp:98] Update(): Update() called
[ 42870][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 42879][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 42885][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 42908][V][main.cpp:260] loop(): Main loop iteration completed
[ 42915][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 42923][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 42933][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 42940][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 42950][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 42960][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 42968][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 42977][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 42990][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 43000][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 43009][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 43022][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 43029][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 43041][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 43049][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 43062][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 43071][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 43078][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 43087][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 43095][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 43102][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 43110][V][config_panel.cpp:98] Update(): Update() called
[ 43116][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 43125][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 43131][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 43154][V][main.cpp:260] loop(): Main loop iteration completed
[ 43161][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 43169][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 43179][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 43186][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[T] ButtonSensor: PRESS ENDED after 555 ms (GPIO LOW detected)
[T] ButtonSensor: ACTION DETECTED: SHORT_PRESS (actionReady=true)
[T] ButtonSensor: Should trigger 'short_press' action
[ 43201][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 43221][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 43230][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 43238][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 43245][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 43255][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 43265][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 43273][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 43282][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=PRESSED, raw_gpio=LOW, sensor_valid=YES
[T] Button press ended
[ 43295][I][action_handler.cpp:286] DetectButtonAction(): DetectButtonAction: Duration=565 ms, Action=SHORT_PRESS
[T] Button action detected: SHORT_PRESS
[ 43308][V][action_handler.cpp:162] ShouldTriggerActionWithDetectedAction(): SHORT press match for 'short_press' - shouldTrigger=YES
[ 43323][I][action_handler.cpp:181] ExecutePendingActions(): ExecutePendingActions: Executing triggered action 'short_press' (type: SHORT)
[ 43336][I][action_handler.cpp:185] ExecutePendingActions(): Executing injected SHORT press function for action 'short_press'
[ 43348][V][config_panel.cpp:638] ConfigPanelShortPress(): ConfigPanelShortPress() called
[ 43357][I][config_panel.cpp:686] HandleShortPress(): ConfigPanel: Cycled to menu item 1: Theme: Day (state: MainMenu)
[T] ConfigPanel: Theme Settings option highlighted
[ 43369][V][config_component.cpp:108] SetCurrentIndex(): SetCurrentIndex() called
[ 43380][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 43390][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 43410][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 43436][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 43461][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 43485][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 43512][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 43522][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 43531][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 43544][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 43551][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 43563][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 43571][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 43584][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 43593][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 43600][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 43609][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 43617][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 43624][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 43632][V][config_panel.cpp:98] Update(): Update() called
[ 43638][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 43790][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 43796][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 43819][V][main.cpp:260] loop(): Main loop iteration completed
[ 43826][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 43834][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 43844][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 43851][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 43861][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 43870][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 43879][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 43888][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 43901][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 43911][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 43920][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 43933][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 43940][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [43940 ms]: GPIO=LOW, current=LOW, previous=LOW, initialized=true
[ 43953][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 43966][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 43973][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 43986][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 43995][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 44002][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 44011][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 44019][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 44026][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 44034][V][config_panel.cpp:98] Update(): Update() called
[ 44040][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 44049][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 44055][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 44078][V][main.cpp:260] loop(): Main loop iteration completed
[ 44085][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 44093][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 44103][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 44110][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[T] ButtonSensor: PRESS STARTED at 44120 ms (GPIO HIGH detected)
[ 44120][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 44135][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 44143][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 44152][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 44159][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = HIGH
[ 44168][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 44178][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 44188][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 44197][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 44205][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=RELEASED, raw_gpio=HIGH, sensor_valid=YES
[T] Button press started
[ 44219][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=true, endTime=0
[ 44233][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 44243][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 44252][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 44265][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 44272][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 44284][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 44292][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 44305][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 44314][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 44321][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 44330][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 44338][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 44345][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 44353][V][config_panel.cpp:98] Update(): Update() called
[ 44359][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 44368][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 44374][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 44397][V][main.cpp:260] loop(): Main loop iteration completed
[ 44404][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 77, UI state: IDLE, panel: ConfigPanel
[ 44414][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 44422][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 44432][V][action_handler.cpp:46] Process(): Process() called
[ 44438][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 44445][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 44455][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 44465][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 44473][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 44482][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 44495][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 44505][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 44514][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 44527][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 44534][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 44546][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 44554][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 44567][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 44576][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 44583][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 44592][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 44600][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 44607][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 44615][V][config_panel.cpp:98] Update(): Update() called
[ 44621][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 44630][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 44636][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 44659][V][main.cpp:260] loop(): Main loop iteration completed
[ 44666][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 44674][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 44684][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 44691][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 44701][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 44711][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 44719][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 44728][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 44741][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 44751][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 44760][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 44773][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 44780][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 44792][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 44800][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 44813][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 44822][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 44829][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 44838][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 44846][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 44853][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 44861][V][config_panel.cpp:98] Update(): Update() called
[ 44867][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 44876][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 44882][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 44905][V][main.cpp:260] loop(): Main loop iteration completed
[ 44912][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 44920][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 44930][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 44937][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 44947][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 44957][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 44965][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 44974][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 44987][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 44997][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 45006][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 45019][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 45026][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 45038][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 45046][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 45059][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 45068][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 45075][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 45084][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 45092][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 45099][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 45107][V][config_panel.cpp:98] Update(): Update() called
[ 45113][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 45122][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 45128][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 45151][V][main.cpp:260] loop(): Main loop iteration completed
[ 45158][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 45166][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 45176][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 45183][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 45193][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 45203][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 45211][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 45220][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 45227][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 45237][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 45246][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 45255][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 45264][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=PRESSED, raw_gpio=HIGH, sensor_valid=YES
[ 45277][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 45290][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 45300][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 45309][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 45322][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 45329][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 45341][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 45349][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 45362][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 45371][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 45378][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 45387][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 45395][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 45402][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 45410][V][config_panel.cpp:98] Update(): Update() called
[ 45416][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 45425][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 45431][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 45454][V][main.cpp:260] loop(): Main loop iteration completed
[ 45461][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 45469][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 45479][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 45486][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 45496][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 45506][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 45514][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 45523][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 45536][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 45546][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 45555][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 45568][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 45575][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 45587][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 45595][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 45608][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 45617][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 45624][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 45633][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 45641][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 45648][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 45656][V][config_panel.cpp:98] Update(): Update() called
[ 45662][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 45671][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 45677][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 45700][V][main.cpp:260] loop(): Main loop iteration completed
[ 45707][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 45715][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 45725][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 45732][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 45742][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 45752][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 45760][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 45769][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 45782][I][action_handler.cpp:305] DetectLongPressDuringHold(): DetectLongPressDuringHold: Long press detected during hold at 1563 ms
[T] Button action detected: LONG_PRESS
[ 45795][V][action_handler.cpp:168] ShouldTriggerActionWithDetectedAction(): LONG press match for 'long_press' - shouldTrigger=YES
[ 45810][I][action_handler.cpp:181] ExecutePendingActions(): ExecutePendingActions: Executing triggered action 'long_press' (type: LONG)
[ 45823][I][action_handler.cpp:190] ExecutePendingActions(): Executing injected LONG press function for action 'long_press'
[ 45835][V][config_panel.cpp:649] ConfigPanelLongPress(): ConfigPanelLongPress() called
[ 45843][I][config_panel.cpp:713] HandleLongPress(): ConfigPanel: Long press at index 1 (state: MainMenu)
[ 45853][I][config_panel.cpp:718] HandleLongPress(): Main menu: Executing current option
[ 45862][V][config_panel.cpp:110] ExecuteCurrentOption(): ExecuteCurrentOption() called
[ 45870][I][config_panel.cpp:120] ExecuteCurrentOption(): Executing option at index 1: 'Theme: Day' (type: submenu, param: ThemeSubmenu)
[ 45884][I][config_panel.cpp:151] ExecuteCurrentOption(): Entering Theme submenu
[T] ConfigPanel: Entering theme submenu
[ 45892][V][config_panel.cpp:422] EnterSubmenu(): EnterSubmenu() called
[ 45902][V][config_panel.cpp:469] UpdateSubmenuItems(): UpdateSubmenuItems() called
[ 45910][V][config_component.cpp:91] SetTitle(): SetTitle() called
[ 45918][V][config_component.cpp:101] SetMenuItems(): SetMenuItems() called
[ 45925][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 45935][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 45954][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 45973][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 45994][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 46014][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 46032][V][config_component.cpp:108] SetCurrentIndex(): SetCurrentIndex() called
[ 46040][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 46050][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 46070][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 46089][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 46109][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 46130][V][style_manager.cpp:179] GetColours(): GetColours() called
[T] ConfigPanel: Theme submenu loaded
[ 46149][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 46162][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 46170][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 46183][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 46190][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [46190 ms]: GPIO=LOW, current=LOW, previous=LOW, initialized=true
[ 46204][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 46216][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 46223][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 46236][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 46245][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 46252][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 46261][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 46269][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 46276][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 46284][V][config_panel.cpp:98] Update(): Update() called
[ 46290][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 46473][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 46480][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 46502][V][main.cpp:260] loop(): Main loop iteration completed
[ 46509][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 83, UI state: IDLE, panel: ConfigPanel
[ 46519][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 46527][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 46537][V][action_handler.cpp:46] Process(): Process() called
[ 46543][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 46550][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = HIGH
[ 46560][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 46569][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 46579][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 46588][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 46596][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 46603][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 46613][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 46623][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 46632][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 46640][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=PRESSED, raw_gpio=HIGH, sensor_valid=YES
[ 46653][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 46666][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 46676][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 46685][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 46698][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 46705][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 46717][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 46725][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 46738][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 46747][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 46754][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 46763][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 46771][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 46778][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 46786][V][config_panel.cpp:98] Update(): Update() called
[ 46792][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 46801][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 46807][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 46830][V][main.cpp:260] loop(): Main loop iteration completed
[ 46837][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 46845][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 46855][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 46862][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[T] ButtonSensor: PRESS ENDED after 2752 ms (GPIO LOW detected)
[T] ButtonSensor: ACTION DETECTED: LONG_PRESS (actionReady=true)
[T] ButtonSensor: Should trigger 'long_press' action
[ 46877][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 46897][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 46906][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 46914][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 46921][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 46931][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 46940][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 46949][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 46958][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=PRESSED, raw_gpio=LOW, sensor_valid=YES
[T] Button press ended
[ 46971][I][action_handler.cpp:276] DetectButtonAction(): DetectButtonAction: Ignoring release after long press was triggered during hold
[ 46985][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 46996][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 47005][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 47017][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 47025][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 47037][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 47045][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 47057][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 47066][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 47073][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 47082][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 47090][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 47097][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 47105][V][config_panel.cpp:98] Update(): Update() called
[ 47111][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 47120][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 47126][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 47149][V][main.cpp:260] loop(): Main loop iteration completed
[ 47156][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 47164][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 47174][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 47181][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 47191][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 47200][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 47209][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 47218][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=46971
[ 47231][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 47242][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 47250][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 47263][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 47271][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 47283][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 47291][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 47303][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 47312][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 47319][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 47328][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 47336][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 47343][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 47351][V][config_panel.cpp:98] Update(): Update() called
[ 47357][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 47366][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 47372][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 47395][V][main.cpp:260] loop(): Main loop iteration completed
[ 47402][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 47410][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 47420][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 47427][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[T] ButtonSensor: PRESS STARTED at 47437 ms (GPIO HIGH detected)
[ 47437][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 47452][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 47460][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 47469][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 47476][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 47486][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 47495][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 47504][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 47513][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=RELEASED, raw_gpio=HIGH, sensor_valid=YES
[T] Button press started
[ 47526][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=true, endTime=0
[ 47540][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 47551][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 47559][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 47572][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 47579][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 47592][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 47599][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 47612][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 47621][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 47628][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 47637][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 47645][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 47652][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 47660][V][config_panel.cpp:98] Update(): Update() called
[ 47666][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 47675][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 47681][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 47704][V][main.cpp:260] loop(): Main loop iteration completed
[ 47711][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 47719][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 47729][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 47736][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 47746][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 47756][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 47764][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 47773][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 47786][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 47796][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 47805][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 47818][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 47825][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 47837][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 47845][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 47858][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 47867][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 47874][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 47883][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 47891][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 47898][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 47906][V][config_panel.cpp:98] Update(): Update() called
[ 47912][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 47921][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 47927][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 47950][V][main.cpp:260] loop(): Main loop iteration completed
[ 47957][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 47965][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 47975][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 47982][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[T] ButtonSensor: PRESS ENDED after 555 ms (GPIO LOW detected)
[T] ButtonSensor: ACTION DETECTED: SHORT_PRESS (actionReady=true)
[T] ButtonSensor: Should trigger 'short_press' action
[ 47997][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 48017][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 48026][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 48034][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 48041][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 48051][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 48061][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 48069][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 48078][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=PRESSED, raw_gpio=LOW, sensor_valid=YES
[T] Button press ended
[ 48091][I][action_handler.cpp:286] DetectButtonAction(): DetectButtonAction: Duration=565 ms, Action=SHORT_PRESS
[T] Button action detected: SHORT_PRESS
[ 48104][V][action_handler.cpp:162] ShouldTriggerActionWithDetectedAction(): SHORT press match for 'short_press' - shouldTrigger=YES
[ 48119][I][action_handler.cpp:181] ExecutePendingActions(): ExecutePendingActions: Executing triggered action 'short_press' (type: SHORT)
[ 48132][I][action_handler.cpp:185] ExecutePendingActions(): Executing injected SHORT press function for action 'short_press'
[ 48144][V][config_panel.cpp:638] ConfigPanelShortPress(): ConfigPanelShortPress() called
[ 48153][I][config_panel.cpp:686] HandleShortPress(): ConfigPanel: Cycled to menu item 1: Night (state: Submenu)
[T] ConfigPanel: Night theme option highlighted
[ 48164][V][config_component.cpp:108] SetCurrentIndex(): SetCurrentIndex() called
[ 48175][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 48185][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 48204][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 48223][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 48244][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 48264][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 48282][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 48293][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 48301][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 48314][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 48321][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [48321 ms]: GPIO=LOW, current=LOW, previous=LOW, initialized=true
[ 48335][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 48347][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 48354][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 48367][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 48376][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 48383][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 48392][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 48400][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 48407][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 48415][V][config_panel.cpp:98] Update(): Update() called
[ 48421][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 48550][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 48556][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 48579][V][main.cpp:260] loop(): Main loop iteration completed
[ 48586][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 89, UI state: IDLE, panel: ConfigPanel
[ 48596][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 48604][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 48614][V][action_handler.cpp:46] Process(): Process() called
[ 48620][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 48627][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = LOW
[ 48636][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 48646][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 48656][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 48665][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 48673][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 48686][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 48697][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 48705][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 48718][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 48726][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 48738][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 48746][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 48758][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 48767][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 48774][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 48783][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 48791][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 48798][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 48806][V][config_panel.cpp:98] Update(): Update() called
[ 48812][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 48821][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 48827][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 48850][V][main.cpp:260] loop(): Main loop iteration completed
[ 48857][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 48865][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 48875][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 48882][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 48892][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 48901][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 48910][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 48919][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 48932][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 48942][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 48951][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 48964][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 48971][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 48983][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 48991][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 49004][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 49013][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 49020][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 49029][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 49037][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 49044][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 49052][V][config_panel.cpp:98] Update(): Update() called
[ 49058][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 49067][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 49073][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 49096][V][main.cpp:260] loop(): Main loop iteration completed
[ 49103][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 49111][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 49121][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 49128][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[T] ButtonSensor: PRESS STARTED at 49138 ms (GPIO HIGH detected)
[ 49138][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 49153][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 49161][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 49170][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 49177][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 49187][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 49196][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 49205][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 49214][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=RELEASED, raw_gpio=HIGH, sensor_valid=YES
[T] Button press started
[ 49227][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=true, endTime=0
[ 49241][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 49252][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 49260][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 49273][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 49280][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 49293][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 49300][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 49313][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 49322][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 49329][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 49338][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 49346][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 49353][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 49361][V][config_panel.cpp:98] Update(): Update() called
[ 49367][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 49376][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 49382][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 49405][V][main.cpp:260] loop(): Main loop iteration completed
[ 49412][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 49420][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 49430][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 49437][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 49447][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 49457][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 49465][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 49474][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 49487][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 49497][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 49506][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 49519][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 49526][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 49538][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 49546][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 49559][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 49568][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 49575][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 49584][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 49592][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 49599][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 49607][V][config_panel.cpp:98] Update(): Update() called
[ 49613][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 49622][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 49628][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 49651][V][main.cpp:260] loop(): Main loop iteration completed
[ 49658][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 49666][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 49676][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 49683][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 49693][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 49703][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 49711][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 49720][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 49733][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 49743][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 49752][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 49765][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 49772][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 49784][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 49792][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 49805][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 49814][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 49821][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 49830][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 49838][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 49845][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 49853][V][config_panel.cpp:98] Update(): Update() called
[ 49859][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 49868][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 49874][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 49897][V][main.cpp:260] loop(): Main loop iteration completed
[ 49904][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 49912][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 49922][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 49929][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 49939][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 49949][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 49957][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 49966][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 49979][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 49989][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 49998][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 50011][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 50018][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 50030][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 50038][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 50051][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 50060][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 50067][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 50076][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 50084][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 50091][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 50099][V][config_panel.cpp:98] Update(): Update() called
[ 50105][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 50114][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 50120][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 50143][V][main.cpp:260] loop(): Main loop iteration completed
[ 50150][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 50158][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 50168][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 50175][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 50185][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 50195][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 50203][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 50212][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 50219][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 50229][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 50238][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 50247][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 50256][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=PRESSED, raw_gpio=HIGH, sensor_valid=YES
[ 50269][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 50282][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 50292][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 50301][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 50314][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 50321][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 50333][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 50341][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 50354][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 50363][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 50370][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 50379][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 50387][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 50394][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 50402][V][config_panel.cpp:98] Update(): Update() called
[ 50408][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 50417][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 50423][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 50446][V][main.cpp:260] loop(): Main loop iteration completed
[ 50453][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 50461][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 50471][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 50478][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 50488][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 50498][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 50506][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 50515][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 50528][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 50538][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 50547][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 50560][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 50567][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [50567 ms]: GPIO=LOW, current=LOW, previous=LOW, initialized=true
[ 50580][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 50593][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 50600][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 50613][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 50622][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 50629][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 50638][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 50646][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 50653][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 50661][V][config_panel.cpp:98] Update(): Update() called
[ 50667][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 50676][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 50682][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 50705][V][main.cpp:260] loop(): Main loop iteration completed
[ 50712][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 97, UI state: IDLE, panel: ConfigPanel
[ 50722][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 50730][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 50740][V][action_handler.cpp:46] Process(): Process() called
[ 50746][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 50753][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = HIGH
[ 50763][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 50772][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 50782][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 50791][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 50799][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 50812][I][action_handler.cpp:305] DetectLongPressDuringHold(): DetectLongPressDuringHold: Long press detected during hold at 1585 ms
[T] Button action detected: LONG_PRESS
[ 50825][V][action_handler.cpp:168] ShouldTriggerActionWithDetectedAction(): LONG press match for 'long_press' - shouldTrigger=YES
[ 50840][I][action_handler.cpp:181] ExecutePendingActions(): ExecutePendingActions: Executing triggered action 'long_press' (type: LONG)
[ 50853][I][action_handler.cpp:190] ExecutePendingActions(): Executing injected LONG press function for action 'long_press'
[ 50865][V][config_panel.cpp:649] ConfigPanelLongPress(): ConfigPanelLongPress() called
[ 50873][I][config_panel.cpp:713] HandleLongPress(): ConfigPanel: Long press at index 1 (state: Submenu)
[ 50884][I][config_panel.cpp:724] HandleLongPress(): Submenu: Selecting option and returning to main menu
[ 50894][I][config_panel.cpp:758] HandleLongPress(): Setting theme preference: Night
[T] ConfigPanel: Applying night theme setting
[ 50903][V][preference_manager.cpp:196] SetConfig(): SetConfig() called
[ 50913][V][preference_manager.cpp:132] SaveConfig(): SaveConfig() called
[ 50920][V][preference_manager.cpp:133] SaveConfig(): SaveConfig() called
[ 50940][I][preference_manager.cpp:162] SaveConfig(): Configuration saved successfully (212 bytes written)
[ 50951][I][preference_manager.cpp:167] SaveConfig(): System configuration updated and persisted to NVS storage
[ 50962][V][config_panel.cpp:436] ExitSubmenu(): ExitSubmenu() called
[ 50969][V][config_panel.cpp:386] UpdateMenuItemsWithCurrentValues(): UpdateMenuItemsWithCurrentValues() called
[ 50981][V][config_component.cpp:91] SetTitle(): SetTitle() called
[ 50988][V][config_component.cpp:101] SetMenuItems(): SetMenuItems() called
[ 50996][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 51006][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51026][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51052][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51078][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51103][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51129][V][config_component.cpp:108] SetCurrentIndex(): SetCurrentIndex() called
[ 51137][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 51147][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51171][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51191][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51218][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51243][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51266][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[ 51302][V][config_component.cpp:134] UpdateThemeColors(): UpdateThemeColors() called
[ 51312][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 51322][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51345][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51366][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51393][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51418][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51441][V][config_component.cpp:101] SetMenuItems(): SetMenuItems() called
[ 51448][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 51458][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51482][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51502][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51529][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51554][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51577][V][config_component.cpp:108] SetCurrentIndex(): SetCurrentIndex() called
[ 51585][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 51595][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51618][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51639][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51666][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 51691][V][style_manager.cpp:179] GetColours(): GetColours() called
[T] ConfigPanel: Returned to main config menu
[T] ConfigPanel: Returned to main config menu
[ 51714][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 51732][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 51740][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 51753][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 51761][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 51773][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 51781][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 51793][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 51802][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 51809][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 51818][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 51826][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 51833][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 51841][V][config_panel.cpp:98] Update(): Update() called
[ 51847][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 52178][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 52185][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 52207][V][main.cpp:260] loop(): Main loop iteration completed
[ 52214][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 52222][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 52232][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 52239][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[T] ButtonSensor: PRESS ENDED after 3111 ms (GPIO LOW detected)
[T] ButtonSensor: ACTION DETECTED: LONG_PRESS (actionReady=true)
[T] ButtonSensor: Should trigger 'long_press' action
[ 52254][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 52274][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 52283][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 52291][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 52298][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 52308][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 52317][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 52326][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 52335][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=PRESSED, raw_gpio=LOW, sensor_valid=YES
[T] Button press ended
[ 52348][I][action_handler.cpp:276] DetectButtonAction(): DetectButtonAction: Ignoring release after long press was triggered during hold
[ 52362][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 52373][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 52382][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 52394][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 52402][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 52414][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 52422][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 52434][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 52443][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 52450][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 52459][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 52467][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 52474][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 52482][V][config_panel.cpp:98] Update(): Update() called
[ 52488][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 52497][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 52503][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 52526][V][main.cpp:260] loop(): Main loop iteration completed
[ 52533][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 52541][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 52551][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 52558][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 52568][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 52577][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 52586][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 52595][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=52348
[ 52608][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 52619][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 52627][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 52640][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 52648][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [52648 ms]: GPIO=LOW, current=LOW, previous=LOW, initialized=true
[ 52661][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 52673][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 52681][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 52693][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 52702][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 52709][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 52718][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 52726][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 52733][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 52741][V][config_panel.cpp:98] Update(): Update() called
[ 52747][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 52756][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 52762][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 52785][V][main.cpp:260] loop(): Main loop iteration completed
[ 52792][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 100, UI state: IDLE, panel: ConfigPanel
[ 52802][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 52810][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 52820][V][action_handler.cpp:46] Process(): Process() called
[ 52827][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 52833][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = LOW
[ 52843][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 52852][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 52862][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 52871][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 52880][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=52348
[ 52893][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 52904][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 52912][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 52925][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 52933][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 52945][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 52953][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 52965][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 52974][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 52981][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 52990][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 52998][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 53005][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 53013][V][config_panel.cpp:98] Update(): Update() called
[ 53019][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 53028][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 53034][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 53057][V][main.cpp:260] loop(): Main loop iteration completed
[ 53064][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 53072][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 53082][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 53089][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[T] ButtonSensor: PRESS STARTED at 53099 ms (GPIO HIGH detected)
[ 53099][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 53114][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 53122][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 53131][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 53138][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 53148][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 53157][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 53166][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 53175][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=RELEASED, raw_gpio=HIGH, sensor_valid=YES
[T] Button press started
[ 53188][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=true, endTime=0
[ 53202][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 53213][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 53221][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 53234][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 53241][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 53254][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 53261][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 53274][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 53283][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 53290][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 53299][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 53307][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 53314][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 53322][V][config_panel.cpp:98] Update(): Update() called
[ 53328][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 53337][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 53343][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 53366][V][main.cpp:260] loop(): Main loop iteration completed
[ 53373][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 53381][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 53391][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 53398][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 53408][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 53418][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 53426][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 53435][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 53448][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 53458][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 53467][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 53480][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 53487][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 53499][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 53507][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 53520][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 53529][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 53536][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 53545][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 53553][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 53560][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 53568][V][config_panel.cpp:98] Update(): Update() called
[ 53574][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 53583][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 53589][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 53612][V][main.cpp:260] loop(): Main loop iteration completed
[ 53619][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 53627][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 53637][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 53644][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[T] ButtonSensor: PRESS ENDED after 555 ms (GPIO LOW detected)
[T] ButtonSensor: ACTION DETECTED: SHORT_PRESS (actionReady=true)
[T] ButtonSensor: Should trigger 'short_press' action
[ 53659][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 53679][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 53688][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 53696][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 53703][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 53713][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 53723][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 53731][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 53740][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=PRESSED, raw_gpio=LOW, sensor_valid=YES
[T] Button press ended
[ 53753][I][action_handler.cpp:286] DetectButtonAction(): DetectButtonAction: Duration=565 ms, Action=SHORT_PRESS
[T] Button action detected: SHORT_PRESS
[ 53766][V][action_handler.cpp:162] ShouldTriggerActionWithDetectedAction(): SHORT press match for 'short_press' - shouldTrigger=YES
[ 53781][I][action_handler.cpp:181] ExecutePendingActions(): ExecutePendingActions: Executing triggered action 'short_press' (type: SHORT)
[ 53794][I][action_handler.cpp:185] ExecutePendingActions(): Executing injected SHORT press function for action 'short_press'
[ 53806][V][config_panel.cpp:638] ConfigPanelShortPress(): ConfigPanelShortPress() called
[ 53815][I][config_panel.cpp:686] HandleShortPress(): ConfigPanel: Cycled to menu item 1: Theme: Night (state: MainMenu)
[T] ConfigPanel: Theme Settings option highlighted
[ 53827][V][config_component.cpp:108] SetCurrentIndex(): SetCurrentIndex() called
[ 53838][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 53848][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 53868][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 53894][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 53920][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 53945][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 53971][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 53982][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 53990][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 54003][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 54010][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 54022][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 54030][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 54043][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 54052][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 54059][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 54068][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 54076][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 54083][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 54091][V][config_panel.cpp:98] Update(): Update() called
[ 54097][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 54287][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 54294][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 54316][V][main.cpp:260] loop(): Main loop iteration completed
[ 54323][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 54331][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 54341][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 54348][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 54358][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 54367][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 54376][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 54385][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 54398][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 54408][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 54417][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 54430][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 54437][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 54449][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 54457][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 54470][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 54479][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 54486][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 54495][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 54503][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 54510][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 54518][V][config_panel.cpp:98] Update(): Update() called
[ 54524][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 54533][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 54539][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 54562][V][main.cpp:260] loop(): Main loop iteration completed
[ 54569][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 54577][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 54587][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 54594][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 54604][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 54613][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 54622][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 54631][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 54644][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 54654][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 54663][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 54676][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 54683][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [54683 ms]: GPIO=LOW, current=LOW, previous=LOW, initialized=true
[ 54696][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 54709][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 54716][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 54729][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 54738][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 54745][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 54754][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 54762][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 54769][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 54777][V][config_panel.cpp:98] Update(): Update() called
[ 54783][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 54792][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 54798][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 54821][V][main.cpp:260] loop(): Main loop iteration completed
[ 54828][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 106, UI state: IDLE, panel: ConfigPanel
[ 54838][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 54846][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 54856][V][action_handler.cpp:46] Process(): Process() called
[ 54863][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 54869][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = HIGH
[ 54879][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[T] ButtonSensor: PRESS STARTED at 54889 ms (GPIO HIGH detected)
[ 54889][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 54903][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 54912][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 54921][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 54928][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 54937][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 54947][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 54956][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 54965][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=RELEASED, raw_gpio=HIGH, sensor_valid=YES
[T] Button press started
[ 54978][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=true, endTime=0
[ 54992][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 55003][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 55011][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 55024][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 55031][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 55044][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 55051][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 55064][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 55073][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 55080][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 55089][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 55097][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 55104][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 55112][V][config_panel.cpp:98] Update(): Update() called
[ 55118][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 55127][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 55133][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 55156][V][main.cpp:260] loop(): Main loop iteration completed
[ 55163][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 55171][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 55181][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 55188][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 55198][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 55208][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 55216][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 55225][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 55238][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 55248][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 55257][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 55270][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 55277][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 55289][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 55297][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 55310][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 55319][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 55326][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 55335][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 55343][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 55350][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 55358][V][config_panel.cpp:98] Update(): Update() called
[ 55364][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 55373][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 55379][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 55402][V][main.cpp:260] loop(): Main loop iteration completed
[ 55409][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 55417][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 55427][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 55434][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 55444][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 55454][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 55462][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 55471][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 55484][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 55494][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 55503][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 55516][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 55523][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 55535][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 55543][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 55556][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 55565][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 55572][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 55581][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 55589][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 55596][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 55604][V][config_panel.cpp:98] Update(): Update() called
[ 55610][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 55619][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 55625][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 55648][V][main.cpp:260] loop(): Main loop iteration completed
[ 55655][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 55663][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 55673][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 55680][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[T] ButtonSensor: PRESS ENDED after 801 ms (GPIO LOW detected)
[T] ButtonSensor: ACTION DETECTED: SHORT_PRESS (actionReady=true)
[T] ButtonSensor: Should trigger 'short_press' action
[ 55695][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 55715][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 55724][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 55732][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 55739][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 55749][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 55759][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 55767][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 55776][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=PRESSED, raw_gpio=LOW, sensor_valid=YES
[T] Button press ended
[ 55789][I][action_handler.cpp:286] DetectButtonAction(): DetectButtonAction: Duration=811 ms, Action=SHORT_PRESS
[T] Button action detected: SHORT_PRESS
[ 55802][V][action_handler.cpp:162] ShouldTriggerActionWithDetectedAction(): SHORT press match for 'short_press' - shouldTrigger=YES
[ 55817][I][action_handler.cpp:181] ExecutePendingActions(): ExecutePendingActions: Executing triggered action 'short_press' (type: SHORT)
[ 55830][I][action_handler.cpp:185] ExecutePendingActions(): Executing injected SHORT press function for action 'short_press'
[ 55842][V][config_panel.cpp:638] ConfigPanelShortPress(): ConfigPanelShortPress() called
[ 55851][I][config_panel.cpp:686] HandleShortPress(): ConfigPanel: Cycled to menu item 2: Splash: On (state: MainMenu)
[ 55862][V][config_component.cpp:108] SetCurrentIndex(): SetCurrentIndex() called
[ 55870][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 55881][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 55906][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 55931][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 55957][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 55985][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 56008][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 56018][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 56027][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 56040][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 56047][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 56059][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 56067][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 56080][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 56089][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 56096][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 56105][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 56113][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 56120][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 56128][V][config_panel.cpp:98] Update(): Update() called
[ 56134][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 56327][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 56334][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 56356][V][main.cpp:260] loop(): Main loop iteration completed
[ 56363][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 56371][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 56381][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 56388][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 56398][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 56407][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 56416][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 56425][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 56438][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 56448][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 56457][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 56470][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 56477][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 56489][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 56497][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 56510][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 56519][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 56526][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 56535][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 56543][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 56550][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 56558][V][config_panel.cpp:98] Update(): Update() called
[ 56564][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 56573][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 56579][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 56602][V][main.cpp:260] loop(): Main loop iteration completed
[ 56609][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 56617][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 56627][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 56634][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 56644][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 56653][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 56662][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 56671][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 56684][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 56694][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 56703][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 56716][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 56723][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [56723 ms]: GPIO=LOW, current=LOW, previous=LOW, initialized=true
[ 56736][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 56749][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 56756][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 56769][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 56778][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 56785][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 56794][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 56802][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 56809][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 56817][V][config_panel.cpp:98] Update(): Update() called
[ 56823][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 56832][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 56838][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 56861][V][main.cpp:260] loop(): Main loop iteration completed
[ 56868][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 112, UI state: IDLE, panel: ConfigPanel
[ 56878][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 56886][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 56896][V][action_handler.cpp:46] Process(): Process() called
[ 56903][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 56909][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = HIGH
[ 56919][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[T] ButtonSensor: PRESS STARTED at 56929 ms (GPIO HIGH detected)
[ 56929][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 56943][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 56952][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 56961][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 56968][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 56977][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 56987][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 56996][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 57005][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=RELEASED, raw_gpio=HIGH, sensor_valid=YES
[T] Button press started
[ 57018][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=true, endTime=0
[ 57032][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 57043][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 57051][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 57064][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 57071][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 57084][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 57091][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 57104][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 57113][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 57120][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 57129][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 57137][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 57144][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 57152][V][config_panel.cpp:98] Update(): Update() called
[ 57158][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 57167][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 57173][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 57196][V][main.cpp:260] loop(): Main loop iteration completed
[ 57203][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 57211][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 57221][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 57228][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 57238][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 57248][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 57256][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 57265][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 57278][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 57288][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 57297][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 57310][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 57317][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 57329][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 57337][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 57350][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 57359][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 57366][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 57375][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 57383][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 57390][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 57398][V][config_panel.cpp:98] Update(): Update() called
[ 57404][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 57413][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 57419][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 57442][V][main.cpp:260] loop(): Main loop iteration completed
[ 57449][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 57457][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 57467][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 57474][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 57484][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 57494][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 57502][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 57511][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 57524][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 57534][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 57543][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 57556][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 57563][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 57575][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 57583][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 57596][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 57605][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 57612][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 57621][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 57629][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 57636][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 57644][V][config_panel.cpp:98] Update(): Update() called
[ 57650][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 57659][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 57665][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 57688][V][main.cpp:260] loop(): Main loop iteration completed
[ 57695][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 57703][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 57713][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 57720][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[T] ButtonSensor: PRESS ENDED after 801 ms (GPIO LOW detected)
[T] ButtonSensor: ACTION DETECTED: SHORT_PRESS (actionReady=true)
[T] ButtonSensor: Should trigger 'short_press' action
[ 57735][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 57755][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 57764][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 57772][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 57779][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 57789][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 57799][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 57807][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 57816][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=PRESSED, raw_gpio=LOW, sensor_valid=YES
[T] Button press ended
[ 57829][I][action_handler.cpp:286] DetectButtonAction(): DetectButtonAction: Duration=811 ms, Action=SHORT_PRESS
[T] Button action detected: SHORT_PRESS
[ 57842][V][action_handler.cpp:162] ShouldTriggerActionWithDetectedAction(): SHORT press match for 'short_press' - shouldTrigger=YES
[ 57857][I][action_handler.cpp:181] ExecutePendingActions(): ExecutePendingActions: Executing triggered action 'short_press' (type: SHORT)
[ 57870][I][action_handler.cpp:185] ExecutePendingActions(): Executing injected SHORT press function for action 'short_press'
[ 57882][V][config_panel.cpp:638] ConfigPanelShortPress(): ConfigPanelShortPress() called
[ 57891][I][config_panel.cpp:686] HandleShortPress(): ConfigPanel: Cycled to menu item 3: Splash T: 1500ms (state: MainMenu)
[ 57903][V][config_component.cpp:108] SetCurrentIndex(): SetCurrentIndex() called
[ 57911][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 57921][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 57946][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 57970][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 57999][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 58024][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 58046][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 58057][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 58066][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 58078][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 58086][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 58098][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 58106][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 58118][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 58127][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 58134][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 58143][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 58151][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 58158][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 58166][V][config_panel.cpp:98] Update(): Update() called
[ 58172][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 58367][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 58374][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 58396][V][main.cpp:260] loop(): Main loop iteration completed
[ 58403][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 58411][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 58421][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 58428][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 58438][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 58447][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 58456][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 58465][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 58478][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 58488][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 58497][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 58510][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 58517][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 58529][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 58537][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 58550][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 58559][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 58566][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 58575][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 58583][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 58590][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 58598][V][config_panel.cpp:98] Update(): Update() called
[ 58604][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 58613][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 58619][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 58642][V][main.cpp:260] loop(): Main loop iteration completed
[ 58649][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 58657][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 58667][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 58674][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 58684][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 58693][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 58702][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 58711][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 58724][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 58734][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 58743][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 58756][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 58763][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [58763 ms]: GPIO=LOW, current=LOW, previous=LOW, initialized=true
[ 58776][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 58789][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 58796][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 58809][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 58818][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 58825][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 58834][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 58842][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 58849][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 58857][V][config_panel.cpp:98] Update(): Update() called
[ 58863][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 58872][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 58878][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 58901][V][main.cpp:260] loop(): Main loop iteration completed
[ 58908][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 118, UI state: IDLE, panel: ConfigPanel
[ 58918][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 58926][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 58936][V][action_handler.cpp:46] Process(): Process() called
[ 58943][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 58949][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = HIGH
[ 58959][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[T] ButtonSensor: PRESS STARTED at 58969 ms (GPIO HIGH detected)
[ 58969][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 58983][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 58992][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 59001][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 59008][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 59017][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 59027][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 59036][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 59045][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=RELEASED, raw_gpio=HIGH, sensor_valid=YES
[T] Button press started
[ 59058][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=true, endTime=0
[ 59072][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 59083][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 59091][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 59104][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 59111][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 59124][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 59131][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 59144][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 59153][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 59160][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 59169][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 59177][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 59184][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 59192][V][config_panel.cpp:98] Update(): Update() called
[ 59198][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 59207][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 59213][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 59236][V][main.cpp:260] loop(): Main loop iteration completed
[ 59243][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 59251][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 59261][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 59268][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 59278][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 59288][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 59296][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 59305][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 59318][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 59328][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 59337][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 59350][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 59357][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 59369][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 59377][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 59390][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 59399][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 59406][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 59415][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 59423][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 59430][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 59438][V][config_panel.cpp:98] Update(): Update() called
[ 59444][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 59453][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 59459][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 59482][V][main.cpp:260] loop(): Main loop iteration completed
[ 59489][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 59497][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 59507][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 59514][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[T] ButtonSensor: PRESS ENDED after 555 ms (GPIO LOW detected)
[T] ButtonSensor: ACTION DETECTED: SHORT_PRESS (actionReady=true)
[T] ButtonSensor: Should trigger 'short_press' action
[ 59529][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 59549][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 59558][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 59566][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 59573][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 59583][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 59593][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 59601][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 59610][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=PRESSED, raw_gpio=LOW, sensor_valid=YES
[T] Button press ended
[ 59623][I][action_handler.cpp:286] DetectButtonAction(): DetectButtonAction: Duration=565 ms, Action=SHORT_PRESS
[T] Button action detected: SHORT_PRESS
[ 59636][V][action_handler.cpp:162] ShouldTriggerActionWithDetectedAction(): SHORT press match for 'short_press' - shouldTrigger=YES
[ 59651][I][action_handler.cpp:181] ExecutePendingActions(): ExecutePendingActions: Executing triggered action 'short_press' (type: SHORT)
[ 59664][I][action_handler.cpp:185] ExecutePendingActions(): Executing injected SHORT press function for action 'short_press'
[ 59676][V][config_panel.cpp:638] ConfigPanelShortPress(): ConfigPanelShortPress() called
[ 59685][I][config_panel.cpp:686] HandleShortPress(): ConfigPanel: Cycled to menu item 4: Rate: 500ms (state: MainMenu)
[ 59696][V][config_component.cpp:108] SetCurrentIndex(): SetCurrentIndex() called
[ 59704][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 59714][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 59739][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 59766][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 59792][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 59816][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 59837][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 59847][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 59856][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 59869][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 59876][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 59888][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 59896][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 59908][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 59917][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 59924][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 59933][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 59941][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 59948][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 59956][V][config_panel.cpp:98] Update(): Update() called
[ 59962][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 60151][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 60157][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 60180][V][main.cpp:260] loop(): Main loop iteration completed
[ 60187][I][main.cpp:203] loop(): === Periodic System Diagnostics ===
[ 60194][I][main.cpp:208] loop(): Interrupts: 7 registered, 120 evaluations, 0 executions
[ 60203][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 60211][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 60221][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 60228][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 60238][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 60247][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 60256][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 60265][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 60278][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 60288][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 60297][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 60310][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 60317][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 60329][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 60337][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 60350][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 60359][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 60366][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 60375][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 60383][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 60390][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 60398][V][config_panel.cpp:98] Update(): Update() called
[ 60404][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 60413][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 60419][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 60442][V][main.cpp:260] loop(): Main loop iteration completed
[ 60449][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 60457][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 60467][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 60474][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 60484][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 60493][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 60502][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 60511][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 60524][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 60534][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 60543][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 60556][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 60563][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 60575][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 60583][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 60596][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 60605][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 60612][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 60621][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 60629][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 60636][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 60644][V][config_panel.cpp:98] Update(): Update() called
[ 60650][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 60659][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 60665][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 60688][V][main.cpp:260] loop(): Main loop iteration completed
[ 60695][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 60703][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 60713][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 60720][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[T] ButtonSensor: PRESS STARTED at 60730 ms (GPIO HIGH detected)
[ 60730][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 60745][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 60753][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 60762][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 60769][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 60779][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 60788][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 60797][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 60806][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=RELEASED, raw_gpio=HIGH, sensor_valid=YES
[T] Button press started
[ 60819][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=true, endTime=0
[ 60833][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 60844][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 60852][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 60865][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 60872][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [60872 ms]: GPIO=LOW, current=LOW, previous=LOW, initialized=true
[ 60886][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 60898][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 60906][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 60918][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 60927][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 60934][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 60943][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 60951][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 60958][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 60966][V][config_panel.cpp:98] Update(): Update() called
[ 60972][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 60981][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 60987][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 61010][V][main.cpp:260] loop(): Main loop iteration completed
[ 61017][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 124, UI state: IDLE, panel: ConfigPanel
[ 61027][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 61035][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 61045][V][action_handler.cpp:46] Process(): Process() called
[ 61052][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 61058][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = HIGH
[ 61068][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 61078][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 61087][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 61096][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 61105][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 61117][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 61128][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 61137][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 61149][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 61157][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 61169][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 61177][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 61189][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 61198][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 61205][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 61214][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 61222][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 61229][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 61237][V][config_panel.cpp:98] Update(): Update() called
[ 61243][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 61252][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 61258][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 61281][V][main.cpp:260] loop(): Main loop iteration completed
[ 61288][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 61296][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 61306][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 61313][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 61323][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 61333][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 61341][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 61350][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 61363][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 61373][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 61382][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 61395][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 61402][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 61414][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 61422][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 61435][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 61444][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 61451][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 61460][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 61468][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 61475][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 61483][V][config_panel.cpp:98] Update(): Update() called
[ 61489][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 61498][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 61504][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 61527][V][main.cpp:260] loop(): Main loop iteration completed
[ 61534][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 61542][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 61552][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 61559][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[T] ButtonSensor: PRESS ENDED after 839 ms (GPIO LOW detected)
[T] ButtonSensor: ACTION DETECTED: SHORT_PRESS (actionReady=true)
[T] ButtonSensor: Should trigger 'short_press' action
[ 61574][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 61594][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 61603][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 61611][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 61618][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 61628][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 61638][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 61646][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 61655][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=PRESSED, raw_gpio=LOW, sensor_valid=YES
[T] Button press ended
[ 61668][I][action_handler.cpp:286] DetectButtonAction(): DetectButtonAction: Duration=849 ms, Action=SHORT_PRESS
[T] Button action detected: SHORT_PRESS
[ 61681][V][action_handler.cpp:162] ShouldTriggerActionWithDetectedAction(): SHORT press match for 'short_press' - shouldTrigger=YES
[ 61696][I][action_handler.cpp:181] ExecutePendingActions(): ExecutePendingActions: Executing triggered action 'short_press' (type: SHORT)
[ 61709][I][action_handler.cpp:185] ExecutePendingActions(): Executing injected SHORT press function for action 'short_press'
[ 61721][V][config_panel.cpp:638] ConfigPanelShortPress(): ConfigPanelShortPress() called
[ 61730][I][config_panel.cpp:686] HandleShortPress(): ConfigPanel: Cycled to menu item 5: Press: Bar (state: MainMenu)
[ 61741][V][config_component.cpp:108] SetCurrentIndex(): SetCurrentIndex() called
[ 61749][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 61760][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 61787][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 61812][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 61837][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 61859][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 61882][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 61892][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 61901][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 61914][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 61921][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 61933][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 61941][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 61954][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 61963][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 61970][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 61979][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 61987][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 61994][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 62002][V][config_panel.cpp:98] Update(): Update() called
[ 62008][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 62196][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 62202][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 62224][V][main.cpp:260] loop(): Main loop iteration completed
[ 62231][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 62239][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 62249][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 62256][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 62266][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 62275][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 62284][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 62293][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 62306][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 62316][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 62325][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 62338][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 62345][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 62357][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 62365][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 62378][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 62387][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 62394][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 62403][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 62411][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 62418][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 62426][V][config_panel.cpp:98] Update(): Update() called
[ 62432][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 62441][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 62447][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 62470][V][main.cpp:260] loop(): Main loop iteration completed
[ 62477][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 62485][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 62495][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 62502][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[T] ButtonSensor: PRESS STARTED at 62512 ms (GPIO HIGH detected)
[ 62512][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 62527][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 62535][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 62544][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 62551][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 62561][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 62570][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 62579][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 62588][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=RELEASED, raw_gpio=HIGH, sensor_valid=YES
[T] Button press started
[ 62601][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=true, endTime=0
[ 62615][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 62626][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 62634][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 62647][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 62654][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 62667][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 62674][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 62687][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 62696][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 62703][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 62712][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 62720][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 62727][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 62735][V][config_panel.cpp:98] Update(): Update() called
[ 62741][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 62750][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 62756][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 62779][V][main.cpp:260] loop(): Main loop iteration completed
[ 62786][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 62794][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 62804][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 62811][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 62821][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 62831][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 62839][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 62848][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 62861][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 62871][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 62880][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 62893][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 62900][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [62900 ms]: GPIO=LOW, current=LOW, previous=LOW, initialized=true
[ 62913][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 62926][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 62933][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 62946][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 62955][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 62962][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 62971][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 62979][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 62986][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 62994][V][config_panel.cpp:98] Update(): Update() called
[ 63000][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 63009][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 63015][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 63038][V][main.cpp:260] loop(): Main loop iteration completed
[ 63045][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 130, UI state: IDLE, panel: ConfigPanel
[ 63055][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 63063][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 63073][V][action_handler.cpp:46] Process(): Process() called
[ 63080][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 63086][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = HIGH
[ 63096][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 63106][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 63115][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 63124][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 63133][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 63140][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[T] ButtonSensor: PRESS ENDED after 637 ms (GPIO LOW detected)
[T] ButtonSensor: ACTION DETECTED: SHORT_PRESS (actionReady=true)
[T] ButtonSensor: Should trigger 'short_press' action
[ 63155][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 63175][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 63183][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 63192][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=PRESSED, raw_gpio=LOW, sensor_valid=YES
[T] Button press ended
[ 63205][I][action_handler.cpp:286] DetectButtonAction(): DetectButtonAction: Duration=604 ms, Action=SHORT_PRESS
[T] Button action detected: SHORT_PRESS
[ 63218][V][action_handler.cpp:162] ShouldTriggerActionWithDetectedAction(): SHORT press match for 'short_press' - shouldTrigger=YES
[ 63233][I][action_handler.cpp:181] ExecutePendingActions(): ExecutePendingActions: Executing triggered action 'short_press' (type: SHORT)
[ 63246][I][action_handler.cpp:185] ExecutePendingActions(): Executing injected SHORT press function for action 'short_press'
[ 63258][V][config_panel.cpp:638] ConfigPanelShortPress(): ConfigPanelShortPress() called
[ 63267][I][config_panel.cpp:686] HandleShortPress(): ConfigPanel: Cycled to menu item 6: Temp: C (state: MainMenu)
[ 63278][V][config_component.cpp:108] SetCurrentIndex(): SetCurrentIndex() called
[ 63286][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 63296][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 63320][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 63344][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 63367][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 63391][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 63410][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 63421][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 63429][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 63442][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 63449][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 63462][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 63469][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 63482][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 63491][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 63498][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 63507][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 63515][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 63522][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 63530][V][config_panel.cpp:98] Update(): Update() called
[ 63536][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 63715][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 63722][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 63744][V][main.cpp:260] loop(): Main loop iteration completed
[ 63751][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 63759][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 63769][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 63776][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 63786][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 63795][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 63804][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 63813][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 63826][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 63836][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 63845][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 63858][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 63865][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 63877][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 63885][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 63898][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 63907][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 63914][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 63923][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 63931][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 63938][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 63946][V][config_panel.cpp:98] Update(): Update() called
[ 63952][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 63961][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 63967][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 63990][V][main.cpp:260] loop(): Main loop iteration completed
[ 63997][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 64005][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 64015][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 64022][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 64032][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 64041][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 64050][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 64059][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 64072][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 64082][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 64091][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 64104][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 64111][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 64123][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 64131][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 64144][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 64153][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 64160][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 64169][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 64177][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 64184][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 64192][V][config_panel.cpp:98] Update(): Update() called
[ 64198][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 64207][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 64213][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 64236][V][main.cpp:260] loop(): Main loop iteration completed
[ 64243][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 64251][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 64261][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 64268][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[T] ButtonSensor: PRESS STARTED at 64278 ms (GPIO HIGH detected)
[ 64278][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 64293][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 64301][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 64310][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 64317][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 64327][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 64336][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 64345][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 64354][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=RELEASED, raw_gpio=HIGH, sensor_valid=YES
[T] Button press started
[ 64367][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=true, endTime=0
[ 64381][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 64392][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 64400][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 64413][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 64420][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 64433][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 64440][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 64453][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 64462][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 64469][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 64478][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 64486][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 64493][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 64501][V][config_panel.cpp:98] Update(): Update() called
[ 64507][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 64516][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 64522][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 64545][V][main.cpp:260] loop(): Main loop iteration completed
[ 64552][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 64560][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 64570][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 64577][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 64587][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 64597][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 64605][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 64614][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 64627][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 64637][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 64646][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 64659][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 64666][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 64678][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 64686][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 64699][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 64708][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 64715][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 64724][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 64732][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 64739][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 64747][V][config_panel.cpp:98] Update(): Update() called
[ 64753][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 64762][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 64768][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 64791][V][main.cpp:260] loop(): Main loop iteration completed
[ 64798][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 64806][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 64816][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 64823][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[T] ButtonSensor: PRESS ENDED after 555 ms (GPIO LOW detected)
[T] ButtonSensor: ACTION DETECTED: SHORT_PRESS (actionReady=true)
[T] ButtonSensor: Should trigger 'short_press' action
[ 64838][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 64858][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 64867][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 64875][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 64882][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 64892][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 64902][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 64910][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 64919][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=PRESSED, raw_gpio=LOW, sensor_valid=YES
[T] Button press ended
[ 64932][I][action_handler.cpp:286] DetectButtonAction(): DetectButtonAction: Duration=565 ms, Action=SHORT_PRESS
[T] Button action detected: SHORT_PRESS
[ 64945][V][action_handler.cpp:162] ShouldTriggerActionWithDetectedAction(): SHORT press match for 'short_press' - shouldTrigger=YES
[ 64960][I][action_handler.cpp:181] ExecutePendingActions(): ExecutePendingActions: Executing triggered action 'short_press' (type: SHORT)
[ 64973][I][action_handler.cpp:185] ExecutePendingActions(): Executing injected SHORT press function for action 'short_press'
[ 64985][V][config_panel.cpp:638] ConfigPanelShortPress(): ConfigPanelShortPress() called
[ 64994][I][config_panel.cpp:686] HandleShortPress(): ConfigPanel: Cycled to menu item 7: Calibration (state: MainMenu)
[ 65005][V][config_component.cpp:108] SetCurrentIndex(): SetCurrentIndex() called
[ 65013][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 65023][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 65047][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 65069][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 65094][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 65114][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 65138][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 65149][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 65158][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 65170][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 65178][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [65178 ms]: GPIO=LOW, current=LOW, previous=LOW, initialized=true
[ 65191][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 65203][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 65211][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 65223][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 65232][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 65239][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 65248][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 65256][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 65263][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 65271][V][config_panel.cpp:98] Update(): Update() called
[ 65277][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 65459][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 65465][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 65488][V][main.cpp:260] loop(): Main loop iteration completed
[ 65495][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 136, UI state: IDLE, panel: ConfigPanel
[ 65505][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 65513][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 65523][V][action_handler.cpp:46] Process(): Process() called
[ 65530][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 65536][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = LOW
[ 65546][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 65555][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 65565][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 65574][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 65583][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 65596][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 65606][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 65615][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 65628][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 65635][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 65647][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 65655][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 65668][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 65677][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 65684][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 65693][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 65701][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 65708][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 65716][V][config_panel.cpp:98] Update(): Update() called
[ 65722][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 65731][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 65737][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 65760][V][main.cpp:260] loop(): Main loop iteration completed
[ 65767][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 65775][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 65785][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 65792][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 65802][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 65811][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 65820][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 65829][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 65842][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 65852][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 65861][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 65874][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 65881][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 65893][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 65901][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 65914][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 65923][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 65930][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 65939][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 65947][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 65954][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 65962][V][config_panel.cpp:98] Update(): Update() called
[ 65968][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 65977][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 65983][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 66006][V][main.cpp:260] loop(): Main loop iteration completed
[ 66013][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 66021][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 66031][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 66038][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[T] ButtonSensor: PRESS STARTED at 66048 ms (GPIO HIGH detected)
[ 66048][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 66063][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 66071][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 66080][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 66087][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 66097][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 66106][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 66115][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 66124][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=RELEASED, raw_gpio=HIGH, sensor_valid=YES
[T] Button press started
[ 66137][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=true, endTime=0
[ 66151][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 66162][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 66170][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 66183][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 66190][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 66203][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 66210][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 66223][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 66232][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 66239][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 66248][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 66256][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 66263][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 66271][V][config_panel.cpp:98] Update(): Update() called
[ 66277][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 66286][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 66292][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 66315][V][main.cpp:260] loop(): Main loop iteration completed
[ 66322][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 66330][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 66340][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 66347][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 66357][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 66367][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 66375][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 66384][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 66397][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 66407][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 66416][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 66429][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 66436][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 66448][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 66456][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 66469][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 66478][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 66485][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 66494][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 66502][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 66509][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 66517][V][config_panel.cpp:98] Update(): Update() called
[ 66523][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 66532][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 66538][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 66561][V][main.cpp:260] loop(): Main loop iteration completed
[ 66568][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 66576][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 66586][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 66593][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[T] ButtonSensor: PRESS ENDED after 555 ms (GPIO LOW detected)
[T] ButtonSensor: ACTION DETECTED: SHORT_PRESS (actionReady=true)
[T] ButtonSensor: Should trigger 'short_press' action
[ 66608][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 66628][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 66637][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 66645][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 66652][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 66662][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 66672][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 66680][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 66689][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=PRESSED, raw_gpio=LOW, sensor_valid=YES
[T] Button press ended
[ 66702][I][action_handler.cpp:286] DetectButtonAction(): DetectButtonAction: Duration=565 ms, Action=SHORT_PRESS
[T] Button action detected: SHORT_PRESS
[ 66715][V][action_handler.cpp:162] ShouldTriggerActionWithDetectedAction(): SHORT press match for 'short_press' - shouldTrigger=YES
[ 66730][I][action_handler.cpp:181] ExecutePendingActions(): ExecutePendingActions: Executing triggered action 'short_press' (type: SHORT)
[ 66743][I][action_handler.cpp:185] ExecutePendingActions(): Executing injected SHORT press function for action 'short_press'
[ 66755][V][config_panel.cpp:638] ConfigPanelShortPress(): ConfigPanelShortPress() called
[ 66764][I][config_panel.cpp:686] HandleShortPress(): ConfigPanel: Cycled to menu item 8: Exit (state: MainMenu)
[T] ConfigPanel: Exit option highlighted
[ 66775][V][config_component.cpp:108] SetCurrentIndex(): SetCurrentIndex() called
[ 66786][V][config_component.cpp:296] UpdateMenuDisplay(): UpdateMenuDisplay() called
[ 66796][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 66818][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 66841][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 66863][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 66889][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 66912][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 66923][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 66932][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 66944][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 66952][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 66964][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 66972][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 66984][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 66993][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 67000][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 67009][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 67017][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 67024][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 67032][V][config_panel.cpp:98] Update(): Update() called
[ 67038][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 67218][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 67225][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 67247][V][main.cpp:260] loop(): Main loop iteration completed
[ 67254][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 67262][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 67272][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 67279][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 67289][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 67298][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 67307][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 67316][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 67329][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 67339][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 67348][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 67361][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 67368][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [67368 ms]: GPIO=LOW, current=LOW, previous=LOW, initialized=true
[ 67381][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 67394][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 67401][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 67414][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 67423][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 67430][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 67439][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 67447][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 67454][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 67462][V][config_panel.cpp:98] Update(): Update() called
[ 67468][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 67477][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 67483][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 67506][V][main.cpp:260] loop(): Main loop iteration completed
[ 67513][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 142, UI state: IDLE, panel: ConfigPanel
[ 67523][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 67531][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 67541][V][action_handler.cpp:46] Process(): Process() called
[ 67548][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 67554][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = LOW
[ 67564][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 67573][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 67583][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 67592][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 67601][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=0
[ 67614][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 67624][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 67633][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 67646][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 67653][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 67665][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 67673][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 67686][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 67695][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 67702][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 67711][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 67719][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 67726][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 67734][V][config_panel.cpp:98] Update(): Update() called
[ 67740][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 67749][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 67755][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 67778][V][main.cpp:260] loop(): Main loop iteration completed
[ 67785][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 67793][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 67803][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 67810][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[T] ButtonSensor: PRESS STARTED at 67820 ms (GPIO HIGH detected)
[ 67820][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 67835][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 67843][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 67852][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 67859][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 67869][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 67878][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 67887][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 67896][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=RELEASED, raw_gpio=HIGH, sensor_valid=YES
[T] Button press started
[ 67909][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=true, endTime=0
[ 67923][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 67934][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 67942][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 67955][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 67962][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 67975][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 67982][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 67995][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 68004][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 68011][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 68020][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 68028][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 68035][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 68043][V][config_panel.cpp:98] Update(): Update() called
[ 68049][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 68058][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 68064][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 68087][V][main.cpp:260] loop(): Main loop iteration completed
[ 68094][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 68102][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 68112][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 68119][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 68129][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 68139][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 68147][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 68156][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 68169][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 68179][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 68188][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 68201][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 68208][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 68220][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 68228][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 68241][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 68250][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 68257][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 68266][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 68274][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 68281][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 68289][V][config_panel.cpp:98] Update(): Update() called
[ 68295][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 68304][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 68310][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 68333][V][main.cpp:260] loop(): Main loop iteration completed
[ 68340][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 68348][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 68358][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 68365][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 68375][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 68385][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 68393][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 68402][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 68415][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 68425][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 68434][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 68447][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 68454][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 68466][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 68474][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 68487][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 68496][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 68503][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 68512][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 68520][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 68527][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 68535][V][config_panel.cpp:98] Update(): Update() called
[ 68541][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 68550][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 68556][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 68579][V][main.cpp:260] loop(): Main loop iteration completed
[ 68586][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 68594][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 68604][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 68611][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 68621][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 68631][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 68639][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 68648][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 68661][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 68671][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 68680][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 68693][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 68700][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 68712][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 68720][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 68733][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 68742][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 68749][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 68758][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 68766][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 68773][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 68781][V][config_panel.cpp:98] Update(): Update() called
[ 68787][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 68796][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 68802][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 68825][V][main.cpp:260] loop(): Main loop iteration completed
[ 68832][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 68840][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 68850][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 68857][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 68867][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 68877][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 68885][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 68894][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 68901][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 68911][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 68920][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 68929][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 68938][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=PRESSED, previous=PRESSED, raw_gpio=HIGH, sensor_valid=YES
[ 68951][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 68964][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 68974][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 68983][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 68996][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 69003][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 69015][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 69023][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 69036][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 69045][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 69052][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 69061][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 69069][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 69076][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 69084][V][config_panel.cpp:98] Update(): Update() called
[ 69090][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 69099][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 69105][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 69128][V][main.cpp:260] loop(): Main loop iteration completed
[ 69135][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 69143][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 69153][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 69160][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 69170][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 69180][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 69188][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 69197][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 69210][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 69220][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 69229][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 69242][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 69249][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 69261][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 69269][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 69282][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 69291][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 69298][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 69307][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 69315][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 69322][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 69330][V][config_panel.cpp:98] Update(): Update() called
[ 69336][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 69345][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 69351][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 69374][V][main.cpp:260] loop(): Main loop iteration completed
[ 69381][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 69389][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 69399][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 69406][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 69416][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = HIGH
[ 69426][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning true
[ 69434][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=PRESSED
[ 69443][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=true, pressed=true, endTime=0
[ 69456][I][action_handler.cpp:305] DetectLongPressDuringHold(): DetectLongPressDuringHold: Long press detected during hold at 1547 ms
[T] Button action detected: LONG_PRESS
[ 69469][V][action_handler.cpp:168] ShouldTriggerActionWithDetectedAction(): LONG press match for 'long_press' - shouldTrigger=YES
[ 69484][I][action_handler.cpp:181] ExecutePendingActions(): ExecutePendingActions: Executing triggered action 'long_press' (type: LONG)
[ 69497][I][action_handler.cpp:190] ExecutePendingActions(): Executing injected LONG press function for action 'long_press'
[ 69509][V][config_panel.cpp:649] ConfigPanelLongPress(): ConfigPanelLongPress() called
[ 69517][I][config_panel.cpp:713] HandleLongPress(): ConfigPanel: Long press at index 8 (state: MainMenu)
[ 69527][I][config_panel.cpp:718] HandleLongPress(): Main menu: Executing current option
[ 69536][V][config_panel.cpp:110] ExecuteCurrentOption(): ExecuteCurrentOption() called
[ 69544][I][config_panel.cpp:120] ExecuteCurrentOption(): Executing option at index 8: 'Exit' (type: panel_exit, param: )
[ 69556][I][config_panel.cpp:132] ExecuteCurrentOption(): Exiting config panel - returning to restoration panel
[T] ConfigPanel: Executing exit function
[T] Panel transition requested: OemOilPanel
[ 69568][V][panel_manager.cpp:148] CreateAndLoadPanel(): Loading panel directly: OemOilPanel
[ 69583][V][panel_manager.cpp:156] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() called for: OemOilPanel
[ 69594][V][config_panel.cpp:20] ~ConfigPanel(): ~ConfigPanel() destructor called
[ 69605][V][panel_manager.cpp:87] CreatePanel(): CreatePanel() called for: OemOilPanel
[ 69613][V][panel_factory.cpp:29] CreateOemOilPanel(): CreateOemOilPanel() called
[ 69621][V][component_factory.cpp:15] Instance(): Instance() called
[ 69628][V][oil_pressure_sensor.cpp:13] OilPressureSensor(): OilPressureSensor() constructor called
[ 69638][V][oil_temperature_sensor.cpp:13] OilTemperatureSensor(): OilTemperatureSensor() constructor called
[ 69648][V][oem_oil_panel.cpp:20] OemOilPanel(): OemOilPanel constructor called
[ 69656][V][oem_oil_panel.cpp:513] SetManagers(): SetManagers() called
[ 69663][V][oem_oil_panel.cpp:527] SetPreferenceService(): SetPreferenceService() called
[ 69672][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 69682][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 69690][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 69697][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 69706][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 69714][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 69722][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 69731][V][oem_oil_panel.cpp:79] Init(): Init() called
[ 69737][V][lvgl_display_provider.cpp:27] CreateScreen(): CreateScreen() called
[ 69745][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[ 69754][V][oil_pressure_sensor.cpp:34] Init(): Init() called
[ 69760][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[T] Pressure reading: 3 Bar
[ 69768][V][oil_pressure_sensor.cpp:99] GetReading(): Pressure reading changed (raw: 1321)
[ 69779][V][oil_temperature_sensor.cpp:34] Init(): Init() called
[ 69785][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[T] Temperature reading: 77 C
[ 69793][V][oil_temperature_sensor.cpp:99] GetReading(): Temperature reading changed (raw: 2642)
[ 69804][I][oem_oil_panel.cpp:109] Init(): OemOilPanel initialization completed
[ 69812][I][panel_manager.cpp:239] CreateAndLoadPanelDirect(): PanelManager: About to call ApplyCurrentTheme for panel: OemOilPanel
[ 69825][I][style_manager.cpp:217] ApplyCurrentTheme(): StyleManager::ApplyCurrentTheme() called
[ 69834][V][style_manager.cpp:227] ApplyCurrentTheme(): Read theme from preferences: Night (cached: Day)
[T] StyleManager: Theme changed from Day to Night - applying new theme
[T] SetTheme() called
[ 69845][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 69859][I][panel_manager.cpp:241] CreateAndLoadPanelDirect(): PanelManager: ApplyCurrentTheme completed for panel: OemOilPanel
[ 69871][V][panel_manager.cpp:358] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions() called
[ 69881][I][panel_manager.cpp:383] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Extracted functions - short=0x400fbad4, long=0x400fc4d0, context=0x3ffb3b20
[ 69897][V][interrupt_manager.cpp:167] UpdatePanelFunctions(): UpdatePanelFunctions() called
[ 69906][I][interrupt_manager.cpp:176] UpdatePanelFunctions(): Updated panel functions in ActionHandler
[ 69916][I][panel_manager.cpp:395] UpdatePanelButtonFunctions(): UpdatePanelButtonFunctions: Successfully updated universal button interrupts with panel functions
[ 69931][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 69939][V][oem_oil_panel.cpp:116] Load(): Load() called
[ 69945][V][component_factory.cpp:28] CreateOilPressureComponent(): CreateOilPressureComponent() called
[ 69955][V][oem_oil_component.cpp:16] OemOilComponent(): OemOilComponent() constructor called
[ 69964][V][oem_oil_pressure_component.cpp:8] OemOilPressureComponent(): OemOilPressureComponent() constructor called
[ 69976][V][component_factory.cpp:34] CreateOilTemperatureComponent(): CreateOilTemperatureComponent() called
[ 69986][V][oem_oil_component.cpp:16] OemOilComponent(): OemOilComponent() constructor called
[ 69995][V][oem_oil_temperature_component.cpp:8] OemOilTemperatureComponent(): OemOilTemperatureComponent() constructor called
[ 70007][V][oem_oil_component.cpp:65] Render(): Render() called
[ 70013][V][lvgl_display_provider.cpp:61] CreateScale(): CreateScale() called
[ 70024][V][oem_oil_pressure_component.cpp:47] get_scale_mode(): get_scale_mode() called
[ 70033][V][oem_oil_pressure_component.cpp:55] get_angle_range(): get_angle_range() called
[ 70043][V][oem_oil_pressure_component.cpp:71] setup_danger_zone(): setup_danger_zone() called
[ 70052][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 70060][V][oem_oil_pressure_component.cpp:18] get_icon(): get_icon() called
[ 70075][V][oem_oil_pressure_component.cpp:80] get_icon_y_offset(): get_icon_y_offset() called
[ 70086][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 70102][V][oem_oil_pressure_component.cpp:89] get_label_angles(): get_label_angles() called
[ 70111][V][oem_oil_pressure_component.cpp:55] get_angle_range(): get_angle_range() called
[ 70125][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 70150][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 70159][V][oem_oil_component.cpp:65] Render(): Render() called
[ 70165][V][lvgl_display_provider.cpp:61] CreateScale(): CreateScale() called
[ 70176][V][oem_oil_temperature_component.cpp:47] get_scale_mode(): get_scale_mode() called
[ 70185][V][oem_oil_temperature_component.cpp:55] get_angle_range(): get_angle_range() called
[ 70195][V][oem_oil_temperature_component.cpp:89] setup_danger_zone(): setup_danger_zone() called
[ 70205][V][oem_oil_temperature_component.cpp:77] map_value_for_display(): map_value_for_display: max_val=120
[ 70215][V][oem_oil_temperature_component.cpp:80] map_value_for_display(): map_value_for_display: returning mapped value=0
[ 70227][V][oem_oil_temperature_component.cpp:77] map_value_for_display(): map_value_for_display: max_val=120
[ 70238][V][oem_oil_temperature_component.cpp:80] map_value_for_display(): map_value_for_display: returning mapped value=20
[ 70250][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 70258][V][oem_oil_temperature_component.cpp:18] get_icon(): get_icon() called
[ 70301][V][oem_oil_temperature_component.cpp:111] get_icon_y_offset(): get_icon_y_offset() called
[ 70313][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 70329][V][oem_oil_temperature_component.cpp:120] get_label_angles(): get_label_angles() called
[ 70338][V][oem_oil_temperature_component.cpp:55] get_angle_range(): get_angle_range() called
[ 70353][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 70378][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 70393][V][oem_oil_temperature_component.cpp:77] map_value_for_display(): map_value_for_display: max_val=120
[ 70404][V][oem_oil_temperature_component.cpp:80] map_value_for_display(): map_value_for_display: returning mapped value=120
[ 70423][V][oem_oil_component.cpp:98] Refresh(): Refresh() called
[ 70429][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 70437][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 70445][V][oem_oil_component.cpp:98] Refresh(): Refresh() called
[ 70452][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 70459][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 70469][V][oem_oil_panel.cpp:573] ShowPanelCompletionCallback(): ShowPanelCompletionCallback() called
[ 70478][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 70487][V][style_manager.cpp:69] ApplyThemeToScreen(): ApplyThemeToScreen() called
[T] OemOilPanel loaded successfully
[ 71043][V][panel_manager.cpp:257] CreateAndLoadPanelDirect(): CreateAndLoadPanelDirect() completed
[ 71052][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 71063][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 71072][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 71084][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 71092][V][lock_sensor.cpp:82] HasStateChanged(): LOCK SENSOR DEBUG [71092 ms]: GPIO=LOW, current=LOW, previous=LOW, initialized=true
[ 71105][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 71117][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 71125][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 71137][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 71146][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 71153][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 71162][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 71170][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 71177][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 71185][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 71195][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 71203][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 71211][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 71219][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 71227][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 71236][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 71244][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[ 71252][V][oem_oil_panel.cpp:694] MapPressureValue(): MapPressureValue() returning: 13
[ 71261][I][oem_oil_panel.cpp:304] UpdateOilPressure(): Updating pressure from -1 to 13
[ 71269][V][oem_oil_component.cpp:98] Refresh(): Refresh() called
[ 71276][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 71285][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 71295][I][oem_oil_panel.cpp:331] UpdateOilPressure(): Initial pressure animation: starting from 0 to 13
[ 71305][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 71314][V][oem_oil_panel.cpp:637] ExecutePressureAnimationCallback(): ExecutePressureAnimationCallback() called with value: 0
[ 71330][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[ 71338][V][oem_oil_panel.cpp:787] MapTemperatureValue(): MapTemperatureValue() returning: 77
[ 71347][I][oem_oil_panel.cpp:412] UpdateOilTemperature(): Updating temperature from -1 to 77
[ 71356][V][oem_oil_component.cpp:98] Refresh(): Refresh() called
[ 71363][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 71372][V][style_manager.cpp:179] GetColours(): GetColours() called
[ 71382][I][oem_oil_panel.cpp:439] UpdateOilTemperature(): Initial temperature animation: starting from 0 to 77
[ 71393][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 71401][V][oem_oil_panel.cpp:659] ExecuteTemperatureAnimationCallback(): ExecuteTemperatureAnimationCallback() called with value: 0
[ 71414][V][oem_oil_temperature_component.cpp:77] map_value_for_display(): map_value_for_display: max_val=120
[ 71425][V][oem_oil_temperature_component.cpp:80] map_value_for_display(): map_value_for_display: returning mapped value=120
[ 71903][V][oem_oil_panel.cpp:659] ExecuteTemperatureAnimationCallback(): ExecuteTemperatureAnimationCallback() called with value: 77
[ 71916][V][oem_oil_temperature_component.cpp:77] map_value_for_display(): map_value_for_display: max_val=120
[ 71926][V][oem_oil_temperature_component.cpp:80] map_value_for_display(): map_value_for_display: returning mapped value=43
[ 71943][V][oem_oil_panel.cpp:637] ExecutePressureAnimationCallback(): ExecutePressureAnimationCallback() called with value: 13
[ 71959][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 71968][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 72348][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 72371][V][main.cpp:260] loop(): Main loop iteration completed
[ 72378][I][main.cpp:189] loop(): MAIN LOOP alive: iteration 150, UI state: IDLE, panel: OemOilPanel
[ 72388][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 72396][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 72406][V][action_handler.cpp:46] Process(): Process() called
[ 72413][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 72419][I][button_sensor.cpp:89] ReadButtonState(): ButtonSensor GPIO 32 continuous read = LOW
[ 72429][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[T] ButtonSensor: PRESS ENDED after 4618 ms (GPIO LOW detected)
[T] ButtonSensor: ACTION DETECTED: LONG_PRESS (actionReady=true)
[T] ButtonSensor: Should trigger 'long_press' action
[ 72444][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 72464][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 72472][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 72481][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 72488][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 72497][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 72507][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 72516][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 72525][I][action_handler.cpp:238] UpdateButtonState(): Button state: current=RELEASED, previous=PRESSED, raw_gpio=LOW, sensor_valid=YES
[T] Button press ended
[ 72538][I][action_handler.cpp:276] DetectButtonAction(): DetectButtonAction: Ignoring release after long press was triggered during hold
[ 72552][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 72563][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 72571][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 72584][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 72592][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 72604][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 72612][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 72624][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 72633][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 72640][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 72649][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 72657][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 72664][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 72672][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 72682][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 72690][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 72698][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 72706][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 72714][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 72723][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 72731][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[ 72739][V][oem_oil_panel.cpp:694] MapPressureValue(): MapPressureValue() returning: 13
[ 72748][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[ 72755][V][oem_oil_panel.cpp:787] MapTemperatureValue(): MapTemperatureValue() returning: 77
[ 72764][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 72773][V][oem_oil_panel.cpp:253] Update(): OemOilPanel update completed immediately (no animations)
[ 72783][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 72789][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
[ 72812][V][main.cpp:260] loop(): Main loop iteration completed
[ 72819][V][main.cpp:217] loop(): Calling interruptManager->Process() - UI state: IDLE
[ 72827][V][interrupt_manager.cpp:113] Process(): Processing ActionHandler - button timing runs always
[ 72837][V][button_sensor.cpp:32] GetReading(): GetReading() called
[ 72844][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 72854][V][button_sensor.cpp:93] ReadButtonState(): ButtonSensor::ReadButtonState() GPIO 32 = LOW
[ 72863][V][button_sensor.cpp:38] GetReading(): ButtonSensor::GetReading() returning false
[ 72872][V][action_handler.cpp:351] IsButtonPressed(): IsButtonPressed: reading=RELEASED
[ 72881][V][action_handler.cpp:270] DetectButtonAction(): DetectButtonAction: No action - prevPressed=false, pressed=false, endTime=72538
[ 72894][D][interrupt_manager.cpp:119] Process(): Processing TriggerHandler - UI is idle, polling GPIO sensors
[ 72905][V][key_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[T] KeyPresentSensor GPIO 25 poll: current=LOW, previous=LOW
[ 72913][V][key_not_present_sensor.cpp:51] HasStateChanged(): HasStateChanged() called
[ 72926][V][lock_sensor.cpp:64] HasStateChanged(): HasStateChanged() called
[ 72934][V][lock_sensor.cpp:114] HasStateChanged(): LOCK SENSOR DEBUG: DetectChange returned false, previousLockState_ now=LOW
[ 72946][V][lights_sensor.cpp:70] HasStateChanged(): HasStateChanged() called
[ 72954][V][debug_error_sensor.cpp:133] HasStateChanged(): HasStateChanged() called
[ 72966][D][interrupt_manager.cpp:121] Process(): TriggerHandler processing complete
[ 72975][V][main.cpp:219] loop(): interruptManager->Process() completed
[ 72982][V][error_manager.cpp:102] ShouldTriggerErrorPanel(): ShouldTriggerErrorPanel() called
[ 72991][V][error_manager.cpp:55] HasPendingErrors(): HasPendingErrors() called
[ 72999][V][panel_manager.cpp:303] UpdatePanel(): UpdatePanel() called
[ 73006][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: BUSY
[ 73014][V][oem_oil_panel.cpp:538] ApplyCurrentSensorSettings(): ApplyCurrentSensorSettings() called
[ 73024][V][oil_pressure_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 73032][V][oil_pressure_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 73040][V][oil_pressure_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 73048][V][oil_temperature_sensor.cpp:109] SetUpdateRate(): SetUpdateRate() called
[ 73056][V][oil_temperature_sensor.cpp:55] SetTargetUnit(): SetTargetUnit() called
[ 73065][V][oil_temperature_sensor.cpp:48] GetSupportedUnits(): GetSupportedUnits() called
[ 73073][V][oil_pressure_sensor.cpp:73] GetReading(): GetReading() called
[ 73081][V][oem_oil_panel.cpp:694] MapPressureValue(): MapPressureValue() returning: 13
[ 73089][V][oil_temperature_sensor.cpp:73] GetReading(): GetReading() called
[ 73097][V][oem_oil_panel.cpp:787] MapTemperatureValue(): MapTemperatureValue() returning: 77
[ 73106][V][panel_manager.cpp:317] SetUiState(): SetUiState() called with state: IDLE
[ 73115][V][oem_oil_panel.cpp:253] Update(): OemOilPanel update completed immediately (no animations)
[ 73124][V][main.cpp:256] loop(): Calling Ticker::handleLvTasks()
[ 73131][V][main.cpp:258] loop(): Calling Ticker::handleDynamicDelay()
